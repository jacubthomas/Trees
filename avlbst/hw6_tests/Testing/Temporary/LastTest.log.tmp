Start testing: Nov 16 06:06 UTC
----------------------------------------------------------
1/65 Testing: BST.ConstructionDestruction
1/65 Test: BST.ConstructionDestruction
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BST.ConstructionDestruction"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BST.ConstructionDestruction" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==11987== Memcheck, a memory error detector
==11987== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11987== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==11987== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BST.ConstructionDestruction
==11987== 
Running main() from gtest_main.cc
Note: Google Test filter = BST.ConstructionDestruction
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BST
[ RUN      ] BST.ConstructionDestruction
[       OK ] BST.ConstructionDestruction (17 ms)
[----------] 1 test from BST (28 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (77 ms total)
[  PASSED  ] 1 test.
==11987== 
==11987== HEAP SUMMARY:
==11987==     in use at exit: 0 bytes in 0 blocks
==11987==   total heap usage: 485 allocs, 485 frees, 131,367 bytes allocated
==11987== 
==11987== All heap blocks were freed -- no leaks are possible
==11987== 
==11987== For counts of detected and suppressed errors, rerun with: -v
==11987== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.37 sec
----------------------------------------------------------
Test Passed.
"BST.ConstructionDestruction" end time: Nov 16 06:06 UTC
"BST.ConstructionDestruction" time elapsed: 00:00:01
----------------------------------------------------------

2/65 Testing: BSTInsert.JustRoot
2/65 Test: BSTInsert.JustRoot
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTInsert.JustRoot"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTInsert.JustRoot" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==11988== Memcheck, a memory error detector
==11988== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11988== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==11988== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTInsert.JustRoot
==11988== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.JustRoot
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.JustRoot
[       OK ] BSTInsert.JustRoot (68 ms)
[----------] 1 test from BSTInsert (80 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (132 ms total)
[  PASSED  ] 1 test.
==11988== 
==11988== HEAP SUMMARY:
==11988==     in use at exit: 0 bytes in 0 blocks
==11988==   total heap usage: 487 allocs, 487 frees, 131,513 bytes allocated
==11988== 
==11988== All heap blocks were freed -- no leaks are possible
==11988== 
==11988== For counts of detected and suppressed errors, rerun with: -v
==11988== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.33 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.JustRoot" end time: Nov 16 06:06 UTC
"BSTInsert.JustRoot" time elapsed: 00:00:01
----------------------------------------------------------

3/65 Testing: BSTInsert.DoubleInsertLeft
3/65 Test: BSTInsert.DoubleInsertLeft
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTInsert.DoubleInsertLeft"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTInsert.DoubleInsertLeft" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==11989== Memcheck, a memory error detector
==11989== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11989== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==11989== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTInsert.DoubleInsertLeft
==11989== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.DoubleInsertLeft
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.DoubleInsertLeft
[       OK ] BSTInsert.DoubleInsertLeft (94 ms)
[----------] 1 test from BSTInsert (107 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (158 ms total)
[  PASSED  ] 1 test.
==11989== 
==11989== HEAP SUMMARY:
==11989==     in use at exit: 0 bytes in 0 blocks
==11989==   total heap usage: 489 allocs, 489 frees, 131,601 bytes allocated
==11989== 
==11989== All heap blocks were freed -- no leaks are possible
==11989== 
==11989== For counts of detected and suppressed errors, rerun with: -v
==11989== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.33 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.DoubleInsertLeft" end time: Nov 16 06:06 UTC
"BSTInsert.DoubleInsertLeft" time elapsed: 00:00:01
----------------------------------------------------------

4/65 Testing: BSTInsert.DoubleInsertRight
4/65 Test: BSTInsert.DoubleInsertRight
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTInsert.DoubleInsertRight"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTInsert.DoubleInsertRight" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==11990== Memcheck, a memory error detector
==11990== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11990== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==11990== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTInsert.DoubleInsertRight
==11990== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.DoubleInsertRight
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.DoubleInsertRight
[       OK ] BSTInsert.DoubleInsertRight (87 ms)
[----------] 1 test from BSTInsert (98 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (145 ms total)
[  PASSED  ] 1 test.
==11990== 
==11990== HEAP SUMMARY:
==11990==     in use at exit: 0 bytes in 0 blocks
==11990==   total heap usage: 489 allocs, 489 frees, 131,607 bytes allocated
==11990== 
==11990== All heap blocks were freed -- no leaks are possible
==11990== 
==11990== For counts of detected and suppressed errors, rerun with: -v
==11990== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.32 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.DoubleInsertRight" end time: Nov 16 06:06 UTC
"BSTInsert.DoubleInsertRight" time elapsed: 00:00:01
----------------------------------------------------------

5/65 Testing: BSTInsert.InsertZigZigLeft
5/65 Test: BSTInsert.InsertZigZigLeft
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTInsert.InsertZigZigLeft"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTInsert.InsertZigZigLeft" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==11991== Memcheck, a memory error detector
==11991== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11991== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==11991== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTInsert.InsertZigZigLeft
==11991== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.InsertZigZigLeft
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.InsertZigZigLeft
[       OK ] BSTInsert.InsertZigZigLeft (89 ms)
[----------] 1 test from BSTInsert (101 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (148 ms total)
[  PASSED  ] 1 test.
==11991== 
==11991== HEAP SUMMARY:
==11991==     in use at exit: 0 bytes in 0 blocks
==11991==   total heap usage: 491 allocs, 491 frees, 131,721 bytes allocated
==11991== 
==11991== All heap blocks were freed -- no leaks are possible
==11991== 
==11991== For counts of detected and suppressed errors, rerun with: -v
==11991== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.33 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.InsertZigZigLeft" end time: Nov 16 06:06 UTC
"BSTInsert.InsertZigZigLeft" time elapsed: 00:00:01
----------------------------------------------------------

6/65 Testing: BSTInsert.InsertZigZigRight
6/65 Test: BSTInsert.InsertZigZigRight
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTInsert.InsertZigZigRight"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTInsert.InsertZigZigRight" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==11992== Memcheck, a memory error detector
==11992== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11992== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==11992== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTInsert.InsertZigZigRight
==11992== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.InsertZigZigRight
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.InsertZigZigRight
[       OK ] BSTInsert.InsertZigZigRight (88 ms)
[----------] 1 test from BSTInsert (99 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (147 ms total)
[  PASSED  ] 1 test.
==11992== 
==11992== HEAP SUMMARY:
==11992==     in use at exit: 0 bytes in 0 blocks
==11992==   total heap usage: 491 allocs, 491 frees, 131,727 bytes allocated
==11992== 
==11992== All heap blocks were freed -- no leaks are possible
==11992== 
==11992== For counts of detected and suppressed errors, rerun with: -v
==11992== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.31 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.InsertZigZigRight" end time: Nov 16 06:06 UTC
"BSTInsert.InsertZigZigRight" time elapsed: 00:00:01
----------------------------------------------------------

7/65 Testing: BSTInsert.InsertZigZagLeft
7/65 Test: BSTInsert.InsertZigZagLeft
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTInsert.InsertZigZagLeft"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTInsert.InsertZigZagLeft" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==11993== Memcheck, a memory error detector
==11993== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11993== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==11993== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTInsert.InsertZigZagLeft
==11993== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.InsertZigZagLeft
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.InsertZigZagLeft
[       OK ] BSTInsert.InsertZigZagLeft (96 ms)
[----------] 1 test from BSTInsert (108 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (155 ms total)
[  PASSED  ] 1 test.
==11993== 
==11993== HEAP SUMMARY:
==11993==     in use at exit: 0 bytes in 0 blocks
==11993==   total heap usage: 491 allocs, 491 frees, 131,721 bytes allocated
==11993== 
==11993== All heap blocks were freed -- no leaks are possible
==11993== 
==11993== For counts of detected and suppressed errors, rerun with: -v
==11993== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.32 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.InsertZigZagLeft" end time: Nov 16 06:06 UTC
"BSTInsert.InsertZigZagLeft" time elapsed: 00:00:01
----------------------------------------------------------

8/65 Testing: BSTInsert.InsertZigZagRight
8/65 Test: BSTInsert.InsertZigZagRight
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTInsert.InsertZigZagRight"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTInsert.InsertZigZagRight" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==11994== Memcheck, a memory error detector
==11994== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11994== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==11994== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTInsert.InsertZigZagRight
==11994== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.InsertZigZagRight
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.InsertZigZagRight
[       OK ] BSTInsert.InsertZigZagRight (95 ms)
[----------] 1 test from BSTInsert (106 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (155 ms total)
[  PASSED  ] 1 test.
==11994== 
==11994== HEAP SUMMARY:
==11994==     in use at exit: 0 bytes in 0 blocks
==11994==   total heap usage: 491 allocs, 491 frees, 131,727 bytes allocated
==11994== 
==11994== All heap blocks were freed -- no leaks are possible
==11994== 
==11994== For counts of detected and suppressed errors, rerun with: -v
==11994== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.33 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.InsertZigZagRight" end time: Nov 16 06:06 UTC
"BSTInsert.InsertZigZagRight" time elapsed: 00:00:01
----------------------------------------------------------

9/65 Testing: BSTInsert.7Elements
9/65 Test: BSTInsert.7Elements
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTInsert.7Elements"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTInsert.7Elements" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==11995== Memcheck, a memory error detector
==11995== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11995== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==11995== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTInsert.7Elements
==11995== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.7Elements
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.7Elements
[       OK ] BSTInsert.7Elements (103 ms)
[----------] 1 test from BSTInsert (114 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (163 ms total)
[  PASSED  ] 1 test.
==11995== 
==11995== HEAP SUMMARY:
==11995==     in use at exit: 0 bytes in 0 blocks
==11995==   total heap usage: 499 allocs, 499 frees, 132,159 bytes allocated
==11995== 
==11995== All heap blocks were freed -- no leaks are possible
==11995== 
==11995== For counts of detected and suppressed errors, rerun with: -v
==11995== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.33 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.7Elements" end time: Nov 16 06:06 UTC
"BSTInsert.7Elements" time elapsed: 00:00:01
----------------------------------------------------------

10/65 Testing: BSTClear.Clear
10/65 Test: BSTClear.Clear
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTClear.Clear"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTClear.Clear" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==11996== Memcheck, a memory error detector
==11996== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11996== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==11996== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTClear.Clear
==11996== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTClear.Clear
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTClear
[ RUN      ] BSTClear.Clear
[       OK ] BSTClear.Clear (63 ms)
[----------] 1 test from BSTClear (74 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (123 ms total)
[  PASSED  ] 1 test.
==11996== 
==11996== HEAP SUMMARY:
==11996==     in use at exit: 0 bytes in 0 blocks
==11996==   total heap usage: 454 allocs, 454 frees, 130,428 bytes allocated
==11996== 
==11996== All heap blocks were freed -- no leaks are possible
==11996== 
==11996== For counts of detected and suppressed errors, rerun with: -v
==11996== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.29 sec
----------------------------------------------------------
Test Passed.
"BSTClear.Clear" end time: Nov 16 06:06 UTC
"BSTClear.Clear" time elapsed: 00:00:01
----------------------------------------------------------

11/65 Testing: BSTFind.InvalidFind
11/65 Test: BSTFind.InvalidFind
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTFind.InvalidFind"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTFind.InvalidFind" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==11997== Memcheck, a memory error detector
==11997== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11997== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==11997== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTFind.InvalidFind
==11997== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTFind.InvalidFind
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTFind
[ RUN      ] BSTFind.InvalidFind
[       OK ] BSTFind.InvalidFind (62 ms)
[----------] 1 test from BSTFind (73 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (124 ms total)
[  PASSED  ] 1 test.
==11997== 
==11997== HEAP SUMMARY:
==11997==     in use at exit: 0 bytes in 0 blocks
==11997==   total heap usage: 487 allocs, 487 frees, 131,479 bytes allocated
==11997== 
==11997== All heap blocks were freed -- no leaks are possible
==11997== 
==11997== For counts of detected and suppressed errors, rerun with: -v
==11997== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.29 sec
----------------------------------------------------------
Test Passed.
"BSTFind.InvalidFind" end time: Nov 16 06:06 UTC
"BSTFind.InvalidFind" time elapsed: 00:00:01
----------------------------------------------------------

12/65 Testing: BSTInsert.Duplicates
12/65 Test: BSTInsert.Duplicates
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTInsert.Duplicates"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTInsert.Duplicates" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==11998== Memcheck, a memory error detector
==11998== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11998== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==11998== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTInsert.Duplicates
==11998== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.Duplicates
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.Duplicates
[       OK ] BSTInsert.Duplicates (100 ms)
[----------] 1 test from BSTInsert (111 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (160 ms total)
[  PASSED  ] 1 test.
==11998== 
==11998== HEAP SUMMARY:
==11998==     in use at exit: 0 bytes in 0 blocks
==11998==   total heap usage: 493 allocs, 493 frees, 131,805 bytes allocated
==11998== 
==11998== All heap blocks were freed -- no leaks are possible
==11998== 
==11998== For counts of detected and suppressed errors, rerun with: -v
==11998== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.33 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.Duplicates" end time: Nov 16 06:06 UTC
"BSTInsert.Duplicates" time elapsed: 00:00:01
----------------------------------------------------------

13/65 Testing: BSTInsert.BasicRandom
13/65 Test: BSTInsert.BasicRandom
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTInsert.BasicRandom"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTInsert.BasicRandom" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==11999== Memcheck, a memory error detector
==11999== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11999== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==11999== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTInsert.BasicRandom
==11999== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.BasicRandom
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.BasicRandom
[       OK ] BSTInsert.BasicRandom (122 ms)
[----------] 1 test from BSTInsert (133 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (182 ms total)
[  PASSED  ] 1 test.
==11999== 
==11999== HEAP SUMMARY:
==11999==     in use at exit: 0 bytes in 0 blocks
==11999==   total heap usage: 506 allocs, 506 frees, 132,571 bytes allocated
==11999== 
==11999== All heap blocks were freed -- no leaks are possible
==11999== 
==11999== For counts of detected and suppressed errors, rerun with: -v
==11999== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.34 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.BasicRandom" end time: Nov 16 06:06 UTC
"BSTInsert.BasicRandom" time elapsed: 00:00:01
----------------------------------------------------------

14/65 Testing: BSTInsert.Random50x30ele
14/65 Test: BSTInsert.Random50x30ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTInsert.Random50x30ele"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTInsert.Random50x30ele" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==12000== Memcheck, a memory error detector
==12000== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12000== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12000== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTInsert.Random50x30ele
==12000== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.Random50x30ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.Random50x30ele
[       OK ] BSTInsert.Random50x30ele (682 ms)
[----------] 1 test from BSTInsert (693 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (742 ms total)
[  PASSED  ] 1 test.
==12000== 
==12000== HEAP SUMMARY:
==12000==     in use at exit: 0 bytes in 0 blocks
==12000==   total heap usage: 3,636 allocs, 3,636 frees, 321,749 bytes allocated
==12000== 
==12000== All heap blocks were freed -- no leaks are possible
==12000== 
==12000== For counts of detected and suppressed errors, rerun with: -v
==12000== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.92 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.Random50x30ele" end time: Nov 16 06:06 UTC
"BSTInsert.Random50x30ele" time elapsed: 00:00:01
----------------------------------------------------------

15/65 Testing: BSTInsert.Random3x1000ele
15/65 Test: BSTInsert.Random3x1000ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTInsert.Random3x1000ele"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTInsert.Random3x1000ele" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==12001== Memcheck, a memory error detector
==12001== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12001== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12001== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTInsert.Random3x1000ele
==12001== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.Random3x1000ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.Random3x1000ele
[       OK ] BSTInsert.Random3x1000ele (1454 ms)
[----------] 1 test from BSTInsert (1466 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1515 ms total)
[  PASSED  ] 1 test.
==12001== 
==12001== HEAP SUMMARY:
==12001==     in use at exit: 0 bytes in 0 blocks
==12001==   total heap usage: 6,495 allocs, 6,495 frees, 503,619 bytes allocated
==12001== 
==12001== All heap blocks were freed -- no leaks are possible
==12001== 
==12001== For counts of detected and suppressed errors, rerun with: -v
==12001== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   2.69 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.Random3x1000ele" end time: Nov 16 06:06 UTC
"BSTInsert.Random3x1000ele" time elapsed: 00:00:02
----------------------------------------------------------

16/65 Testing: BSTRemove.EmptyTree
16/65 Test: BSTRemove.EmptyTree
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTRemove.EmptyTree"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTRemove.EmptyTree" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==12002== Memcheck, a memory error detector
==12002== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12002== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12002== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTRemove.EmptyTree
==12002== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.EmptyTree
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.EmptyTree
[       OK ] BSTRemove.EmptyTree (24 ms)
[----------] 1 test from BSTRemove (36 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (85 ms total)
[  PASSED  ] 1 test.
==12002== 
==12002== HEAP SUMMARY:
==12002==     in use at exit: 0 bytes in 0 blocks
==12002==   total heap usage: 486 allocs, 486 frees, 131,354 bytes allocated
==12002== 
==12002== All heap blocks were freed -- no leaks are possible
==12002== 
==12002== For counts of detected and suppressed errors, rerun with: -v
==12002== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.26 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.EmptyTree" end time: Nov 16 06:06 UTC
"BSTRemove.EmptyTree" time elapsed: 00:00:01
----------------------------------------------------------

17/65 Testing: BSTRemove.NodeMismatch
17/65 Test: BSTRemove.NodeMismatch
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTRemove.NodeMismatch"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTRemove.NodeMismatch" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==12003== Memcheck, a memory error detector
==12003== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12003== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12003== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTRemove.NodeMismatch
==12003== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.NodeMismatch
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.NodeMismatch
[       OK ] BSTRemove.NodeMismatch (94 ms)
[----------] 1 test from BSTRemove (106 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (154 ms total)
[  PASSED  ] 1 test.
==12003== 
==12003== HEAP SUMMARY:
==12003==     in use at exit: 0 bytes in 0 blocks
==12003==   total heap usage: 490 allocs, 490 frees, 131,772 bytes allocated
==12003== 
==12003== All heap blocks were freed -- no leaks are possible
==12003== 
==12003== For counts of detected and suppressed errors, rerun with: -v
==12003== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.32 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.NodeMismatch" end time: Nov 16 06:06 UTC
"BSTRemove.NodeMismatch" time elapsed: 00:00:01
----------------------------------------------------------

18/65 Testing: BSTRemove.SingleRemove
18/65 Test: BSTRemove.SingleRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTRemove.SingleRemove"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTRemove.SingleRemove" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==12004== Memcheck, a memory error detector
==12004== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12004== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12004== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTRemove.SingleRemove
==12004== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.SingleRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.SingleRemove
[       OK ] BSTRemove.SingleRemove (49 ms)
[----------] 1 test from BSTRemove (60 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (108 ms total)
[  PASSED  ] 1 test.
==12004== 
==12004== HEAP SUMMARY:
==12004==     in use at exit: 0 bytes in 0 blocks
==12004==   total heap usage: 486 allocs, 486 frees, 131,425 bytes allocated
==12004== 
==12004== All heap blocks were freed -- no leaks are possible
==12004== 
==12004== For counts of detected and suppressed errors, rerun with: -v
==12004== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.28 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.SingleRemove" end time: Nov 16 06:06 UTC
"BSTRemove.SingleRemove" time elapsed: 00:00:01
----------------------------------------------------------

19/65 Testing: BSTRemove.RightChildRemove
19/65 Test: BSTRemove.RightChildRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTRemove.RightChildRemove"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTRemove.RightChildRemove" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==12005== Memcheck, a memory error detector
==12005== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12005== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12005== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTRemove.RightChildRemove
==12005== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.RightChildRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.RightChildRemove
[       OK ] BSTRemove.RightChildRemove (111 ms)
[----------] 1 test from BSTRemove (124 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (171 ms total)
[  PASSED  ] 1 test.
==12005== 
==12005== HEAP SUMMARY:
==12005==     in use at exit: 0 bytes in 0 blocks
==12005==   total heap usage: 490 allocs, 490 frees, 131,705 bytes allocated
==12005== 
==12005== All heap blocks were freed -- no leaks are possible
==12005== 
==12005== For counts of detected and suppressed errors, rerun with: -v
==12005== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.33 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.RightChildRemove" end time: Nov 16 06:06 UTC
"BSTRemove.RightChildRemove" time elapsed: 00:00:01
----------------------------------------------------------

20/65 Testing: BSTRemove.LeftChildRemove
20/65 Test: BSTRemove.LeftChildRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTRemove.LeftChildRemove"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTRemove.LeftChildRemove" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==12006== Memcheck, a memory error detector
==12006== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12006== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12006== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTRemove.LeftChildRemove
==12006== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.LeftChildRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.LeftChildRemove
[       OK ] BSTRemove.LeftChildRemove (114 ms)
[----------] 1 test from BSTRemove (126 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (174 ms total)
[  PASSED  ] 1 test.
==12006== 
==12006== HEAP SUMMARY:
==12006==     in use at exit: 0 bytes in 0 blocks
==12006==   total heap usage: 490 allocs, 490 frees, 131,699 bytes allocated
==12006== 
==12006== All heap blocks were freed -- no leaks are possible
==12006== 
==12006== For counts of detected and suppressed errors, rerun with: -v
==12006== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.33 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.LeftChildRemove" end time: Nov 16 06:06 UTC
"BSTRemove.LeftChildRemove" time elapsed: 00:00:01
----------------------------------------------------------

21/65 Testing: BSTRemove.TwoChildrenRemove_3Node
21/65 Test: BSTRemove.TwoChildrenRemove_3Node
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTRemove.TwoChildrenRemove_3Node"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTRemove.TwoChildrenRemove_3Node" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==12007== Memcheck, a memory error detector
==12007== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12007== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12007== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTRemove.TwoChildrenRemove_3Node
==12007== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.TwoChildrenRemove_3Node
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.TwoChildrenRemove_3Node
[       OK ] BSTRemove.TwoChildrenRemove_3Node (119 ms)
[----------] 1 test from BSTRemove (130 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (179 ms total)
[  PASSED  ] 1 test.
==12007== 
==12007== HEAP SUMMARY:
==12007==     in use at exit: 0 bytes in 0 blocks
==12007==   total heap usage: 490 allocs, 490 frees, 131,846 bytes allocated
==12007== 
==12007== All heap blocks were freed -- no leaks are possible
==12007== 
==12007== For counts of detected and suppressed errors, rerun with: -v
==12007== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.35 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.TwoChildrenRemove_3Node" end time: Nov 16 06:06 UTC
"BSTRemove.TwoChildrenRemove_3Node" time elapsed: 00:00:01
----------------------------------------------------------

22/65 Testing: BSTRemove.TwoChildrenRemove_4Node
22/65 Test: BSTRemove.TwoChildrenRemove_4Node
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTRemove.TwoChildrenRemove_4Node"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTRemove.TwoChildrenRemove_4Node" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==12008== Memcheck, a memory error detector
==12008== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12008== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12008== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTRemove.TwoChildrenRemove_4Node
==12008== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.TwoChildrenRemove_4Node
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.TwoChildrenRemove_4Node
[       OK ] BSTRemove.TwoChildrenRemove_4Node (130 ms)
[----------] 1 test from BSTRemove (142 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (190 ms total)
[  PASSED  ] 1 test.
==12008== 
==12008== HEAP SUMMARY:
==12008==     in use at exit: 0 bytes in 0 blocks
==12008==   total heap usage: 492 allocs, 492 frees, 131,974 bytes allocated
==12008== 
==12008== All heap blocks were freed -- no leaks are possible
==12008== 
==12008== For counts of detected and suppressed errors, rerun with: -v
==12008== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.38 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.TwoChildrenRemove_4Node" end time: Nov 16 06:06 UTC
"BSTRemove.TwoChildrenRemove_4Node" time elapsed: 00:00:01
----------------------------------------------------------

23/65 Testing: BSTRemove.Random50x30ele
23/65 Test: BSTRemove.Random50x30ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTRemove.Random50x30ele"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTRemove.Random50x30ele" start time: Nov 16 06:06 UTC
Output:
----------------------------------------------------------
==12009== Memcheck, a memory error detector
==12009== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12009== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12009== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTRemove.Random50x30ele
==12009== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.Random50x30ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.Random50x30ele
                                                                                             [13]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [07]                                                                                            [19]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [03]                                            [09]                                            [18]                                            [23]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘                                     ┌─────────┘  └─────────┐                        
         [01]                    [04]                    [08]                    [11]                    [14]                                            [20]                    [24]
            └───┐                   └───┐                                    ┌───┘  └───┐                   └───┐                                           └───┐                                    
               [02]                    [06]                                [10]        [12]                    [16]                                            [21]                        
                                      ┌┘                                                                      ┌┘  └┐                                              └┐                              
                                    [05]                                                                    [15]  [17]                                            [22]                        

Tree Placeholders:------------------
[01] -> (-149, -149)
[02] -> (-123, -123)
[03] -> (-117, -117)
[04] -> (-72, -72)
[05] -> (-60, -60)
[06] -> (-50, -50)
[07] -> (-41, -41)
[08] -> (-39, -39)
[09] -> (-32, -32)
[10] -> (-22, -22)
[11] -> (-1, -1)
[12] -> (5, 5)
[13] -> (15, 15)
[14] -> (31, 31)
[15] -> (35, 35)
[16] -> (49, 49)
[17] -> (58, 58)
[18] -> (65, 65)
[19] -> (73, 73)
[20] -> (79, 79)
[21] -> (105, 105)
[22] -> (134, 134)
[23] -> (138, 138)
[24] -> (147, 147)

element to be removed: -50
element to be removed: 147
element to be removed: 105
element to be removed: -149
element to be removed: 31
element to be removed: -123
element to be removed: -60
element to be removed: 65
element to be removed: 46
element to be removed: 134
element to be removed: 138
element to be removed: -67
element to be removed: 121
element to be removed: 15
element to be removed: 36
element to be removed: 79
element to be removed: -39
element to be removed: -41
element to be removed: 49
element to be removed: -68
element to be removed: -117
element to be removed: 73
element to be removed: 58
element to be removed: 35
element to be removed: 5
element to be removed: -22
element to be removed: -32
element to be removed: -1
element to be removed: 119
element to be removed: -72
                                                                                             [02]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [01]                                                                                            [14]
                                                                                                                       ┌─────────────────────┘  └─────────────────────┐                                                
                                                                                                                     [08]                                            [18]
                                                                                                           ┌─────────┘  └─────────┐                        ┌─────────┘                                     
                                                                                                         [05]                    [10]                    [17]                        
                                                                                                     ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘                                           
                                                                                                   [03]        [06]        [09]        [12]        [16]                                    
                                                                                                      └┐          └┐                  ┌┘  └┐      ┌┘                                              
                                                                                                      [04]        [07]              [11]  [13]  [15]                                          

Tree Placeholders:------------------
[01] -> (-147, -147)
[02] -> (-138, -138)
[03] -> (-121, -121)
[04] -> (-85, -85)
[05] -> (-66, -66)
[06] -> (-59, -59)
[07] -> (-49, -49)
[08] -> (-38, -38)
[09] -> (-37, -37)
[10] -> (-29, -29)
[11] -> (-9, -9)
[12] -> (84, 84)
[13] -> (102, 102)
[14] -> (111, 111)
[15] -> (116, 116)
[16] -> (122, 122)
[17] -> (134, 134)
[18] -> (143, 143)

element to be removed: 34
element to be removed: 61
element to be removed: 3
element to be removed: -121
element to be removed: 31
element to be removed: -49
element to be removed: 21
element to be removed: -29
element to be removed: -85
element to be removed: 134
element to be removed: 84
element to be removed: -138
element to be removed: 111
element to be removed: 78
element to be removed: 41
element to be removed: 103
element to be removed: 93
element to be removed: 102
element to be removed: -59
element to be removed: -37
element to be removed: -9
element to be removed: 40
element to be removed: -66
element to be removed: -38
element to be removed: 11
element to be removed: -88
element to be removed: 122
element to be removed: -147
element to be removed: 143
element to be removed: 116
                                                                                             [02]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [01]                                                                                            [14]
                                                                                                                       ┌─────────────────────┘                                                                         
                                                                                                                     [07]                                                
                                                                                                           ┌─────────┘  └─────────┐                                                                        
                                                                                                         [03]                    [10]                                                
                                                                                                            └───┐            ┌───┘  └───┐                                                            
                                                                                                               [05]        [09]        [12]                                                
                                                                                                              ┌┘  └┐      ┌┘          ┌┘  └┐                                                      
                                                                                                            [04]  [06]  [08]        [11]  [13]                                                

Tree Placeholders:------------------
[01] -> (-133, -133)
[02] -> (-113, -113)
[03] -> (-105, -105)
[04] -> (-70, -70)
[05] -> (-20, -20)
[06] -> (3, 3)
[07] -> (24, 24)
[08] -> (25, 25)
[09] -> (34, 34)
[10] -> (35, 35)
[11] -> (39, 39)
[12] -> (44, 44)
[13] -> (68, 68)
[14] -> (148, 148)

element to be removed: -82
element to be removed: 39
element to be removed: 3
element to be removed: 74
element to be removed: -67
element to be removed: 79
element to be removed: 50
element to be removed: -28
element to be removed: -32
element to be removed: -20
element to be removed: -105
element to be removed: -65
element to be removed: 68
element to be removed: 83
element to be removed: -113
element to be removed: 34
element to be removed: 148
element to be removed: -81
element to be removed: -133
element to be removed: 63
element to be removed: 25
element to be removed: 101
element to be removed: 44
element to be removed: -80
element to be removed: 141
element to be removed: 98
element to be removed: -70
element to be removed: 24
element to be removed: 21
element to be removed: 35
                                                                                             [15]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [11]                                                                                            [21]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [05]                                            [13]                                            [16]                                            [22]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                     └─────────┐                                     └─────────┐                        
         [01]                    [08]                    [12]                    [14]                                            [17]                                            [25]
            └───┐            ┌───┘  └───┐                                                                                           └───┐                                    ┌───┘  └───┐            
               [03]        [07]        [09]                                                                                            [19]                                [24]        [26]
              ┌┘  └┐      ┌┘              └┐                                                                                          ┌┘  └┐                              ┌┘                      
            [02]  [04]  [06]              [10]                                                                                      [18]  [20]                          [23]                  

Tree Placeholders:------------------
[01] -> (-146, -146)
[02] -> (-126, -126)
[03] -> (-118, -118)
[04] -> (-104, -104)
[05] -> (-99, -99)
[06] -> (-89, -89)
[07] -> (-51, -51)
[08] -> (-34, -34)
[09] -> (-20, -20)
[10] -> (-14, -14)
[11] -> (13, 13)
[12] -> (31, 31)
[13] -> (36, 36)
[14] -> (61, 61)
[15] -> (69, 69)
[16] -> (84, 84)
[17] -> (95, 95)
[18] -> (98, 98)
[19] -> (100, 100)
[20] -> (106, 106)
[21] -> (107, 107)
[22] -> (110, 110)
[23] -> (111, 111)
[24] -> (114, 114)
[25] -> (116, 116)
[26] -> (126, 126)

element to be removed: 31
element to be removed: 61
element to be removed: -94
element to be removed: 100
element to be removed: 110
element to be removed: -16
element to be removed: -20
element to be removed: 36
element to be removed: -128
element to be removed: 84
element to be removed: 106
element to be removed: -89
element to be removed: 95
element to be removed: 107
element to be removed: 111
element to be removed: 98
element to be removed: -99
element to be removed: 116
element to be removed: -51
element to be removed: -118
element to be removed: 126
element to be removed: -78
element to be removed: 114
element to be removed: -126
element to be removed: -104
element to be removed: -146
element to be removed: 13
element to be removed: 69
element to be removed: -34
element to be removed: -14
                                                                                             [10]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [09]                                                                                            [23]
                       ┌─────────────────────┘                                                                         ┌─────────────────────┘  └─────────────────────┐                                                
                     [07]                                                                                            [17]                                            [25]
           ┌─────────┘  └─────────┐                                                                        ┌─────────┘  └─────────┐                        ┌─────────┘                                     
         [03]                    [08]                                                                    [14]                    [19]                    [24]                        
     ┌───┘  └───┐                                                                                    ┌───┘  └───┐            ┌───┘  └───┐                                                            
   [02]        [05]                                                                                [12]        [15]        [18]        [21]                                                
  ┌┘          ┌┘  └┐                                                                              ┌┘  └┐          └┐                  ┌┘  └┐                                                      
[01]        [04]  [06]                                                                          [11]  [13]        [16]              [20]  [22]                                                

Tree Placeholders:------------------
[01] -> (-147, -147)
[02] -> (-140, -140)
[03] -> (-129, -129)
[04] -> (-109, -109)
[05] -> (-108, -108)
[06] -> (-90, -90)
[07] -> (-84, -84)
[08] -> (-81, -81)
[09] -> (-75, -75)
[10] -> (-67, -67)
[11] -> (-58, -58)
[12] -> (-42, -42)
[13] -> (-37, -37)
[14] -> (-28, -28)
[15] -> (-27, -27)
[16] -> (-17, -17)
[17] -> (3, 3)
[18] -> (6, 6)
[19] -> (39, 39)
[20] -> (57, 57)
[21] -> (67, 67)
[22] -> (78, 78)
[23] -> (133, 133)
[24] -> (137, 137)
[25] -> (149, 149)

element to be removed: 78
element to be removed: 67
element to be removed: -81
element to be removed: -17
element to be removed: 111
element to be removed: -92
element to be removed: 39
element to be removed: -42
element to be removed: -27
element to be removed: -147
element to be removed: 3
element to be removed: 50
element to be removed: -75
element to be removed: 137
element to be removed: -37
element to be removed: -14
element to be removed: -58
element to be removed: 133
element to be removed: -109
element to be removed: 149
element to be removed: -129
element to be removed: -84
element to be removed: -108
element to be removed: 6
element to be removed: -90
element to be removed: -140
element to be removed: 51
element to be removed: -67
element to be removed: 57
element to be removed: -28
                                                                                             [10]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [06]                                                                                            [19]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [01]                                            [09]                                            [17]                                            [20]
                        └─────────┐                        ┌─────────┘                                     ┌─────────┘  └─────────┐                                     └─────────┐                        
                                 [02]                    [07]                                            [14]                    [18]                                            [23]
                                    └───┐                   └───┐                                    ┌───┘  └───┐                                                            ┌───┘                   
                                       [04]                    [08]                                [12]        [15]                                                        [21]            
                                      ┌┘  └┐                                                      ┌┘  └┐          └┐                                                          └┐                  
                                    [03]  [05]                                                  [11]  [13]        [16]                                                        [22]            

Tree Placeholders:------------------
[01] -> (-143, -143)
[02] -> (-137, -137)
[03] -> (-102, -102)
[04] -> (-98, -98)
[05] -> (-97, -97)
[06] -> (-82, -82)
[07] -> (-64, -64)
[08] -> (-48, -48)
[09] -> (-47, -47)
[10] -> (-43, -43)
[11] -> (-29, -29)
[12] -> (-18, -18)
[13] -> (17, 17)
[14] -> (36, 36)
[15] -> (46, 46)
[16] -> (65, 65)
[17] -> (78, 78)
[18] -> (81, 81)
[19] -> (86, 86)
[20] -> (104, 104)
[21] -> (109, 109)
[22] -> (133, 133)
[23] -> (141, 141)

element to be removed: 65
element to be removed: -133
element to be removed: -102
element to be removed: -47
element to be removed: 33
element to be removed: 109
element to be removed: -112
element to be removed: 46
element to be removed: -143
element to be removed: 48
element to be removed: 81
element to be removed: -104
element to be removed: 133
element to be removed: 78
element to be removed: 17
element to be removed: -18
element to be removed: -98
element to be removed: -82
element to be removed: -29
element to be removed: -114
element to be removed: -43
element to be removed: 36
element to be removed: -48
element to be removed: 86
element to be removed: -64
element to be removed: 141
element to be removed: -137
element to be removed: 2
element to be removed: -97
element to be removed: 104
                                                                                             [15]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [08]                                                                                            [19]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [03]                                            [13]                                            [18]                                            [20]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘                                                  └─────────┐                        
         [01]                    [07]                    [11]                    [14]                    [17]                                                                    [24]
            └───┐            ┌───┘                   ┌───┘  └───┐                                    ┌───┘                                                                   ┌───┘                   
               [02]        [05]                    [10]        [12]                                [16]                                                                    [22]            
                          ┌┘  └┐                  ┌┘                                                                                                                      ┌┘  └┐                  
                        [04]  [06]              [09]                                                                                                                    [21]  [23]            

Tree Placeholders:------------------
[01] -> (-135, -135)
[02] -> (-120, -120)
[03] -> (-117, -117)
[04] -> (-116, -116)
[05] -> (-92, -92)
[06] -> (-83, -83)
[07] -> (-71, -71)
[08] -> (-67, -67)
[09] -> (-13, -13)
[10] -> (16, 16)
[11] -> (28, 28)
[12] -> (39, 39)
[13] -> (48, 48)
[14] -> (54, 54)
[15] -> (57, 57)
[16] -> (68, 68)
[17] -> (75, 75)
[18] -> (91, 91)
[19] -> (93, 93)
[20] -> (100, 100)
[21] -> (103, 103)
[22] -> (112, 112)
[23] -> (139, 139)
[24] -> (150, 150)

element to be removed: -117
element to be removed: -57
element to be removed: -120
element to be removed: -28
element to be removed: 39
element to be removed: -54
element to be removed: 28
element to be removed: 68
element to be removed: 139
element to be removed: -116
element to be removed: -13
element to be removed: 100
element to be removed: 112
element to be removed: -135
element to be removed: -46
element to be removed: -92
element to be removed: 54
element to be removed: 93
element to be removed: 137
element to be removed: 91
element to be removed: 48
element to be removed: 103
element to be removed: 150
element to be removed: 57
element to be removed: -19
element to be removed: -71
element to be removed: 16
element to be removed: -83
element to be removed: 75
element to be removed: -67
                                                                                             [13]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [02]                                                                                            [17]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘                                                                         
                     [01]                                            [05]                                            [14]                                                
                                                           ┌─────────┘  └─────────┐                                     └─────────┐                                                                        
                                                         [04]                    [09]                                            [15]                                                
                                                     ┌───┘                   ┌───┘  └───┐                                           └───┐                                                            
                                                   [03]                    [07]        [11]                                            [16]                                                
                                                                          ┌┘  └┐      ┌┘  └┐                                                                                                      
                                                                        [06]  [08]  [10]  [12]                                                                                                

Tree Placeholders:------------------
[01] -> (-137, -137)
[02] -> (-136, -136)
[03] -> (-126, -126)
[04] -> (-120, -120)
[05] -> (-114, -114)
[06] -> (-89, -89)
[07] -> (-22, -22)
[08] -> (49, 49)
[09] -> (67, 67)
[10] -> (71, 71)
[11] -> (75, 75)
[12] -> (113, 113)
[13] -> (114, 114)
[14] -> (117, 117)
[15] -> (123, 123)
[16] -> (125, 125)
[17] -> (139, 139)

element to be removed: 114
element to be removed: -8
element to be removed: 125
element to be removed: 71
element to be removed: -126
element to be removed: -22
element to be removed: -136
element to be removed: 22
element to be removed: 49
element to be removed: -65
element to be removed: 123
element to be removed: -19
element to be removed: 117
element to be removed: 75
element to be removed: 47
element to be removed: -86
element to be removed: 60
element to be removed: -137
element to be removed: 67
element to be removed: -114
element to be removed: -89
element to be removed: 8
element to be removed: 108
element to be removed: -30
element to be removed: -95
element to be removed: -91
element to be removed: 139
element to be removed: -88
element to be removed: 113
element to be removed: -120
                                                                                             [11]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [09]                                                                                            [21]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [04]                                            [10]                                            [16]                                            [23]
           ┌─────────┘  └─────────┐                                                                        ┌─────────┘  └─────────┐                        ┌─────────┘                                     
         [02]                    [05]                                                                    [12]                    [19]                    [22]                        
     ┌───┘  └───┐                   └───┐                                                                   └───┐            ┌───┘  └───┐                                                            
   [01]        [03]                    [07]                                                                    [14]        [17]        [20]                                                
                                      ┌┘  └┐                                                                  ┌┘  └┐          └┐                                                                  
                                    [06]  [08]                                                              [13]  [15]        [18]                                                            

Tree Placeholders:------------------
[01] -> (-146, -146)
[02] -> (-145, -145)
[03] -> (-142, -142)
[04] -> (-111, -111)
[05] -> (-109, -109)
[06] -> (-107, -107)
[07] -> (-101, -101)
[08] -> (-80, -80)
[09] -> (-30, -30)
[10] -> (-21, -21)
[11] -> (-9, -9)
[12] -> (-5, -5)
[13] -> (0, 0)
[14] -> (29, 29)
[15] -> (53, 53)
[16] -> (60, 60)
[17] -> (62, 62)
[18] -> (63, 63)
[19] -> (111, 111)
[20] -> (122, 122)
[21] -> (133, 133)
[22] -> (143, 143)
[23] -> (145, 145)

element to be removed: -5
element to be removed: -64
element to be removed: 19
element to be removed: 60
element to be removed: 143
element to be removed: 39
element to be removed: 145
element to be removed: -111
element to be removed: -80
element to be removed: 29
element to be removed: -146
element to be removed: 122
element to be removed: -142
element to be removed: -109
element to be removed: -72
element to be removed: -30
element to be removed: -21
element to be removed: 53
element to be removed: -107
element to be removed: 62
element to be removed: 111
element to be removed: -101
element to be removed: 32
element to be removed: 84
element to be removed: -9
element to be removed: 133
element to be removed: -86
element to be removed: 63
element to be removed: 0
element to be removed: -145
                                                                                             [11]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [08]                                                                                            [14]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [03]                                            [09]                                            [13]                                            [21]
           ┌─────────┘  └─────────┐                                     └─────────┐                        ┌─────────┘                                     ┌─────────┘  └─────────┐                        
         [02]                    [06]                                            [10]                    [12]                                            [17]                    [24]
     ┌───┘                   ┌───┘  └───┐                                                                                                            ┌───┘  └───┐            ┌───┘  └───┐            
   [01]                    [05]        [07]                                                                                                        [15]        [19]        [22]        [26]
                          ┌┘                                                                                                                          └┐      ┌┘  └┐          └┐      ┌┘  └┐      
                        [04]                                                                                                                          [16]  [18]  [20]        [23]  [25]  [27]

Tree Placeholders:------------------
[01] -> (-145, -145)
[02] -> (-141, -141)
[03] -> (-139, -139)
[04] -> (-137, -137)
[05] -> (-135, -135)
[06] -> (-115, -115)
[07] -> (-106, -106)
[08] -> (-95, -95)
[09] -> (-87, -87)
[10] -> (-84, -84)
[11] -> (-71, -71)
[12] -> (-69, -69)
[13] -> (-65, -65)
[14] -> (-64, -64)
[15] -> (-63, -63)
[16] -> (-52, -52)
[17] -> (-44, -44)
[18] -> (-24, -24)
[19] -> (-9, -9)
[20] -> (0, 0)
[21] -> (9, 9)
[22] -> (27, 27)
[23] -> (49, 49)
[24] -> (69, 69)
[25] -> (82, 82)
[26] -> (98, 98)
[27] -> (111, 111)

element to be removed: -64
element to be removed: -115
element to be removed: 9
element to be removed: 39
element to be removed: -65
element to be removed: -52
element to be removed: -71
element to be removed: 0
element to be removed: 49
element to be removed: -106
element to be removed: -139
element to be removed: -137
element to be removed: -24
element to be removed: -87
element to be removed: 98
element to be removed: 27
element to be removed: 147
element to be removed: -63
element to be removed: -9
element to be removed: 111
element to be removed: -145
element to be removed: -84
element to be removed: 75
element to be removed: -135
element to be removed: -141
element to be removed: -95
element to be removed: 69
element to be removed: -69
element to be removed: 82
element to be removed: -44
                                                                                             [17]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [07]                                                                                            [23]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘                                                                         
                     [05]                                            [12]                                            [20]                                                
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                                                        
         [04]                    [06]                    [09]                    [14]                    [19]                    [22]                                                
     ┌───┘                                           ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘                   ┌───┘                                                                   
   [02]                                            [08]        [11]        [13]        [15]        [18]                    [21]                                                            
  ┌┘  └┐                                                      ┌┘                          └┐                                                                                                      
[01]  [03]                                                  [10]                          [16]                                                                                                

Tree Placeholders:------------------
[01] -> (-140, -140)
[02] -> (-128, -128)
[03] -> (-118, -118)
[04] -> (-89, -89)
[05] -> (-83, -83)
[06] -> (-62, -62)
[07] -> (-52, -52)
[08] -> (-49, -49)
[09] -> (-46, -46)
[10] -> (-14, -14)
[11] -> (-3, -3)
[12] -> (1, 1)
[13] -> (4, 4)
[14] -> (15, 15)
[15] -> (38, 38)
[16] -> (41, 41)
[17] -> (66, 66)
[18] -> (76, 76)
[19] -> (92, 92)
[20] -> (94, 94)
[21] -> (95, 95)
[22] -> (124, 124)
[23] -> (144, 144)

element to be removed: -52
element to be removed: -119
element to be removed: -62
element to be removed: -83
element to be removed: -112
element to be removed: -140
element to be removed: -128
element to be removed: 94
element to be removed: -118
element to be removed: -14
element to be removed: 15
element to be removed: 66
element to be removed: -46
element to be removed: -49
element to be removed: 92
element to be removed: 38
element to be removed: 124
element to be removed: -34
element to be removed: -134
element to be removed: 1
element to be removed: 4
element to be removed: -25
element to be removed: -104
element to be removed: 41
element to be removed: 95
element to be removed: -3
element to be removed: -92
element to be removed: -89
element to be removed: 76
element to be removed: 144
                                                                                             [15]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [05]                                                                                            [18]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [01]                                            [08]                                            [17]                                            [19]
                        └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘                                                                                     
                                 [02]                    [06]                    [11]                    [16]                                                                        
                                    └───┐                   └───┐            ┌───┘  └───┐                                                                                                            
                                       [04]                    [07]        [09]        [13]                                                                                                
                                      ┌┘                                      └┐      ┌┘  └┐                                                                                                      
                                    [03]                                      [10]  [12]  [14]                                                                                                

Tree Placeholders:------------------
[01] -> (-141, -141)
[02] -> (-136, -136)
[03] -> (-129, -129)
[04] -> (-124, -124)
[05] -> (-113, -113)
[06] -> (-108, -108)
[07] -> (-91, -91)
[08] -> (-42, -42)
[09] -> (-41, -41)
[10] -> (-40, -40)
[11] -> (22, 22)
[12] -> (24, 24)
[13] -> (39, 39)
[14] -> (79, 79)
[15] -> (105, 105)
[16] -> (106, 106)
[17] -> (121, 121)
[18] -> (125, 125)
[19] -> (130, 130)

element to be removed: -34
element to be removed: -40
element to be removed: 125
element to be removed: -129
element to be removed: 70
element to be removed: 39
element to be removed: -113
element to be removed: 24
element to be removed: 106
element to be removed: 99
element to be removed: -15
element to be removed: -136
element to be removed: -141
element to be removed: -3
element to be removed: -9
element to be removed: -42
element to be removed: 130
element to be removed: -22
element to be removed: -32
element to be removed: -108
element to be removed: 121
element to be removed: 79
element to be removed: -41
element to be removed: 105
element to be removed: 11
element to be removed: 86
element to be removed: 22
element to be removed: -124
element to be removed: -91
element to be removed: 69
                                                                                             [05]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [04]                                                                                            [15]
                       ┌─────────────────────┘                                                                         ┌─────────────────────┘  └─────────────────────┐                                                
                     [02]                                                                                            [12]                                            [22]
           ┌─────────┘  └─────────┐                                                                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [01]                    [03]                                                                    [09]                    [14]                    [19]                    [24]
                                                                                                     ┌───┘  └───┐            ┌───┘                   ┌───┘  └───┐            ┌───┘  └───┐            
                                                                                                   [07]        [10]        [13]                    [17]        [20]        [23]        [25]
                                                                                                  ┌┘  └┐          └┐                              ┌┘  └┐          └┐                      └┐      
                                                                                                [06]  [08]        [11]                          [16]  [18]        [21]                    [26]

Tree Placeholders:------------------
[01] -> (-150, -150)
[02] -> (-146, -146)
[03] -> (-145, -145)
[04] -> (-138, -138)
[05] -> (-113, -113)
[06] -> (-108, -108)
[07] -> (-92, -92)
[08] -> (-70, -70)
[09] -> (-64, -64)
[10] -> (-48, -48)
[11] -> (-43, -43)
[12] -> (-42, -42)
[13] -> (-37, -37)
[14] -> (-32, -32)
[15] -> (-21, -21)
[16] -> (5, 5)
[17] -> (15, 15)
[18] -> (41, 41)
[19] -> (46, 46)
[20] -> (52, 52)
[21] -> (77, 77)
[22] -> (93, 93)
[23] -> (100, 100)
[24] -> (115, 115)
[25] -> (135, 135)
[26] -> (149, 149)

element to be removed: -101
element to be removed: -113
element to be removed: 15
element to be removed: -146
element to be removed: 100
element to be removed: 93
element to be removed: -43
element to be removed: 77
element to be removed: 52
element to be removed: -150
element to be removed: -145
element to be removed: -37
element to be removed: 115
element to be removed: 135
element to be removed: -93
element to be removed: 5
element to be removed: -70
element to be removed: -64
element to be removed: -42
element to be removed: 149
element to be removed: -86
element to be removed: -108
element to be removed: -138
element to be removed: -92
element to be removed: -48
element to be removed: 41
element to be removed: -32
element to be removed: 46
element to be removed: 63
element to be removed: -21
                                                                                             [13]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [05]                                                                                            [15]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [02]                                            [12]                                            [14]                                            [19]
           ┌─────────┘  └─────────┐                        ┌─────────┘                                                                                     ┌─────────┘  └─────────┐                        
         [01]                    [03]                    [08]                                                                                            [18]                    [21]
                                    └───┐            ┌───┘  └───┐                                                                                    ┌───┘                   ┌───┘  └───┐            
                                       [04]        [07]        [10]                                                                                [16]                    [20]        [22]
                                                  ┌┘          ┌┘  └┐                                                                                  └┐                                  └┐      
                                                [06]        [09]  [11]                                                                                [17]                                [23]

Tree Placeholders:------------------
[01] -> (-147, -147)
[02] -> (-140, -140)
[03] -> (-95, -95)
[04] -> (-92, -92)
[05] -> (-87, -87)
[06] -> (-30, -30)
[07] -> (-8, -8)
[08] -> (0, 0)
[09] -> (14, 14)
[10] -> (20, 20)
[11] -> (57, 57)
[12] -> (67, 67)
[13] -> (72, 72)
[14] -> (79, 79)
[15] -> (81, 81)
[16] -> (91, 91)
[17] -> (102, 102)
[18] -> (104, 104)
[19] -> (118, 118)
[20] -> (119, 119)
[21] -> (125, 125)
[22] -> (128, 128)
[23] -> (139, 139)

element to be removed: -87
element to be removed: 102
element to be removed: 81
element to be removed: 72
element to be removed: 125
element to be removed: 79
element to be removed: -49
element to be removed: 20
element to be removed: 14
element to be removed: 0
element to be removed: -76
element to be removed: -30
element to be removed: -140
element to be removed: -8
element to be removed: 104
element to be removed: -95
element to be removed: 139
element to be removed: 55
element to be removed: 67
element to be removed: 118
element to be removed: -147
element to be removed: 119
element to be removed: 91
element to be removed: -54
element to be removed: -60
element to be removed: 57
element to be removed: -82
element to be removed: -92
element to be removed: 128
element to be removed: -17
                                                                                             [19]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [10]                                                                                            [22]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [03]                                            [13]                                            [21]                                            [23]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘                                                  └─────────┐                        
         [02]                    [06]                    [12]                    [17]                    [20]                                                                    [24]
     ┌───┘                   ┌───┘  └───┐            ┌───┘                   ┌───┘  └───┐                                                                                                            
   [01]                    [04]        [08]        [11]                    [15]        [18]                                                                                                
                              └┐      ┌┘  └┐                              ┌┘  └┐                                                                                                                  
                              [05]  [07]  [09]                          [14]  [16]                                                                                                            

Tree Placeholders:------------------
[01] -> (-142, -142)
[02] -> (-140, -140)
[03] -> (-136, -136)
[04] -> (-132, -132)
[05] -> (-91, -91)
[06] -> (-86, -86)
[07] -> (-58, -58)
[08] -> (-56, -56)
[09] -> (-47, -47)
[10] -> (-17, -17)
[11] -> (-16, -16)
[12] -> (-6, -6)
[13] -> (6, 6)
[14] -> (14, 14)
[15] -> (20, 20)
[16] -> (22, 22)
[17] -> (64, 64)
[18] -> (87, 87)
[19] -> (91, 91)
[20] -> (97, 97)
[21] -> (98, 98)
[22] -> (118, 118)
[23] -> (123, 123)
[24] -> (150, 150)

element to be removed: -6
element to be removed: 87
element to be removed: -58
element to be removed: -16
element to be removed: -38
element to be removed: 14
element to be removed: -27
element to be removed: -53
element to be removed: -140
element to be removed: -47
element to be removed: 97
element to be removed: 22
element to be removed: -17
element to be removed: 20
element to be removed: 150
element to be removed: 64
element to be removed: -56
element to be removed: -91
element to be removed: 6
element to be removed: 12
element to be removed: -24
element to be removed: 50
element to be removed: -132
element to be removed: -142
element to be removed: -136
element to be removed: 118
element to be removed: 91
element to be removed: 123
element to be removed: 98
element to be removed: -86
                                                                                             [02]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [01]                                                                                            [09]
                                                                                                                       ┌─────────────────────┘  └─────────────────────┐                                                
                                                                                                                     [07]                                            [16]
                                                                                                           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
                                                                                                         [05]                    [08]                    [13]                    [17]
                                                                                                     ┌───┘  └───┐                                    ┌───┘  └───┐                                    
                                                                                                   [03]        [06]                                [11]        [14]                        
                                                                                                      └┐                                          ┌┘  └┐          └┐                              
                                                                                                      [04]                                      [10]  [12]        [15]                        

Tree Placeholders:------------------
[01] -> (-144, -144)
[02] -> (-139, -139)
[03] -> (-136, -136)
[04] -> (-121, -121)
[05] -> (-114, -114)
[06] -> (-110, -110)
[07] -> (-97, -97)
[08] -> (-93, -93)
[09] -> (-91, -91)
[10] -> (-20, -20)
[11] -> (85, 85)
[12] -> (113, 113)
[13] -> (126, 126)
[14] -> (129, 129)
[15] -> (140, 140)
[16] -> (142, 142)
[17] -> (144, 144)

element to be removed: 67
element to be removed: 116
element to be removed: 69
element to be removed: -97
element to be removed: 142
element to be removed: -136
element to be removed: -133
element to be removed: 54
element to be removed: -20
element to be removed: -56
element to be removed: -91
element to be removed: -144
element to be removed: 77
element to be removed: -139
element to be removed: 126
element to be removed: 92
element to be removed: -114
element to be removed: 57
element to be removed: 140
element to be removed: 14
element to be removed: 113
element to be removed: -110
element to be removed: -77
element to be removed: -1
element to be removed: -121
element to be removed: -93
element to be removed: 78
element to be removed: 129
element to be removed: 144
element to be removed: 85
                                                                                             [10]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [06]                                                                                            [22]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [01]                                            [07]                                            [17]                                            [27]
                        └─────────┐                                     └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘                                     
                                 [04]                                            [09]                    [13]                    [21]                    [25]                        
                             ┌───┘  └───┐                                    ┌───┘                   ┌───┘  └───┐            ┌───┘                   ┌───┘  └───┐                                    
                           [02]        [05]                                [08]                    [11]        [15]        [19]                    [24]        [26]                        
                              └┐                                                                      └┐      ┌┘  └┐      ┌┘  └┐                  ┌┘                                              
                              [03]                                                                    [12]  [14]  [16]  [18]  [20]              [23]                                          

Tree Placeholders:------------------
[01] -> (-140, -140)
[02] -> (-138, -138)
[03] -> (-105, -105)
[04] -> (-100, -100)
[05] -> (-89, -89)
[06] -> (-78, -78)
[07] -> (-62, -62)
[08] -> (-61, -61)
[09] -> (-38, -38)
[10] -> (-26, -26)
[11] -> (-13, -13)
[12] -> (1, 1)
[13] -> (17, 17)
[14] -> (57, 57)
[15] -> (61, 61)
[16] -> (66, 66)
[17] -> (68, 68)
[18] -> (69, 69)
[19] -> (83, 83)
[20] -> (90, 90)
[21] -> (95, 95)
[22] -> (99, 99)
[23] -> (125, 125)
[24] -> (134, 134)
[25] -> (137, 137)
[26] -> (148, 148)
[27] -> (149, 149)

element to be removed: 125
element to be removed: 148
element to be removed: 83
element to be removed: -78
element to be removed: -62
element to be removed: 66
element to be removed: 12
element to be removed: 26
element to be removed: -38
element to be removed: -100
element to be removed: 99
element to be removed: 1
element to be removed: -140
element to be removed: 17
element to be removed: 90
element to be removed: -26
element to be removed: 134
element to be removed: -105
element to be removed: -89
element to be removed: -13
element to be removed: 68
element to be removed: 137
element to be removed: 95
element to be removed: -61
element to be removed: 57
element to be removed: 149
element to be removed: 61
element to be removed: 69
element to be removed: 53
element to be removed: -138
                                                                                             [01]
                                                                                                └─────────────────────────────────────────────┐                                                                                                
                                                                                                                                             [05]
                                                                                                                       ┌─────────────────────┘  └─────────────────────┐                                                
                                                                                                                     [03]                                            [13]
                                                                                                           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
                                                                                                         [02]                    [04]                    [09]                    [17]
                                                                                                                                                     ┌───┘  └───┐            ┌───┘  └───┐            
                                                                                                                                                   [07]        [11]        [15]        [19]
                                                                                                                                                  ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      
                                                                                                                                                [06]  [08]  [10]  [12]  [14]  [16]  [18]  [20]

Tree Placeholders:------------------
[01] -> (-145, -145)
[02] -> (-139, -139)
[03] -> (-131, -131)
[04] -> (-110, -110)
[05] -> (-95, -95)
[06] -> (-86, -86)
[07] -> (-72, -72)
[08] -> (-67, -67)
[09] -> (-62, -62)
[10] -> (-54, -54)
[11] -> (-47, -47)
[12] -> (-46, -46)
[13] -> (41, 41)
[14] -> (83, 83)
[15] -> (95, 95)
[16] -> (100, 100)
[17] -> (112, 112)
[18] -> (113, 113)
[19] -> (140, 140)
[20] -> (142, 142)

element to be removed: 100
element to be removed: 5
element to be removed: -56
element to be removed: -86
element to be removed: 11
element to be removed: -72
element to be removed: 83
element to be removed: -95
element to be removed: -62
element to be removed: 41
element to be removed: 112
element to be removed: 95
element to be removed: 53
element to be removed: 4
element to be removed: 110
element to be removed: 140
element to be removed: -131
element to be removed: -47
element to be removed: -39
element to be removed: -33
element to be removed: -54
element to be removed: 142
element to be removed: 47
element to be removed: -110
element to be removed: -139
element to be removed: 113
element to be removed: -46
element to be removed: -67
element to be removed: -145
element to be removed: -21
                                                                                             [07]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [01]                                                                                            [17]
                                                └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                                                                     [02]                                            [11]                                            [18]
                                                                        └─────────┐                        ┌─────────┘  └─────────┐                                     └─────────┐                        
                                                                                 [04]                    [08]                    [14]                                            [19]
                                                                             ┌───┘  └───┐                   └───┐            ┌───┘  └───┐                                           └───┐            
                                                                           [03]        [06]                    [09]        [12]        [15]                                            [21]
                                                                                      ┌┘                          └┐          └┐          └┐                                          ┌┘          
                                                                                    [05]                          [10]        [13]        [16]                                      [20]      

Tree Placeholders:------------------
[01] -> (-144, -144)
[02] -> (-140, -140)
[03] -> (-138, -138)
[04] -> (-136, -136)
[05] -> (-127, -127)
[06] -> (-108, -108)
[07] -> (-106, -106)
[08] -> (-101, -101)
[09] -> (-78, -78)
[10] -> (-48, -48)
[11] -> (-8, -8)
[12] -> (13, 13)
[13] -> (44, 44)
[14] -> (56, 56)
[15] -> (66, 66)
[16] -> (81, 81)
[17] -> (90, 90)
[18] -> (94, 94)
[19] -> (118, 118)
[20] -> (134, 134)
[21] -> (148, 148)

element to be removed: 24
element to be removed: -138
element to be removed: 66
element to be removed: 118
element to be removed: 36
element to be removed: 148
element to be removed: -136
element to be removed: -144
element to be removed: 44
element to be removed: -14
element to be removed: 20
element to be removed: -127
element to be removed: -140
element to be removed: 90
element to be removed: 94
element to be removed: -45
element to be removed: 81
element to be removed: -59
element to be removed: -108
element to be removed: 53
element to be removed: 46
element to be removed: 56
element to be removed: -8
element to be removed: -101
element to be removed: -58
element to be removed: -48
element to be removed: 134
element to be removed: -106
element to be removed: -78
element to be removed: 13
                                                                                             [10]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [02]                                                                                            [18]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [01]                                            [08]                                            [14]                                            [20]
                                                           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
                                                         [06]                    [09]                    [11]                    [15]                    [19]                    [24]
                                                     ┌───┘  └───┐                                           └───┐                   └───┐                                    ┌───┘                   
                                                   [04]        [07]                                            [12]                    [16]                                [22]            
                                                  ┌┘  └┐                                                          └┐                      └┐                              ┌┘  └┐                  
                                                [03]  [05]                                                        [13]                    [17]                          [21]  [23]            

Tree Placeholders:------------------
[01] -> (-137, -137)
[02] -> (-135, -135)
[03] -> (-100, -100)
[04] -> (-72, -72)
[05] -> (-66, -66)
[06] -> (-52, -52)
[07] -> (-38, -38)
[08] -> (-24, -24)
[09] -> (-21, -21)
[10] -> (3, 3)
[11] -> (28, 28)
[12] -> (32, 32)
[13] -> (37, 37)
[14] -> (41, 41)
[15] -> (46, 46)
[16] -> (52, 52)
[17] -> (60, 60)
[18] -> (85, 85)
[19] -> (86, 86)
[20] -> (92, 92)
[21] -> (103, 103)
[22] -> (109, 109)
[23] -> (141, 141)
[24] -> (150, 150)

element to be removed: -135
element to be removed: 92
element to be removed: 132
element to be removed: 109
element to be removed: -38
element to be removed: -72
element to be removed: -100
element to be removed: -52
element to be removed: -137
element to be removed: 118
element to be removed: 32
element to be removed: 41
element to be removed: 103
element to be removed: 148
element to be removed: 28
element to be removed: 3
element to be removed: -21
element to be removed: 141
element to be removed: 46
element to be removed: 85
element to be removed: 139
element to be removed: 86
element to be removed: 52
element to be removed: -24
element to be removed: -66
element to be removed: 60
element to be removed: 37
element to be removed: 150
element to be removed: 115
element to be removed: 67
                                                                                             [08]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [05]                                                                                            [17]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [04]                                            [07]                                            [15]                                            [18]
           ┌─────────┘                                     ┌─────────┘                                     ┌─────────┘  └─────────┐                                     └─────────┐                        
         [02]                                            [06]                                            [11]                    [16]                                            [21]
     ┌───┘  └───┐                                                                                    ┌───┘  └───┐                                                            ┌───┘                   
   [01]        [03]                                                                                [09]        [13]                                                        [20]            
                                                                                                      └┐      ┌┘  └┐                                                      ┌┘                      
                                                                                                      [10]  [12]  [14]                                                  [19]                  

Tree Placeholders:------------------
[01] -> (-144, -144)
[02] -> (-139, -139)
[03] -> (-134, -134)
[04] -> (-133, -133)
[05] -> (-119, -119)
[06] -> (-118, -118)
[07] -> (-101, -101)
[08] -> (-86, -86)
[09] -> (-82, -82)
[10] -> (-48, -48)
[11] -> (11, 11)
[12] -> (20, 20)
[13] -> (37, 37)
[14] -> (66, 66)
[15] -> (77, 77)
[16] -> (95, 95)
[17] -> (96, 96)
[18] -> (114, 114)
[19] -> (128, 128)
[20] -> (143, 143)
[21] -> (148, 148)

element to be removed: 17
element to be removed: -101
element to be removed: 96
element to be removed: -133
element to be removed: 143
element to be removed: 66
element to be removed: 58
element to be removed: -47
element to be removed: -139
element to be removed: -86
element to be removed: 8
element to be removed: 45
element to be removed: 6
element to be removed: 37
element to be removed: 11
element to be removed: -144
element to be removed: 114
element to be removed: 20
element to be removed: -82
element to be removed: -118
element to be removed: 77
element to be removed: 128
element to be removed: -134
element to be removed: 148
element to be removed: 68
element to be removed: -20
element to be removed: -66
element to be removed: 95
element to be removed: -119
element to be removed: -48
                                                                                             [11]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [05]                                                                                            [12]
                       ┌─────────────────────┘  └─────────────────────┐                                                                         └─────────────────────┐                                                
                     [01]                                            [08]                                                                                            [18]
                        └─────────┐                        ┌─────────┘  └─────────┐                                                                        ┌─────────┘  └─────────┐                        
                                 [02]                    [06]                    [10]                                                                    [15]                    [21]
                                    └───┐                   └───┐            ┌───┘                                                                   ┌───┘  └───┐            ┌───┘  └───┐            
                                       [04]                    [07]        [09]                                                                    [14]        [16]        [19]        [23]
                                      ┌┘                                                                                                          ┌┘              └┐          └┐      ┌┘          
                                    [03]                                                                                                        [13]              [17]        [20]  [22]      

Tree Placeholders:------------------
[01] -> (-146, -146)
[02] -> (-140, -140)
[03] -> (-94, -94)
[04] -> (-86, -86)
[05] -> (-80, -80)
[06] -> (-79, -79)
[07] -> (-71, -71)
[08] -> (-62, -62)
[09] -> (-57, -57)
[10] -> (-35, -35)
[11] -> (-19, -19)
[12] -> (-15, -15)
[13] -> (1, 1)
[14] -> (9, 9)
[15] -> (10, 10)
[16] -> (13, 13)
[17] -> (26, 26)
[18] -> (56, 56)
[19] -> (71, 71)
[20] -> (81, 81)
[21] -> (102, 102)
[22] -> (143, 143)
[23] -> (150, 150)

element to be removed: 56
element to be removed: -15
element to be removed: 81
element to be removed: 125
element to be removed: 150
element to be removed: -57
element to be removed: -80
element to be removed: 13
element to be removed: 24
element to be removed: 52
element to be removed: 26
element to be removed: 108
element to be removed: -19
element to be removed: 10
element to be removed: 9
element to be removed: -146
element to be removed: -94
element to be removed: -71
element to be removed: -79
element to be removed: -140
element to be removed: -86
element to be removed: -110
element to be removed: 110
element to be removed: -35
element to be removed: 102
element to be removed: 19
element to be removed: 1
element to be removed: 143
element to be removed: -62
element to be removed: 71
                                                                                             [12]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [11]                                                                                            [24]
                       ┌─────────────────────┘                                                                         ┌─────────────────────┘  └─────────────────────┐                                                
                     [05]                                                                                            [18]                                            [26]
           ┌─────────┘  └─────────┐                                                                        ┌─────────┘  └─────────┐                        ┌─────────┘                                     
         [02]                    [09]                                                                    [15]                    [22]                    [25]                        
     ┌───┘  └───┐            ┌───┘  └───┐                                                            ┌───┘  └───┐            ┌───┘  └───┐                                                            
   [01]        [03]        [07]        [10]                                                        [14]        [17]        [20]        [23]                                                
                  └┐      ┌┘  └┐                                                                  ┌┘          ┌┘          ┌┘  └┐                                                                  
                  [04]  [06]  [08]                                                              [13]        [16]        [19]  [21]                                                            

Tree Placeholders:------------------
[01] -> (-148, -148)
[02] -> (-126, -126)
[03] -> (-104, -104)
[04] -> (-98, -98)
[05] -> (-96, -96)
[06] -> (-93, -93)
[07] -> (-74, -74)
[08] -> (-57, -57)
[09] -> (-5, -5)
[10] -> (15, 15)
[11] -> (24, 24)
[12] -> (30, 30)
[13] -> (42, 42)
[14] -> (55, 55)
[15] -> (61, 61)
[16] -> (73, 73)
[17] -> (74, 74)
[18] -> (81, 81)
[19] -> (88, 88)
[20] -> (91, 91)
[21] -> (100, 100)
[22] -> (102, 102)
[23] -> (114, 114)
[24] -> (121, 121)
[25] -> (130, 130)
[26] -> (140, 140)

element to be removed: 30
element to be removed: -74
element to be removed: 61
element to be removed: 121
element to be removed: 102
element to be removed: 73
element to be removed: 130
element to be removed: -148
element to be removed: -11
element to be removed: 42
element to be removed: -126
element to be removed: 55
element to be removed: -57
element to be removed: 24
element to be removed: -96
element to be removed: 100
element to be removed: -104
element to be removed: 15
element to be removed: 66
element to be removed: 91
element to be removed: -98
element to be removed: 140
element to be removed: 81
element to be removed: 37
element to be removed: 74
element to be removed: -93
element to be removed: -59
element to be removed: -5
element to be removed: 88
element to be removed: 114
                                                                                             [22]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [10]                                                                                            [25]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘                                                                         
                     [05]                                            [16]                                            [23]                                                
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                     └─────────┐                                                                        
         [02]                    [09]                    [12]                    [19]                                            [24]                                                
     ┌───┘  └───┐            ┌───┘                   ┌───┘  └───┐            ┌───┘  └───┐                                                                                                            
   [01]        [04]        [07]                    [11]        [14]        [18]        [20]                                                                                                
              ┌┘          ┌┘  └┐                              ┌┘  └┐      ┌┘              └┐                                                                                                      
            [03]        [06]  [08]                          [13]  [15]  [17]              [21]                                                                                                

Tree Placeholders:------------------
[01] -> (-150, -150)
[02] -> (-144, -144)
[03] -> (-142, -142)
[04] -> (-116, -116)
[05] -> (-100, -100)
[06] -> (-97, -97)
[07] -> (-94, -94)
[08] -> (-89, -89)
[09] -> (-86, -86)
[10] -> (-76, -76)
[11] -> (-60, -60)
[12] -> (-45, -45)
[13] -> (-30, -30)
[14] -> (-25, -25)
[15] -> (1, 1)
[16] -> (16, 16)
[17] -> (41, 41)
[18] -> (49, 49)
[19] -> (62, 62)
[20] -> (71, 71)
[21] -> (89, 89)
[22] -> (111, 111)
[23] -> (127, 127)
[24] -> (134, 134)
[25] -> (137, 137)

element to be removed: -16
element to be removed: 127
element to be removed: 89
element to be removed: 71
element to be removed: -142
element to be removed: -89
element to be removed: -144
element to be removed: 111
element to be removed: -25
element to be removed: -126
element to be removed: 62
element to be removed: -94
element to be removed: -60
element to be removed: -17
element to be removed: 137
element to be removed: 1
element to be removed: -150
element to be removed: 41
element to be removed: -87
element to be removed: -97
element to be removed: 49
element to be removed: 16
element to be removed: -116
element to be removed: -76
element to be removed: -45
element to be removed: 134
element to be removed: -30
element to be removed: 79
element to be removed: -100
element to be removed: -86
                                                                                             [13]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [01]                                                                                            [22]
                                                └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                                                                     [09]                                            [19]                                            [23]
                                                           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                     └─────────┐                        
                                                         [05]                    [11]                    [16]                    [21]                                            [24]
                                                     ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘                                                                   
                                                   [03]        [07]        [10]        [12]        [15]        [18]        [20]                                                            
                                                  ┌┘  └┐      ┌┘  └┐                              ┌┘          ┌┘                                                                                  
                                                [02]  [04]  [06]  [08]                          [14]        [17]                                                                              

Tree Placeholders:------------------
[01] -> (-148, -148)
[02] -> (-146, -146)
[03] -> (-106, -106)
[04] -> (-95, -95)
[05] -> (-66, -66)
[06] -> (-51, -51)
[07] -> (-37, -37)
[08] -> (-12, -12)
[09] -> (7, 7)
[10] -> (16, 16)
[11] -> (21, 21)
[12] -> (52, 52)
[13] -> (68, 68)
[14] -> (75, 75)
[15] -> (85, 85)
[16] -> (92, 92)
[17] -> (93, 93)
[18] -> (116, 116)
[19] -> (122, 122)
[20] -> (126, 126)
[21] -> (134, 134)
[22] -> (145, 145)
[23] -> (146, 146)
[24] -> (147, 147)

element to be removed: 52
element to be removed: 21
element to be removed: -56
element to be removed: 145
element to be removed: -12
element to be removed: 80
element to be removed: 122
element to be removed: -69
element to be removed: -66
element to be removed: -111
element to be removed: 92
element to be removed: -72
element to be removed: 147
element to be removed: -51
element to be removed: 146
element to be removed: 85
element to be removed: 16
element to be removed: 126
element to be removed: -146
element to be removed: -37
element to be removed: 7
element to be removed: -148
element to be removed: -80
element to be removed: 93
element to be removed: 68
element to be removed: -106
element to be removed: 134
element to be removed: 75
element to be removed: -95
element to be removed: 116
                                                                                             [12]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [11]                                                                                            [22]
                       ┌─────────────────────┘                                                                         ┌─────────────────────┘  └─────────────────────┐                                                
                     [07]                                                                                            [16]                                            [24]
           ┌─────────┘  └─────────┐                                                                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [04]                    [10]                                                                    [15]                    [19]                    [23]                    [25]
     ┌───┘  └───┐            ┌───┘                                                                   ┌───┘                   ┌───┘  └───┐                                                            
   [02]        [05]        [08]                                                                    [13]                    [17]        [21]                                                
  ┌┘  └┐          └┐          └┐                                                                      └┐                      └┐      ┌┘                                                          
[01]  [03]        [06]        [09]                                                                    [14]                    [18]  [20]                                                      

Tree Placeholders:------------------
[01] -> (-141, -141)
[02] -> (-133, -133)
[03] -> (-131, -131)
[04] -> (-123, -123)
[05] -> (-102, -102)
[06] -> (-95, -95)
[07] -> (-80, -80)
[08] -> (-76, -76)
[09] -> (-72, -72)
[10] -> (-56, -56)
[11] -> (-46, -46)
[12] -> (-12, -12)
[13] -> (-6, -6)
[14] -> (28, 28)
[15] -> (34, 34)
[16] -> (46, 46)
[17] -> (50, 50)
[18] -> (63, 63)
[19] -> (68, 68)
[20] -> (85, 85)
[21] -> (92, 92)
[22] -> (102, 102)
[23] -> (111, 111)
[24] -> (117, 117)
[25] -> (145, 145)

element to be removed: 117
element to be removed: 46
element to be removed: 111
element to be removed: 13
element to be removed: -131
element to be removed: -12
element to be removed: 4
element to be removed: -3
element to be removed: -133
element to be removed: 28
element to be removed: 92
element to be removed: -102
element to be removed: -95
element to be removed: 68
element to be removed: -76
element to be removed: -141
element to be removed: 145
element to be removed: 102
element to be removed: -46
element to be removed: 85
element to be removed: -56
element to be removed: 50
element to be removed: 34
element to be removed: -80
element to be removed: -123
element to be removed: -72
element to be removed: -6
element to be removed: 63
element to be removed: 70
element to be removed: 18
                                                                                             [20]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [12]                                                                                            [21]
                       ┌─────────────────────┘  └─────────────────────┐                                                                         └─────────────────────┐                                                
                     [05]                                            [18]                                                                                            [22]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                                                                                                        
         [04]                    [08]                    [16]                    [19]                                                                                                
     ┌───┘                   ┌───┘  └───┐            ┌───┘  └───┐                                                                                                                                    
   [02]                    [06]        [10]        [14]        [17]                                                                                                                        
  ┌┘  └┐                      └┐      ┌┘  └┐      ┌┘  └┐                                                                                                                                          
[01]  [03]                    [07]  [09]  [11]  [13]  [15]                                                                                                                                    

Tree Placeholders:------------------
[01] -> (-126, -126)
[02] -> (-107, -107)
[03] -> (-65, -65)
[04] -> (-63, -63)
[05] -> (-54, -54)
[06] -> (-52, -52)
[07] -> (-44, -44)
[08] -> (-24, -24)
[09] -> (-23, -23)
[10] -> (-22, -22)
[11] -> (-18, -18)
[12] -> (-2, -2)
[13] -> (-1, -1)
[14] -> (9, 9)
[15] -> (22, 22)
[16] -> (30, 30)
[17] -> (46, 46)
[18] -> (59, 59)
[19] -> (81, 81)
[20] -> (89, 89)
[21] -> (127, 127)
[22] -> (135, 135)

element to be removed: -65
element to be removed: -98
element to be removed: -63
element to be removed: 30
element to be removed: -2
element to be removed: -44
element to be removed: -23
element to be removed: -21
element to be removed: 59
element to be removed: -52
element to be removed: -122
element to be removed: -1
element to be removed: -22
element to be removed: 22
element to be removed: -124
element to be removed: 46
element to be removed: -126
element to be removed: -54
element to be removed: -123
element to be removed: -24
element to be removed: -107
element to be removed: 9
element to be removed: 81
element to be removed: 135
element to be removed: -40
element to be removed: 127
element to be removed: -150
element to be removed: -130
element to be removed: 89
element to be removed: -18
                                                                                             [18]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [09]                                                                                            [21]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘                                                                         
                     [05]                                            [14]                                            [20]                                                
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘                                                                                     
         [01]                    [06]                    [13]                    [17]                    [19]                                                                        
            └───┐                   └───┐            ┌───┘                   ┌───┘                                                                                                                   
               [03]                    [08]        [11]                    [15]                                                                                                            
              ┌┘  └┐                  ┌┘          ┌┘  └┐                      └┐                                                                                                                  
            [02]  [04]              [07]        [10]  [12]                    [16]                                                                                                            

Tree Placeholders:------------------
[01] -> (-146, -146)
[02] -> (-142, -142)
[03] -> (-69, -69)
[04] -> (-67, -67)
[05] -> (-66, -66)
[06] -> (-56, -56)
[07] -> (-53, -53)
[08] -> (-38, -38)
[09] -> (-31, -31)
[10] -> (-16, -16)
[11] -> (-4, -4)
[12] -> (6, 6)
[13] -> (28, 28)
[14] -> (31, 31)
[15] -> (35, 35)
[16] -> (69, 69)
[17] -> (91, 91)
[18] -> (113, 113)
[19] -> (116, 116)
[20] -> (123, 123)
[21] -> (125, 125)

element to be removed: 17
element to be removed: 91
element to be removed: 125
element to be removed: 113
element to be removed: -80
element to be removed: -16
element to be removed: -69
element to be removed: 19
element to be removed: -123
element to be removed: 31
element to be removed: 25
element to be removed: 35
element to be removed: 123
element to be removed: -136
element to be removed: 54
element to be removed: -146
element to be removed: -53
element to be removed: -142
element to be removed: -38
element to be removed: -67
element to be removed: 28
element to be removed: 6
element to be removed: -42
element to be removed: 116
element to be removed: 69
element to be removed: -56
element to be removed: -66
element to be removed: -121
element to be removed: -31
element to be removed: -4
                                                                                             [06]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [01]                                                                                            [17]
                                                └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                                                                     [05]                                            [10]                                            [23]
                                                           ┌─────────┘                                     ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
                                                         [04]                                            [09]                    [13]                    [20]                    [24]
                                                     ┌───┘                                           ┌───┘                   ┌───┘  └───┐            ┌───┘  └───┐                                    
                                                   [02]                                            [07]                    [11]        [15]        [18]        [21]                        
                                                      └┐                                              └┐                      └┐      ┌┘  └┐          └┐          └┐                              
                                                      [03]                                            [08]                    [12]  [14]  [16]        [19]        [22]                        

Tree Placeholders:------------------
[01] -> (-127, -127)
[02] -> (-105, -105)
[03] -> (-100, -100)
[04] -> (-98, -98)
[05] -> (-90, -90)
[06] -> (-82, -82)
[07] -> (-79, -79)
[08] -> (-71, -71)
[09] -> (-62, -62)
[10] -> (-49, -49)
[11] -> (-32, -32)
[12] -> (-13, -13)
[13] -> (8, 8)
[14] -> (43, 43)
[15] -> (53, 53)
[16] -> (55, 55)
[17] -> (73, 73)
[18] -> (77, 77)
[19] -> (87, 87)
[20] -> (94, 94)
[21] -> (105, 105)
[22] -> (106, 106)
[23] -> (115, 115)
[24] -> (134, 134)

element to be removed: -90
element to be removed: 94
element to be removed: 115
element to be removed: 8
element to be removed: 72
element to be removed: -100
element to be removed: 77
element to be removed: 44
element to be removed: 67
element to be removed: -127
element to be removed: -79
element to be removed: 90
element to be removed: 43
element to be removed: -7
element to be removed: -49
element to be removed: -62
element to be removed: -32
element to be removed: -73
element to be removed: -13
element to be removed: 55
element to be removed: -105
element to be removed: 87
element to be removed: -82
element to be removed: -71
element to be removed: -98
element to be removed: 53
element to be removed: 105
element to be removed: 106
element to be removed: 134
element to be removed: 73
                                                                                             [07]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [05]                                                                                            [16]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [01]                                            [06]                                            [11]                                            [22]
                        └─────────┐                                                                        ┌─────────┘  └─────────┐                        ┌─────────┘                                     
                                 [04]                                                                    [08]                    [14]                    [18]                        
                             ┌───┘                                                                          └───┐            ┌───┘  └───┐            ┌───┘  └───┐                                    
                           [03]                                                                                [09]        [12]        [15]        [17]        [20]                        
                          ┌┘                                                                                      └┐          └┐                              ┌┘  └┐                              
                        [02]                                                                                      [10]        [13]                          [19]  [21]                        

Tree Placeholders:------------------
[01] -> (-148, -148)
[02] -> (-145, -145)
[03] -> (-142, -142)
[04] -> (-141, -141)
[05] -> (-139, -139)
[06] -> (-134, -134)
[07] -> (-121, -121)
[08] -> (-120, -120)
[09] -> (-88, -88)
[10] -> (-71, -71)
[11] -> (-58, -58)
[12] -> (-43, -43)
[13] -> (-16, -16)
[14] -> (-15, -15)
[15] -> (-11, -11)
[16] -> (-9, -9)
[17] -> (-8, -8)
[18] -> (16, 16)
[19] -> (24, 24)
[20] -> (115, 115)
[21] -> (119, 119)
[22] -> (146, 146)

element to be removed: 128
element to be removed: -121
element to be removed: -142
element to be removed: 30
element to be removed: -58
element to be removed: -120
element to be removed: 112
element to be removed: -8
element to be removed: -145
element to be removed: 146
element to be removed: -141
element to be removed: -43
element to be removed: -71
element to be removed: -134
element to be removed: 75
element to be removed: 115
element to be removed: -15
element to be removed: -59
element to be removed: -11
element to be removed: -139
element to be removed: -148
element to be removed: -76
element to be removed: -80
element to be removed: 119
element to be removed: -16
element to be removed: -9
element to be removed: 16
element to be removed: 24
element to be removed: 61
element to be removed: -88
                                                                                             [15]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [06]                                                                                            [16]
                       ┌─────────────────────┘  └─────────────────────┐                                                                         └─────────────────────┐                                                
                     [04]                                            [11]                                                                                            [18]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                                                        ┌─────────┘  └─────────┐                        
         [03]                    [05]                    [10]                    [12]                                                                    [17]                    [21]
     ┌───┘                                           ┌───┘                          └───┐                                                                                    ┌───┘                   
   [01]                                            [08]                                [14]                                                                                [20]            
      └┐                                          ┌┘  └┐                              ┌┘                                                                                  ┌┘                      
      [02]                                      [07]  [09]                          [13]                                                                                [19]                  

Tree Placeholders:------------------
[01] -> (-141, -141)
[02] -> (-132, -132)
[03] -> (-131, -131)
[04] -> (-110, -110)
[05] -> (-105, -105)
[06] -> (-100, -100)
[07] -> (-55, -55)
[08] -> (-54, -54)
[09] -> (-35, -35)
[10] -> (-28, -28)
[11] -> (-21, -21)
[12] -> (-3, -3)
[13] -> (36, 36)
[14] -> (49, 49)
[15] -> (62, 62)
[16] -> (87, 87)
[17] -> (100, 100)
[18] -> (106, 106)
[19] -> (107, 107)
[20] -> (123, 123)
[21] -> (144, 144)

element to be removed: -78
element to be removed: -35
element to be removed: -110
element to be removed: -100
element to be removed: 36
element to be removed: -55
element to be removed: -131
element to be removed: 25
element to be removed: -85
element to be removed: -135
element to be removed: 45
element to be removed: 107
element to be removed: 123
element to be removed: -3
element to be removed: 62
element to be removed: -105
element to be removed: 144
element to be removed: -54
element to be removed: -21
element to be removed: 0
element to be removed: -132
element to be removed: 106
element to be removed: -28
element to be removed: -87
element to be removed: 100
element to be removed: 87
element to be removed: -141
element to be removed: -74
element to be removed: 49
element to be removed: -67
                                                                                             [13]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [12]                                                                                            [20]
                       ┌─────────────────────┘                                                                         ┌─────────────────────┘  └─────────────────────┐                                                
                     [04]                                                                                            [19]                                            [24]
           ┌─────────┘  └─────────┐                                                                        ┌─────────┘                                     ┌─────────┘                                     
         [01]                    [08]                                                                    [16]                                            [23]                        
            └───┐            ┌───┘  └───┐                                                            ┌───┘  └───┐                                    ┌───┘                                           
               [03]        [06]        [10]                                                        [15]        [18]                                [21]                                    
              ┌┘          ┌┘  └┐      ┌┘  └┐                                                      ┌┘          ┌┘                                      └┐                                          
            [02]        [05]  [07]  [09]  [11]                                                  [14]        [17]                                      [22]                                    

Tree Placeholders:------------------
[01] -> (-141, -141)
[02] -> (-134, -134)
[03] -> (-133, -133)
[04] -> (-127, -127)
[05] -> (-115, -115)
[06] -> (-114, -114)
[07] -> (-110, -110)
[08] -> (-78, -78)
[09] -> (-57, -57)
[10] -> (-50, -50)
[11] -> (-38, -38)
[12] -> (-30, -30)
[13] -> (-23, -23)
[14] -> (-9, -9)
[15] -> (-7, -7)
[16] -> (-2, -2)
[17] -> (-1, -1)
[18] -> (5, 5)
[19] -> (13, 13)
[20] -> (19, 19)
[21] -> (25, 25)
[22] -> (84, 84)
[23] -> (96, 96)
[24] -> (122, 122)

element to be removed: -30
element to be removed: 19
element to be removed: -127
element to be removed: 45
element to be removed: -110
element to be removed: -116
element to be removed: -2
element to be removed: 25
element to be removed: -7
element to be removed: -57
element to be removed: 76
element to be removed: -114
element to be removed: -133
element to be removed: 5
element to be removed: -115
element to be removed: -1
element to be removed: -38
element to be removed: -23
element to be removed: 122
element to be removed: 84
element to be removed: -134
element to be removed: 96
element to be removed: -47
element to be removed: 68
element to be removed: -50
element to be removed: -69
element to be removed: -9
element to be removed: -78
element to be removed: -141
element to be removed: 13
                                                                                             [15]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [04]                                                                                            [19]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [01]                                            [11]                                            [16]                                            [20]
                        └─────────┐                        ┌─────────┘  └─────────┐                                     └─────────┐                                                                        
                                 [03]                    [08]                    [12]                                            [18]                                                
                             ┌───┘                   ┌───┘  └───┐                   └───┐                                    ┌───┘                                                                   
                           [02]                    [06]        [09]                    [14]                                [17]                                                            
                                                  ┌┘  └┐          └┐                  ┌┘                                                                                                          
                                                [05]  [07]        [10]              [13]                                                                                                      

Tree Placeholders:------------------
[01] -> (-130, -130)
[02] -> (-121, -121)
[03] -> (-118, -118)
[04] -> (-117, -117)
[05] -> (-115, -115)
[06] -> (-47, -47)
[07] -> (-33, -33)
[08] -> (38, 38)
[09] -> (59, 59)
[10] -> (68, 68)
[11] -> (86, 86)
[12] -> (92, 92)
[13] -> (95, 95)
[14] -> (97, 97)
[15] -> (98, 98)
[16] -> (108, 108)
[17] -> (125, 125)
[18] -> (135, 135)
[19] -> (139, 139)
[20] -> (143, 143)

element to be removed: -94
element to be removed: 68
element to be removed: -121
element to be removed: 37
element to be removed: -33
element to be removed: -59
element to be removed: 71
element to be removed: 108
element to be removed: 38
element to be removed: 59
element to be removed: 97
element to be removed: -47
element to be removed: -53
element to be removed: 98
element to be removed: -117
element to be removed: -41
element to be removed: 139
element to be removed: -115
element to be removed: -18
element to be removed: 95
element to be removed: 14
element to be removed: -130
element to be removed: 125
element to be removed: 135
element to be removed: 92
element to be removed: -62
element to be removed: 86
element to be removed: -37
element to be removed: -118
element to be removed: 143
                                                                                             [19]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [11]                                                                                            [24]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [06]                                            [17]                                            [22]                                            [29]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘                                     
         [03]                    [07]                    [14]                    [18]                    [21]                    [23]                    [27]                        
     ┌───┘  └───┐                   └───┐            ┌───┘  └───┐                                    ┌───┘                                           ┌───┘  └───┐                                    
   [01]        [04]                    [09]        [13]        [15]                                [20]                                            [25]        [28]                        
      └┐          └┐                  ┌┘  └┐      ┌┘              └┐                                                                                  └┐                                          
      [02]        [05]              [08]  [10]  [12]              [16]                                                                                [26]                                    

Tree Placeholders:------------------
[01] -> (-143, -143)
[02] -> (-139, -139)
[03] -> (-130, -130)
[04] -> (-125, -125)
[05] -> (-120, -120)
[06] -> (-118, -118)
[07] -> (-114, -114)
[08] -> (-109, -109)
[09] -> (-105, -105)
[10] -> (-76, -76)
[11] -> (-63, -63)
[12] -> (-61, -61)
[13] -> (-29, -29)
[14] -> (-9, -9)
[15] -> (13, 13)
[16] -> (28, 28)
[17] -> (29, 29)
[18] -> (40, 40)
[19] -> (44, 44)
[20] -> (57, 57)
[21] -> (58, 58)
[22] -> (77, 77)
[23] -> (85, 85)
[24] -> (86, 86)
[25] -> (102, 102)
[26] -> (103, 103)
[27] -> (135, 135)
[28] -> (141, 141)
[29] -> (147, 147)

element to be removed: -114
element to be removed: 135
element to be removed: -9
element to be removed: -130
element to be removed: 17
element to be removed: 77
element to be removed: -118
element to be removed: 28
element to be removed: -76
element to be removed: 40
element to be removed: 85
element to be removed: -63
element to be removed: -143
element to be removed: 103
element to be removed: 13
element to be removed: 147
element to be removed: -105
element to be removed: 141
element to be removed: -120
element to be removed: 44
element to be removed: -29
element to be removed: -61
element to be removed: -125
element to be removed: -109
element to be removed: 57
element to be removed: 29
element to be removed: 102
element to be removed: 86
element to be removed: -139
element to be removed: 58
                                                                                             [03]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [02]                                                                                            [13]
                       ┌─────────────────────┘                                                                         ┌─────────────────────┘                                                                         
                     [01]                                                                                            [10]                                                
                                                                                                           ┌─────────┘  └─────────┐                                                                        
                                                                                                         [06]                    [11]                                                
                                                                                                     ┌───┘  └───┐                   └───┐                                                            
                                                                                                   [04]        [08]                    [12]                                                
                                                                                                      └┐      ┌┘  └┐                                                                              
                                                                                                      [05]  [07]  [09]                                                                        

Tree Placeholders:------------------
[01] -> (-150, -150)
[02] -> (-138, -138)
[03] -> (-129, -129)
[04] -> (-115, -115)
[05] -> (-82, -82)
[06] -> (-81, -81)
[07] -> (-45, -45)
[08] -> (-27, -27)
[09] -> (-23, -23)
[10] -> (140, 140)
[11] -> (141, 141)
[12] -> (144, 144)
[13] -> (148, 148)

element to be removed: -81
element to be removed: 66
element to be removed: -150
element to be removed: 96
element to be removed: -23
element to be removed: -12
element to be removed: 7
element to be removed: 109
element to be removed: 113
element to be removed: -13
element to be removed: -45
element to be removed: -82
element to be removed: 76
element to be removed: -17
element to be removed: 141
element to be removed: -72
element to be removed: -35
element to be removed: -138
element to be removed: 140
element to be removed: 9
element to be removed: -115
element to be removed: -129
element to be removed: -66
element to be removed: -37
element to be removed: 148
element to be removed: -15
element to be removed: 144
element to be removed: -27
element to be removed: -70
element to be removed: 31
                                                                                             [17]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [07]                                                                                            [20]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [06]                                            [12]                                            [18]                                            [22]
           ┌─────────┘                                     ┌─────────┘  └─────────┐                                     └─────────┐                        ┌─────────┘                                     
         [03]                                            [08]                    [15]                                            [19]                    [21]                        
     ┌───┘  └───┐                                           └───┐            ┌───┘  └───┐                                                                                                            
   [02]        [05]                                            [10]        [13]        [16]                                                                                                
  ┌┘          ┌┘                                              ┌┘  └┐          └┐                                                                                                                  
[01]        [04]                                            [09]  [11]        [14]                                                                                                            

Tree Placeholders:------------------
[01] -> (-125, -125)
[02] -> (-98, -98)
[03] -> (-78, -78)
[04] -> (9, 9)
[05] -> (12, 12)
[06] -> (16, 16)
[07] -> (20, 20)
[08] -> (23, 23)
[09] -> (35, 35)
[10] -> (37, 37)
[11] -> (54, 54)
[12] -> (61, 61)
[13] -> (63, 63)
[14] -> (106, 106)
[15] -> (107, 107)
[16] -> (113, 113)
[17] -> (119, 119)
[18] -> (121, 121)
[19] -> (122, 122)
[20] -> (132, 132)
[21] -> (138, 138)
[22] -> (149, 149)

element to be removed: -98
element to be removed: 149
element to be removed: 16
element to be removed: -44
element to be removed: -105
element to be removed: 37
element to be removed: 132
element to be removed: -146
element to be removed: 63
element to be removed: 113
element to be removed: -138
element to be removed: 121
element to be removed: 54
element to be removed: 97
element to be removed: -125
element to be removed: 106
element to be removed: 20
element to be removed: 3
element to be removed: 138
element to be removed: 35
element to be removed: 23
element to be removed: -120
element to be removed: 107
element to be removed: 61
element to be removed: -101
element to be removed: 119
element to be removed: 12
element to be removed: 9
element to be removed: 122
element to be removed: -78
                                                                                             [10]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [02]                                                                                            [12]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [01]                                            [03]                                            [11]                                            [17]
                                                                        └─────────┐                                                                        ┌─────────┘  └─────────┐                        
                                                                                 [07]                                                                    [16]                    [20]
                                                                             ┌───┘  └───┐                                                            ┌───┘                   ┌───┘                   
                                                                           [05]        [09]                                                        [14]                    [18]            
                                                                          ┌┘  └┐      ┌┘                                                          ┌┘  └┐                      └┐                  
                                                                        [04]  [06]  [08]                                                        [13]  [15]                    [19]            

Tree Placeholders:------------------
[01] -> (-143, -143)
[02] -> (-141, -141)
[03] -> (-134, -134)
[04] -> (-71, -71)
[05] -> (-25, -25)
[06] -> (-23, -23)
[07] -> (-22, -22)
[08] -> (-8, -8)
[09] -> (-3, -3)
[10] -> (2, 2)
[11] -> (6, 6)
[12] -> (36, 36)
[13] -> (50, 50)
[14] -> (80, 80)
[15] -> (97, 97)
[16] -> (99, 99)
[17] -> (101, 101)
[18] -> (128, 128)
[19] -> (139, 139)
[20] -> (145, 145)

element to be removed: 36
element to be removed: -121
element to be removed: 139
element to be removed: -130
element to be removed: 97
element to be removed: -8
element to be removed: 6
element to be removed: 101
element to be removed: 50
element to be removed: 145
element to be removed: 41
element to be removed: 80
element to be removed: -143
element to be removed: -24
element to be removed: 128
element to be removed: -106
element to be removed: -3
element to be removed: -141
element to be removed: 99
element to be removed: -134
element to be removed: -22
element to be removed: -71
element to be removed: 81
element to be removed: -129
element to be removed: -25
element to be removed: -85
element to be removed: -87
element to be removed: -23
element to be removed: 59
element to be removed: 2
                                                                                             [07]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [02]                                                                                            [10]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [01]                                            [04]                                            [08]                                            [12]
                                                           ┌─────────┘  └─────────┐                                     └─────────┐                        ┌─────────┘  └─────────┐                        
                                                         [03]                    [06]                                            [09]                    [11]                    [13]
                                                                             ┌───┘                                                                                                  └───┐            
                                                                           [05]                                                                                                        [15]
                                                                                                                                                                                      ┌┘  └┐      
                                                                                                                                                                                    [14]  [16]

Tree Placeholders:------------------
[01] -> (-150, -150)
[02] -> (-139, -139)
[03] -> (-136, -136)
[04] -> (-135, -135)
[05] -> (-126, -126)
[06] -> (-118, -118)
[07] -> (-104, -104)
[08] -> (-99, -99)
[09] -> (-83, -83)
[10] -> (-81, -81)
[11] -> (-70, -70)
[12] -> (-53, -53)
[13] -> (-36, -36)
[14] -> (13, 13)
[15] -> (47, 47)
[16] -> (93, 93)

element to be removed: -70
element to be removed: -136
element to be removed: -9
element to be removed: -4
element to be removed: 129
element to be removed: 15
element to be removed: -150
element to be removed: 54
element to be removed: -53
element to be removed: -14
element to be removed: 130
element to be removed: -118
element to be removed: -126
element to be removed: -99
element to be removed: 68
element to be removed: -5
element to be removed: -104
element to be removed: -139
element to be removed: -36
element to be removed: -28
element to be removed: 3
element to be removed: 47
element to be removed: 13
element to be removed: 103
element to be removed: -81
element to be removed: 93
element to be removed: -33
element to be removed: -135
element to be removed: -83
element to be removed: 0
                                                                                             [14]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [06]                                                                                            [18]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘                                                                         
                     [02]                                            [09]                                            [15]                                                
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                     └─────────┐                                                                        
         [01]                    [03]                    [08]                    [13]                                            [17]                                                
                                    └───┐            ┌───┘                   ┌───┘                                           ┌───┘                                                                   
                                       [04]        [07]                    [11]                                            [16]                                                            
                                          └┐                              ┌┘  └┐                                                                                                                  
                                          [05]                          [10]  [12]                                                                                                            

Tree Placeholders:------------------
[01] -> (-130, -130)
[02] -> (-127, -127)
[03] -> (-118, -118)
[04] -> (-89, -89)
[05] -> (-84, -84)
[06] -> (-5, -5)
[07] -> (2, 2)
[08] -> (23, 23)
[09] -> (29, 29)
[10] -> (36, 36)
[11] -> (41, 41)
[12] -> (55, 55)
[13] -> (102, 102)
[14] -> (107, 107)
[15] -> (123, 123)
[16] -> (125, 125)
[17] -> (139, 139)
[18] -> (141, 141)

element to be removed: 57
element to be removed: -59
element to be removed: -74
element to be removed: -5
element to be removed: 107
element to be removed: 55
element to be removed: 139
element to be removed: 35
element to be removed: -89
element to be removed: 29
element to be removed: -84
element to be removed: 36
element to be removed: -130
element to be removed: -127
element to be removed: 141
element to be removed: 47
element to be removed: 102
element to be removed: -48
element to be removed: 59
element to be removed: 123
element to be removed: 125
element to be removed: 41
element to be removed: -29
element to be removed: -25
element to be removed: -22
element to be removed: 23
element to be removed: 48
element to be removed: -118
element to be removed: 52
element to be removed: 2
                                                                                             [12]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [05]                                                                                            [22]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [01]                                            [10]                                            [16]                                            [24]
                        └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘                                     
                                 [02]                    [07]                    [11]                    [15]                    [20]                    [23]                        
                                    └───┐            ┌───┘  └───┐                                    ┌───┘                   ┌───┘  └───┐                                                            
                                       [03]        [06]        [08]                                [14]                    [18]        [21]                                                
                                          └┐                      └┐                              ┌┘                      ┌┘  └┐                                                                  
                                          [04]                    [09]                          [13]                    [17]  [19]                                                            

Tree Placeholders:------------------
[01] -> (-147, -147)
[02] -> (-146, -146)
[03] -> (-137, -137)
[04] -> (-117, -117)
[05] -> (-113, -113)
[06] -> (-107, -107)
[07] -> (-85, -85)
[08] -> (-83, -83)
[09] -> (-79, -79)
[10] -> (-76, -76)
[11] -> (-41, -41)
[12] -> (-32, -32)
[13] -> (-6, -6)
[14] -> (4, 4)
[15] -> (24, 24)
[16] -> (36, 36)
[17] -> (51, 51)
[18] -> (64, 64)
[19] -> (89, 89)
[20] -> (117, 117)
[21] -> (123, 123)
[22] -> (125, 125)
[23] -> (132, 132)
[24] -> (150, 150)

element to be removed: -146
element to be removed: 82
element to be removed: -41
element to be removed: 4
element to be removed: 58
element to be removed: -6
element to be removed: 64
element to be removed: 132
element to be removed: 36
element to be removed: -113
element to be removed: 150
element to be removed: 60
element to be removed: 24
element to be removed: 123
element to be removed: -27
element to be removed: 47
element to be removed: 125
element to be removed: -79
element to be removed: 89
element to be removed: -76
element to be removed: -85
element to be removed: 103
element to be removed: -32
element to be removed: -83
element to be removed: -117
element to be removed: -107
element to be removed: 117
element to be removed: -147
element to be removed: 51
element to be removed: -137
                                                                                             [10]
                                               ┌─────────────────────────────────────────────┘                                                                                                                                                 
                                             [09]                                                                                                
                       ┌─────────────────────┘                                                                                                                                                                         
                     [02]                                                                                                                                                
           ┌─────────┘  └─────────┐                                                                                                                                                                        
         [01]                    [05]                                                                                                                                                
                             ┌───┘  └───┐                                                                                                                                                            
                           [03]        [07]                                                                                                                                                
                              └┐      ┌┘  └┐                                                                                                                                                      
                              [04]  [06]  [08]                                                                                                                                                

Tree Placeholders:------------------
[01] -> (-128, -128)
[02] -> (-121, -121)
[03] -> (-117, -117)
[04] -> (-103, -103)
[05] -> (-98, -98)
[06] -> (35, 35)
[07] -> (88, 88)
[08] -> (107, 107)
[09] -> (120, 120)
[10] -> (142, 142)

element to be removed: 21
element to be removed: -67
element to be removed: -93
element to be removed: 88
element to be removed: -89
element to be removed: 107
element to be removed: -23
element to be removed: 35
element to be removed: -74
element to be removed: 142
element to be removed: -103
element to be removed: -22
element to be removed: -64
element to be removed: -117
element to be removed: 14
element to be removed: -2
element to be removed: 101
element to be removed: -36
element to be removed: -98
element to be removed: -121
element to be removed: 94
element to be removed: 75
element to be removed: 57
element to be removed: -128
element to be removed: -14
element to be removed: 120
element to be removed: 60
element to be removed: 105
element to be removed: 81
element to be removed: -85
                                                                                             [08]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [06]                                                                                            [15]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [01]                                            [07]                                            [09]                                            [16]
                        └─────────┐                                                                                     └─────────┐                                     └─────────┐                        
                                 [04]                                                                                            [13]                                            [17]
                             ┌───┘  └───┐                                                                                    ┌───┘  └───┐                                           └───┐            
                           [03]        [05]                                                                                [11]        [14]                                            [18]
                          ┌┘                                                                                              ┌┘  └┐                                                                  
                        [02]                                                                                            [10]  [12]                                                            

Tree Placeholders:------------------
[01] -> (-149, -149)
[02] -> (-134, -134)
[03] -> (-73, -73)
[04] -> (-58, -58)
[05] -> (-55, -55)
[06] -> (-52, -52)
[07] -> (-39, -39)
[08] -> (-36, -36)
[09] -> (-28, -28)
[10] -> (0, 0)
[11] -> (13, 13)
[12] -> (62, 62)
[13] -> (88, 88)
[14] -> (91, 91)
[15] -> (119, 119)
[16] -> (120, 120)
[17] -> (123, 123)
[18] -> (136, 136)

element to be removed: 63
element to be removed: 91
element to be removed: -73
element to be removed: 54
element to be removed: 0
element to be removed: -149
element to be removed: 71
element to be removed: -39
element to be removed: 84
element to be removed: 88
element to be removed: -58
element to be removed: -134
element to be removed: -55
element to be removed: -52
element to be removed: 72
element to be removed: 136
element to be removed: -6
element to be removed: 32
element to be removed: 123
element to be removed: 62
element to be removed: 47
element to be removed: 120
element to be removed: -129
element to be removed: 119
element to be removed: 13
element to be removed: 66
element to be removed: 79
element to be removed: -28
element to be removed: -36
element to be removed: -26
                                                                                             [02]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [01]                                                                                            [11]
                                                                                                                       ┌─────────────────────┘  └─────────────────────┐                                                
                                                                                                                     [04]                                            [16]
                                                                                                           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
                                                                                                         [03]                    [07]                    [13]                    [18]
                                                                                                                             ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘                   
                                                                                                                           [05]        [09]        [12]        [15]        [17]            
                                                                                                                              └┐      ┌┘  └┐                  ┌┘                                  
                                                                                                                              [06]  [08]  [10]              [14]                              

Tree Placeholders:------------------
[01] -> (-137, -137)
[02] -> (-132, -132)
[03] -> (-102, -102)
[04] -> (-101, -101)
[05] -> (-94, -94)
[06] -> (-69, -69)
[07] -> (-63, -63)
[08] -> (-62, -62)
[09] -> (-53, -53)
[10] -> (-36, -36)
[11] -> (-23, -23)
[12] -> (3, 3)
[13] -> (16, 16)
[14] -> (52, 52)
[15] -> (92, 92)
[16] -> (105, 105)
[17] -> (116, 116)
[18] -> (142, 142)

element to be removed: -53
element to be removed: 82
element to be removed: -47
element to be removed: 52
element to be removed: -85
element to be removed: 85
element to be removed: 105
element to be removed: 142
element to be removed: 3
element to be removed: -69
element to be removed: -132
element to be removed: 55
element to be removed: 75
element to be removed: -23
element to be removed: 116
element to be removed: -137
element to be removed: -63
element to be removed: -62
element to be removed: 66
element to be removed: -94
element to be removed: 39
element to be removed: -33
element to be removed: -36
element to be removed: -76
element to be removed: 92
element to be removed: 18
element to be removed: 16
element to be removed: -101
element to be removed: 36
element to be removed: -102
                                                                                             [17]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [08]                                                                                            [19]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [03]                                            [10]                                            [18]                                            [20]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                                                                     └─────────┐                        
         [02]                    [05]                    [09]                    [13]                                                                                            [22]
     ┌───┘                   ┌───┘  └───┐                                    ┌───┘  └───┐                                                                                    ┌───┘  └───┐            
   [01]                    [04]        [07]                                [11]        [15]                                                                                [21]        [24]
                                      ┌┘                                      └┐      ┌┘  └┐                                                                                          ┌┘          
                                    [06]                                      [12]  [14]  [16]                                                                                      [23]      

Tree Placeholders:------------------
[01] -> (-127, -127)
[02] -> (-123, -123)
[03] -> (-116, -116)
[04] -> (-113, -113)
[05] -> (-111, -111)
[06] -> (-100, -100)
[07] -> (-57, -57)
[08] -> (-55, -55)
[09] -> (-45, -45)
[10] -> (-12, -12)
[11] -> (45, 45)
[12] -> (57, 57)
[13] -> (76, 76)
[14] -> (77, 77)
[15] -> (79, 79)
[16] -> (86, 86)
[17] -> (97, 97)
[18] -> (99, 99)
[19] -> (101, 101)
[20] -> (106, 106)
[21] -> (116, 116)
[22] -> (125, 125)
[23] -> (139, 139)
[24] -> (148, 148)

element to be removed: -55
element to be removed: 106
element to be removed: -123
element to be removed: 77
element to be removed: 47
element to be removed: 79
element to be removed: -12
element to be removed: -100
element to be removed: -113
element to be removed: 148
element to be removed: -57
element to be removed: -111
element to be removed: 66
element to be removed: 64
element to be removed: -116
element to be removed: 116
element to be removed: 101
element to be removed: 97
element to be removed: 57
element to be removed: 139
element to be removed: 94
element to be removed: 142
element to be removed: 45
element to be removed: 99
element to be removed: 86
element to be removed: 76
element to be removed: 125
element to be removed: -45
element to be removed: 143
element to be removed: -127
                                                                                             [18]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [07]                                                                                            [19]
                       ┌─────────────────────┘  └─────────────────────┐                                                                         └─────────────────────┐                                                
                     [03]                                            [15]                                                                                            [20]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                                                                     └─────────┐                        
         [02]                    [04]                    [11]                    [17]                                                                                            [21]
     ┌───┘                          └───┐            ┌───┘  └───┐            ┌───┘                                                                                                                   
   [01]                                [05]        [09]        [13]        [16]                                                                                                            
                                          └┐      ┌┘  └┐      ┌┘  └┐                                                                                                                              
                                          [06]  [08]  [10]  [12]  [14]                                                                                                                        

Tree Placeholders:------------------
[01] -> (-149, -149)
[02] -> (-147, -147)
[03] -> (-144, -144)
[04] -> (-130, -130)
[05] -> (-72, -72)
[06] -> (-52, -52)
[07] -> (-48, -48)
[08] -> (-43, -43)
[09] -> (-39, -39)
[10] -> (-38, -38)
[11] -> (-36, -36)
[12] -> (5, 5)
[13] -> (75, 75)
[14] -> (103, 103)
[15] -> (109, 109)
[16] -> (114, 114)
[17] -> (123, 123)
[18] -> (125, 125)
[19] -> (143, 143)
[20] -> (144, 144)
[21] -> (148, 148)

element to be removed: -147
element to be removed: 125
element to be removed: 26
element to be removed: 144
element to be removed: 103
element to be removed: 148
element to be removed: 123
element to be removed: 66
element to be removed: -130
element to be removed: -52
element to be removed: -36
element to be removed: -144
element to be removed: 99
element to be removed: 29
element to be removed: -48
element to be removed: 93
element to be removed: 114
element to be removed: -72
element to be removed: -43
element to be removed: 75
element to be removed: 16
element to be removed: -149
element to be removed: 109
element to be removed: -38
element to be removed: 105
element to be removed: -39
element to be removed: 65
element to be removed: 5
element to be removed: 95
element to be removed: 143
                                                                                             [08]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [06]                                                                                            [22]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [04]                                            [07]                                            [15]                                            [23]
           ┌─────────┘  └─────────┐                                                                        ┌─────────┘  └─────────┐                                                                        
         [02]                    [05]                                                                    [12]                    [19]                                                
     ┌───┘  └───┐                                                                                    ┌───┘  └───┐            ┌───┘  └───┐                                                            
   [01]        [03]                                                                                [10]        [14]        [17]        [20]                                                
                                                                                                  ┌┘  └┐      ┌┘          ┌┘  └┐          └┐                                                      
                                                                                                [09]  [11]  [13]        [16]  [18]        [21]                                                

Tree Placeholders:------------------
[01] -> (-141, -141)
[02] -> (-101, -101)
[03] -> (-98, -98)
[04] -> (-95, -95)
[05] -> (-85, -85)
[06] -> (-63, -63)
[07] -> (-62, -62)
[08] -> (-48, -48)
[09] -> (-32, -32)
[10] -> (-26, -26)
[11] -> (-16, -16)
[12] -> (-11, -11)
[13] -> (-2, -2)
[14] -> (30, 30)
[15] -> (42, 42)
[16] -> (57, 57)
[17] -> (66, 66)
[18] -> (68, 68)
[19] -> (75, 75)
[20] -> (87, 87)
[21] -> (128, 128)
[22] -> (134, 134)
[23] -> (143, 143)

element to be removed: -85
element to be removed: -11
element to be removed: -32
element to be removed: 115
element to be removed: 128
element to be removed: -16
element to be removed: 100
element to be removed: 143
element to be removed: 9
element to be removed: 57
element to be removed: 87
element to be removed: -63
element to be removed: -2
element to be removed: -4
element to be removed: 42
element to be removed: -98
element to be removed: -26
element to be removed: -27
element to be removed: -21
element to be removed: 68
element to be removed: -62
element to be removed: 30
element to be removed: 134
element to be removed: -48
element to be removed: -141
element to be removed: 75
element to be removed: 25
element to be removed: -101
element to be removed: 66
element to be removed: -95
                                                                                             [04]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [01]                                                                                            [15]
                                                └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                                                                     [02]                                            [09]                                            [21]
                                                                        └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
                                                                                 [03]                    [05]                    [12]                    [18]                    [24]
                                                                                                            └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘                   
                                                                                                               [07]        [11]        [13]        [17]        [19]        [22]            
                                                                                                              ┌┘  └┐      ┌┘              └┐      ┌┘              └┐          └┐                  
                                                                                                            [06]  [08]  [10]              [14]  [16]              [20]        [23]            

Tree Placeholders:------------------
[01] -> (-148, -148)
[02] -> (-143, -143)
[03] -> (-140, -140)
[04] -> (-139, -139)
[05] -> (-138, -138)
[06] -> (-118, -118)
[07] -> (-105, -105)
[08] -> (-94, -94)
[09] -> (-92, -92)
[10] -> (-90, -90)
[11] -> (-86, -86)
[12] -> (-80, -80)
[13] -> (-70, -70)
[14] -> (-67, -67)
[15] -> (-35, -35)
[16] -> (-32, -32)
[17] -> (48, 48)
[18] -> (56, 56)
[19] -> (68, 68)
[20] -> (74, 74)
[21] -> (75, 75)
[22] -> (79, 79)
[23] -> (118, 118)
[24] -> (135, 135)

element to be removed: -138
element to be removed: -139
element to be removed: -94
element to be removed: -140
element to be removed: 99
element to be removed: -13
element to be removed: 28
element to be removed: 74
element to be removed: -70
element to be removed: -35
element to be removed: 48
element to be removed: 75
element to be removed: -32
element to be removed: -33
element to be removed: 34
element to be removed: 68
element to be removed: 56
element to be removed: 89
element to be removed: -143
element to be removed: -67
element to be removed: 118
element to be removed: 135
element to be removed: -105
element to be removed: -80
element to be removed: -86
element to be removed: -118
element to be removed: -90
element to be removed: 79
element to be removed: -92
element to be removed: -148
                                                                                             [14]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [04]                                                                                            [25]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘                                                                         
                     [03]                                            [10]                                            [19]                                                
           ┌─────────┘                                     ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                                                        
         [02]                                            [07]                    [11]                    [16]                    [23]                                                
     ┌───┘                                           ┌───┘  └───┐                   └───┐            ┌───┘  └───┐            ┌───┘  └───┐                                                            
   [01]                                            [06]        [09]                    [12]        [15]        [17]        [21]        [24]                                                
                                                  ┌┘          ┌┘                          └┐                      └┐      ┌┘  └┐                                                                  
                                                [05]        [08]                          [13]                    [18]  [20]  [22]                                                            

Tree Placeholders:------------------
[01] -> (-140, -140)
[02] -> (-134, -134)
[03] -> (-131, -131)
[04] -> (-129, -129)
[05] -> (-126, -126)
[06] -> (-120, -120)
[07] -> (-109, -109)
[08] -> (-90, -90)
[09] -> (-18, -18)
[10] -> (-15, -15)
[11] -> (-9, -9)
[12] -> (-6, -6)
[13] -> (1, 1)
[14] -> (3, 3)
[15] -> (8, 8)
[16] -> (12, 12)
[17] -> (83, 83)
[18] -> (91, 91)
[19] -> (94, 94)
[20] -> (105, 105)
[21] -> (122, 122)
[22] -> (130, 130)
[23] -> (132, 132)
[24] -> (145, 145)
[25] -> (146, 146)

element to be removed: 130
element to be removed: -129
element to be removed: -18
element to be removed: 83
element to be removed: 119
element to be removed: 12
element to be removed: 3
element to be removed: -131
element to be removed: -140
element to be removed: 112
element to be removed: 122
element to be removed: -9
element to be removed: 8
element to be removed: 94
element to be removed: -83
element to be removed: -90
element to be removed: 146
element to be removed: 145
element to be removed: -126
element to be removed: -6
element to be removed: -120
element to be removed: -31
element to be removed: -109
element to be removed: 132
element to be removed: -15
element to be removed: 1
element to be removed: -134
element to be removed: 91
element to be removed: 105
element to be removed: -40
                                                                                             [18]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [12]                                                                                            [22]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [05]                                            [16]                                            [20]                                            [23]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                                                        
         [03]                    [08]                    [14]                    [17]                    [19]                    [21]                                                
     ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐                                                                                                                                    
   [01]        [04]        [07]        [10]        [13]        [15]                                                                                                                        
      └┐                  ┌┘          ┌┘  └┐                                                                                                                                                      
      [02]              [06]        [09]  [11]                                                                                                                                                

Tree Placeholders:------------------
[01] -> (-141, -141)
[02] -> (-139, -139)
[03] -> (-116, -116)
[04] -> (-96, -96)
[05] -> (-92, -92)
[06] -> (-90, -90)
[07] -> (-77, -77)
[08] -> (-59, -59)
[09] -> (-40, -40)
[10] -> (-39, -39)
[11] -> (-21, -21)
[12] -> (16, 16)
[13] -> (25, 25)
[14] -> (29, 29)
[15] -> (35, 35)
[16] -> (39, 39)
[17] -> (48, 48)
[18] -> (53, 53)
[19] -> (65, 65)
[20] -> (87, 87)
[21] -> (103, 103)
[22] -> (110, 110)
[23] -> (132, 132)

element to be removed: -13
element to be removed: 3
element to be removed: -92
element to be removed: 35
element to be removed: 110
element to be removed: -55
element to be removed: -21
element to be removed: 29
element to be removed: -116
element to be removed: -51
element to be removed: 53
element to be removed: 132
element to be removed: -141
element to be removed: 87
element to be removed: 8
element to be removed: 25
element to be removed: -134
element to be removed: 103
element to be removed: -59
element to be removed: -14
element to be removed: 48
element to be removed: -139
element to be removed: 16
element to be removed: -39
element to be removed: -90
element to be removed: -77
element to be removed: -40
element to be removed: 39
element to be removed: -96
element to be removed: 65
                                                                                             [16]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [09]                                                                                            [18]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [07]                                            [15]                                            [17]                                            [21]
           ┌─────────┘  └─────────┐                        ┌─────────┘                                                                                     ┌─────────┘  └─────────┐                        
         [04]                    [08]                    [12]                                                                                            [20]                    [22]
     ┌───┘  └───┐                                    ┌───┘  └───┐                                                                                    ┌───┘                          └───┐            
   [02]        [06]                                [10]        [13]                                                                                [19]                                [23]
  ┌┘  └┐      ┌┘                                      └┐          └┐                                                                                                                              
[01]  [03]  [05]                                      [11]        [14]                                                                                                                        

Tree Placeholders:------------------
[01] -> (-126, -126)
[02] -> (-125, -125)
[03] -> (-49, -49)
[04] -> (-16, -16)
[05] -> (7, 7)
[06] -> (9, 9)
[07] -> (11, 11)
[08] -> (17, 17)
[09] -> (22, 22)
[10] -> (32, 32)
[11] -> (58, 58)
[12] -> (59, 59)
[13] -> (61, 61)
[14] -> (68, 68)
[15] -> (69, 69)
[16] -> (70, 70)
[17] -> (73, 73)
[18] -> (112, 112)
[19] -> (124, 124)
[20] -> (126, 126)
[21] -> (143, 143)
[22] -> (147, 147)
[23] -> (148, 148)

element to be removed: 148
element to be removed: 112
element to be removed: 68
element to be removed: 126
element to be removed: -122
element to be removed: -144
element to be removed: -125
element to be removed: 32
element to be removed: 17
element to be removed: 59
element to be removed: 61
element to be removed: -18
element to be removed: 11
element to be removed: 124
element to be removed: -134
element to be removed: -16
element to be removed: 58
element to be removed: -126
element to be removed: 9
element to be removed: 2
element to be removed: 7
element to be removed: 22
element to be removed: -82
element to be removed: -49
element to be removed: 73
element to be removed: 143
element to be removed: 51
element to be removed: 70
element to be removed: 147
element to be removed: 69
[       OK ] BSTRemove.Random50x30ele (3849 ms)
[----------] 1 test from BSTRemove (3860 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (3909 ms total)
[  PASSED  ] 1 test.
==12009== 
==12009== HEAP SUMMARY:
==12009==     in use at exit: 0 bytes in 0 blocks
==12009==   total heap usage: 8,855 allocs, 8,855 frees, 623,731 bytes allocated
==12009== 
==12009== All heap blocks were freed -- no leaks are possible
==12009== 
==12009== For counts of detected and suppressed errors, rerun with: -v
==12009== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   5.10 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.Random50x30ele" end time: Nov 16 06:07 UTC
"BSTRemove.Random50x30ele" time elapsed: 00:00:05
----------------------------------------------------------

24/65 Testing: BSTStress.InsertRemove
24/65 Test: BSTStress.InsertRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTStress.InsertRemove"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTStress.InsertRemove" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12010== Memcheck, a memory error detector
==12010== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12010== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12010== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTStress.InsertRemove
==12010== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTStress.InsertRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTStress
[ RUN      ] BSTStress.InsertRemove
[       OK ] BSTStress.InsertRemove (270 ms)
[----------] 1 test from BSTStress (282 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (329 ms total)
[  PASSED  ] 1 test.
==12010== 
==12010== HEAP SUMMARY:
==12010==     in use at exit: 0 bytes in 0 blocks
==12010==   total heap usage: 749 allocs, 749 frees, 146,505 bytes allocated
==12010== 
==12010== All heap blocks were freed -- no leaks are possible
==12010== 
==12010== For counts of detected and suppressed errors, rerun with: -v
==12010== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.50 sec
----------------------------------------------------------
Test Passed.
"BSTStress.InsertRemove" end time: Nov 16 06:07 UTC
"BSTStress.InsertRemove" time elapsed: 00:00:01
----------------------------------------------------------

25/65 Testing: BSTStress.Remove
25/65 Test: BSTStress.Remove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTStress.Remove"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTStress.Remove" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12011== Memcheck, a memory error detector
==12011== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12011== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12011== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTStress.Remove
==12011== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTStress.Remove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTStress
[ RUN      ] BSTStress.Remove
Before any removals, tree is: 
                     [02]
           ┌─────────┘  └─────────┐                        
         [01]                    [03]
                                    └───┐            
                                       [04]
                                          └┐      
                                          [05]

Tree Placeholders:------------------
[01] -> (1, -50)
[02] -> (2, 8)
[03] -> (3, 0)
[04] -> (10, 0)
[05] -> (15, 0)

After removing -1 (which doesn't exist), tree is: 
                     [02]
           ┌─────────┘  └─────────┐                        
         [01]                    [03]
                                    └───┐            
                                       [04]
                                          └┐      
                                          [05]

Tree Placeholders:------------------
[01] -> (1, -50)
[02] -> (2, 8)
[03] -> (3, 0)
[04] -> (10, 0)
[05] -> (15, 0)

After removing 2 (the root), tree is: 
                     [01]
                        └─────────┐                        
                                 [02]
                                    └───┐            
                                       [03]
                                          └┐      
                                          [04]

Tree Placeholders:------------------
[01] -> (1, -50)
[02] -> (3, 0)
[03] -> (10, 0)
[04] -> (15, 0)

After removing 10, tree is: 
         [01]
            └───┐            
               [02]
                  └┐      
                  [03]

Tree Placeholders:------------------
[01] -> (1, -50)
[02] -> (3, 0)
[03] -> (15, 0)

After removing 1, tree is: 
   [01]
      └┐      
      [02]

Tree Placeholders:------------------
[01] -> (3, 0)
[02] -> (15, 0)

After removing 3, tree is: 
[01]

Tree Placeholders:------------------
[01] -> (15, 0)

After removing 15 (the last element), tree is: 
<empty tree>

After removing 15 (which doesn't exist), tree is: 
<empty tree>

[       OK ] BSTStress.Remove (262 ms)
[----------] 1 test from BSTStress (273 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (323 ms total)
[  PASSED  ] 1 test.
==12011== 
==12011== HEAP SUMMARY:
==12011==     in use at exit: 0 bytes in 0 blocks
==12011==   total heap usage: 616 allocs, 616 frees, 137,043 bytes allocated
==12011== 
==12011== All heap blocks were freed -- no leaks are possible
==12011== 
==12011== For counts of detected and suppressed errors, rerun with: -v
==12011== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.51 sec
----------------------------------------------------------
Test Passed.
"BSTStress.Remove" end time: Nov 16 06:07 UTC
"BSTStress.Remove" time elapsed: 00:00:01
----------------------------------------------------------

26/65 Testing: BSTBalance.EmptyTree
26/65 Test: BSTBalance.EmptyTree
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTBalance.EmptyTree"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTBalance.EmptyTree" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12012== Memcheck, a memory error detector
==12012== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12012== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12012== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTBalance.EmptyTree
==12012== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTBalance.EmptyTree
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTBalance
[ RUN      ] BSTBalance.EmptyTree
[       OK ] BSTBalance.EmptyTree (20 ms)
[----------] 1 test from BSTBalance (32 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (81 ms total)
[  PASSED  ] 1 test.
==12012== 
==12012== HEAP SUMMARY:
==12012==     in use at exit: 0 bytes in 0 blocks
==12012==   total heap usage: 485 allocs, 485 frees, 131,325 bytes allocated
==12012== 
==12012== All heap blocks were freed -- no leaks are possible
==12012== 
==12012== For counts of detected and suppressed errors, rerun with: -v
==12012== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.27 sec
----------------------------------------------------------
Test Passed.
"BSTBalance.EmptyTree" end time: Nov 16 06:07 UTC
"BSTBalance.EmptyTree" time elapsed: 00:00:01
----------------------------------------------------------

27/65 Testing: BSTBalance.OneNode
27/65 Test: BSTBalance.OneNode
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTBalance.OneNode"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTBalance.OneNode" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12013== Memcheck, a memory error detector
==12013== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12013== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12013== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTBalance.OneNode
==12013== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTBalance.OneNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTBalance
[ RUN      ] BSTBalance.OneNode
[       OK ] BSTBalance.OneNode (19 ms)
[----------] 1 test from BSTBalance (31 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (80 ms total)
[  PASSED  ] 1 test.
==12013== 
==12013== HEAP SUMMARY:
==12013==     in use at exit: 0 bytes in 0 blocks
==12013==   total heap usage: 485 allocs, 485 frees, 131,313 bytes allocated
==12013== 
==12013== All heap blocks were freed -- no leaks are possible
==12013== 
==12013== For counts of detected and suppressed errors, rerun with: -v
==12013== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.25 sec
----------------------------------------------------------
Test Passed.
"BSTBalance.OneNode" end time: Nov 16 06:07 UTC
"BSTBalance.OneNode" time elapsed: 00:00:01
----------------------------------------------------------

28/65 Testing: BSTBalance.3Nodes_Unbalanced
28/65 Test: BSTBalance.3Nodes_Unbalanced
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTBalance.3Nodes_Unbalanced"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTBalance.3Nodes_Unbalanced" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12014== Memcheck, a memory error detector
==12014== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12014== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12014== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTBalance.3Nodes_Unbalanced
==12014== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTBalance.3Nodes_Unbalanced
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTBalance
[ RUN      ] BSTBalance.3Nodes_Unbalanced
[       OK ] BSTBalance.3Nodes_Unbalanced (65 ms)
[----------] 1 test from BSTBalance (77 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (124 ms total)
[  PASSED  ] 1 test.
==12014== 
==12014== HEAP SUMMARY:
==12014==     in use at exit: 0 bytes in 0 blocks
==12014==   total heap usage: 488 allocs, 488 frees, 131,613 bytes allocated
==12014== 
==12014== All heap blocks were freed -- no leaks are possible
==12014== 
==12014== For counts of detected and suppressed errors, rerun with: -v
==12014== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.29 sec
----------------------------------------------------------
Test Passed.
"BSTBalance.3Nodes_Unbalanced" end time: Nov 16 06:07 UTC
"BSTBalance.3Nodes_Unbalanced" time elapsed: 00:00:01
----------------------------------------------------------

29/65 Testing: BSTBalance.3Nodes_Balanced
29/65 Test: BSTBalance.3Nodes_Balanced
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTBalance.3Nodes_Balanced"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTBalance.3Nodes_Balanced" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12015== Memcheck, a memory error detector
==12015== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12015== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12015== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTBalance.3Nodes_Balanced
==12015== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTBalance.3Nodes_Balanced
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTBalance
[ RUN      ] BSTBalance.3Nodes_Balanced
[       OK ] BSTBalance.3Nodes_Balanced (66 ms)
[----------] 1 test from BSTBalance (78 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (128 ms total)
[  PASSED  ] 1 test.
==12015== 
==12015== HEAP SUMMARY:
==12015==     in use at exit: 0 bytes in 0 blocks
==12015==   total heap usage: 488 allocs, 488 frees, 131,601 bytes allocated
==12015== 
==12015== All heap blocks were freed -- no leaks are possible
==12015== 
==12015== For counts of detected and suppressed errors, rerun with: -v
==12015== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.32 sec
----------------------------------------------------------
Test Passed.
"BSTBalance.3Nodes_Balanced" end time: Nov 16 06:07 UTC
"BSTBalance.3Nodes_Balanced" time elapsed: 00:00:01
----------------------------------------------------------

30/65 Testing: BSTBalance.UnbalancedSubtree
30/65 Test: BSTBalance.UnbalancedSubtree
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTBalance.UnbalancedSubtree"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTBalance.UnbalancedSubtree" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12016== Memcheck, a memory error detector
==12016== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12016== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12016== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTBalance.UnbalancedSubtree
==12016== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTBalance.UnbalancedSubtree
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTBalance
[ RUN      ] BSTBalance.UnbalancedSubtree
                     [04]
           ┌─────────┘  └─────────┐                        
         [02]                    [05]
     ┌───┘  └───┐                   └───┐            
   [01]        [03]                    [06]
                                          └┐      
                                          [07]

Tree Placeholders:------------------
[01] -> (1, 9)
[02] -> (3, 159)
[03] -> (4, 4)
[04] -> (5, 8)
[05] -> (10, 90)
[06] -> (15, 11)
[07] -> (17, 159)

[       OK ] BSTBalance.UnbalancedSubtree (178 ms)
[----------] 1 test from BSTBalance (189 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (237 ms total)
[  PASSED  ] 1 test.
==12016== 
==12016== HEAP SUMMARY:
==12016==     in use at exit: 0 bytes in 0 blocks
==12016==   total heap usage: 525 allocs, 525 frees, 133,351 bytes allocated
==12016== 
==12016== All heap blocks were freed -- no leaks are possible
==12016== 
==12016== For counts of detected and suppressed errors, rerun with: -v
==12016== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.43 sec
----------------------------------------------------------
Test Passed.
"BSTBalance.UnbalancedSubtree" end time: Nov 16 06:07 UTC
"BSTBalance.UnbalancedSubtree" time elapsed: 00:00:01
----------------------------------------------------------

31/65 Testing: BSTBalance.Random50x30ele
31/65 Test: BSTBalance.Random50x30ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests" "--gtest_filter=BSTBalance.Random50x30ele"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTBalance.Random50x30ele" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12017== Memcheck, a memory error detector
==12017== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12017== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12017== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_tests --gtest_filter=BSTBalance.Random50x30ele
==12017== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTBalance.Random50x30ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTBalance
[ RUN      ] BSTBalance.Random50x30ele
[       OK ] BSTBalance.Random50x30ele (572 ms)
[----------] 1 test from BSTBalance (584 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (632 ms total)
[  PASSED  ] 1 test.
==12017== 
==12017== HEAP SUMMARY:
==12017==     in use at exit: 0 bytes in 0 blocks
==12017==   total heap usage: 3,636 allocs, 3,636 frees, 321,755 bytes allocated
==12017== 
==12017== All heap blocks were freed -- no leaks are possible
==12017== 
==12017== For counts of detected and suppressed errors, rerun with: -v
==12017== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.86 sec
----------------------------------------------------------
Test Passed.
"BSTBalance.Random50x30ele" end time: Nov 16 06:07 UTC
"BSTBalance.Random50x30ele" time elapsed: 00:00:01
----------------------------------------------------------

32/65 Testing: BSTRuntime.InsertBalanced
32/65 Test: BSTRuntime.InsertBalanced
Command: "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_runtime_tests" "--gtest_filter=BSTRuntime.InsertBalanced"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTRuntime.InsertBalanced" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = BSTRuntime.InsertBalanced
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRuntime
[ RUN      ] BSTRuntime.InsertBalanced
>> Evaluating runtime of BinarySearchTree::insert() with balanced insertions
Testing with 2^0 (1) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^1 (2) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^2 (4) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^3 (8) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^4 (16) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^5 (32) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^6 (64) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^7 (128) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^8 (256) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^9 (512) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^10 (1024) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^11 (2048) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^12 (4096) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^13 (8192) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^14 (16384) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing if time complexity could be linear...
Correlation factor (0.0865) is < threshold (1.4000)
Testing if time complexity could be constant...
Correlation factor (2.4057) is >= threshold (1.4000)
>> Time complexity of BinarySearchTree::insert() with balanced insertions is likely constant
Testing if time complexity could be logarithmic...
Correlation factor (0.5165) is < threshold (1.4000)
Testing if time complexity could be linearithmic...
Correlation factor (-0.3830) is < threshold (1.4000)
Testing if time complexity could be quadratic...
Correlation factor (0.0452) is < threshold (1.4000)
Testing if time complexity could be cubic...
Correlation factor (0.0298) is < threshold (1.4000)
[       OK ] BSTRuntime.InsertBalanced (3103 ms)
[----------] 1 test from BSTRuntime (3103 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (3105 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   3.13 sec
----------------------------------------------------------
Test Passed.
"BSTRuntime.InsertBalanced" end time: Nov 16 06:07 UTC
"BSTRuntime.InsertBalanced" time elapsed: 00:00:03
----------------------------------------------------------

33/65 Testing: BSTRuntime.RemoveBalancedRoot
33/65 Test: BSTRuntime.RemoveBalancedRoot
Command: "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_runtime_tests" "--gtest_filter=BSTRuntime.RemoveBalancedRoot"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTRuntime.RemoveBalancedRoot" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = BSTRuntime.RemoveBalancedRoot
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRuntime
[ RUN      ] BSTRuntime.RemoveBalancedRoot
>> Evaluating runtime of BinarySearchTree::remove() root with keys in balanced order
Testing with 2^0 (1) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^1 (2) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^2 (4) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^3 (8) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^4 (16) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^5 (32) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^6 (64) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^7 (128) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^8 (256) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^9 (512) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^10 (1024) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^11 (2048) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^12 (4096) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^13 (8192) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^14 (16384) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^15 (32768) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing if time complexity could be linear...
Correlation factor (0.1017) is < threshold (1.4000)
Testing if time complexity could be constant...
Correlation factor (3.1306) is >= threshold (1.4000)
>> Time complexity of BinarySearchTree::remove() root with keys in balanced order is likely constant
Testing if time complexity could be logarithmic...
Correlation factor (0.4615) is < threshold (1.4000)
Testing if time complexity could be linearithmic...
Correlation factor (-0.4274) is < threshold (1.4000)
Testing if time complexity could be quadratic...
Correlation factor (0.0633) is < threshold (1.4000)
Testing if time complexity could be cubic...
Correlation factor (0.0424) is < threshold (1.4000)
[       OK ] BSTRuntime.RemoveBalancedRoot (6549 ms)
[----------] 1 test from BSTRuntime (6549 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (6549 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   6.56 sec
----------------------------------------------------------
Test Passed.
"BSTRuntime.RemoveBalancedRoot" end time: Nov 16 06:07 UTC
"BSTRuntime.RemoveBalancedRoot" time elapsed: 00:00:06
----------------------------------------------------------

34/65 Testing: BSTRuntime.RemoveBalancedMin
34/65 Test: BSTRuntime.RemoveBalancedMin
Command: "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_runtime_tests" "--gtest_filter=BSTRuntime.RemoveBalancedMin"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTRuntime.RemoveBalancedMin" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = BSTRuntime.RemoveBalancedMin
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRuntime
[ RUN      ] BSTRuntime.RemoveBalancedMin
>> Evaluating runtime of BinarySearchTree::remove() root with keys in balanced order
Testing with 2^0 (1) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^1 (2) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^2 (4) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^3 (8) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^4 (16) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^5 (32) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^6 (64) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^7 (128) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^8 (256) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^9 (512) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^10 (1024) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^11 (2048) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^12 (4096) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^13 (8192) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^14 (16384) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing if time complexity could be linear...
Correlation factor (0.0876) is < threshold (1.4000)
Testing if time complexity could be constant...
Correlation factor (0.6024) is < threshold (1.4000)
Testing if time complexity could be logarithmic...
Correlation factor (0.3600) is < threshold (1.4000)
Testing if time complexity could be linearithmic...
Correlation factor (-0.4065) is < threshold (1.4000)
Testing if time complexity could be quadratic...
Correlation factor (0.0628) is < threshold (1.4000)
Testing if time complexity could be cubic...
Correlation factor (0.0422) is < threshold (1.4000)
/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_runtime_tests.cpp:121: Failure
Value of: runtimeEvaluator.meetsComplexity(RuntimeEvaluator::TimeComplexity::LOGARITHMIC)
  Actual: false
Expected: true
[  FAILED  ] BSTRuntime.RemoveBalancedMin (3170 ms)
[----------] 1 test from BSTRuntime (3171 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (3171 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] BSTRuntime.RemoveBalancedMin

 1 FAILED TEST
<end of output>
Test time =   3.18 sec
----------------------------------------------------------
Test Failed.
"BSTRuntime.RemoveBalancedMin" end time: Nov 16 06:07 UTC
"BSTRuntime.RemoveBalancedMin" time elapsed: 00:00:03
----------------------------------------------------------

35/65 Testing: BSTRuntime.GetSmallestNodeBalanced
35/65 Test: BSTRuntime.GetSmallestNodeBalanced
Command: "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_runtime_tests" "--gtest_filter=BSTRuntime.GetSmallestNodeBalanced"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTRuntime.GetSmallestNodeBalanced" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = BSTRuntime.GetSmallestNodeBalanced
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRuntime
[ RUN      ] BSTRuntime.GetSmallestNodeBalanced
>> Evaluating runtime of BinarySearchTree::getSmallestNode() with keys in balanced order
Testing with 2^0 (1) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^1 (2) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^2 (4) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^3 (8) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^4 (16) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^5 (32) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^6 (64) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^7 (128) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^8 (256) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^9 (512) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^10 (1024) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^11 (2048) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^12 (4096) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^13 (8192) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^14 (16384) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing if time complexity could be linear...
Correlation factor (0.1354) is < threshold (1.4000)
Testing if time complexity could be constant...
Correlation factor (2.3422) is >= threshold (1.4000)
>> Time complexity of BinarySearchTree::getSmallestNode() with keys in balanced order is likely constant
Testing if time complexity could be logarithmic...
Correlation factor (0.7780) is < threshold (1.4000)
Testing if time complexity could be linearithmic...
Correlation factor (-0.3787) is < threshold (1.4000)
Testing if time complexity could be quadratic...
Correlation factor (0.0637) is < threshold (1.4000)
Testing if time complexity could be cubic...
Correlation factor (0.0428) is < threshold (1.4000)
[       OK ] BSTRuntime.GetSmallestNodeBalanced (3099 ms)
[----------] 1 test from BSTRuntime (3099 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (3099 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   3.11 sec
----------------------------------------------------------
Test Passed.
"BSTRuntime.GetSmallestNodeBalanced" end time: Nov 16 06:07 UTC
"BSTRuntime.GetSmallestNodeBalanced" time elapsed: 00:00:03
----------------------------------------------------------

36/65 Testing: BSTRuntime.FindNodeBalanced
36/65 Test: BSTRuntime.FindNodeBalanced
Command: "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_runtime_tests" "--gtest_filter=BSTRuntime.FindNodeBalanced"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTRuntime.FindNodeBalanced" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = BSTRuntime.FindNodeBalanced
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRuntime
[ RUN      ] BSTRuntime.FindNodeBalanced
>> Evaluating runtime of BinarySearchTree::find() with keys in balanced order
Testing with 2^0 (1) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^1 (2) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^2 (4) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^3 (8) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^4 (16) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^5 (32) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^6 (64) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^7 (128) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^8 (256) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^9 (512) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^10 (1024) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^11 (2048) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^12 (4096) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^13 (8192) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^14 (16384) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing if time complexity could be linear...
Correlation factor (0.0392) is < threshold (1.4000)
Testing if time complexity could be constant...
Correlation factor (2.7322) is >= threshold (1.4000)
>> Time complexity of BinarySearchTree::find() with keys in balanced order is likely constant
Testing if time complexity could be logarithmic...
Correlation factor (0.2140) is < threshold (1.4000)
Testing if time complexity could be linearithmic...
Correlation factor (-0.3758) is < threshold (1.4000)
Testing if time complexity could be quadratic...
Correlation factor (0.0448) is < threshold (1.4000)
Testing if time complexity could be cubic...
Correlation factor (0.0318) is < threshold (1.4000)
[       OK ] BSTRuntime.FindNodeBalanced (3123 ms)
[----------] 1 test from BSTRuntime (3123 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (3123 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   3.13 sec
----------------------------------------------------------
Test Passed.
"BSTRuntime.FindNodeBalanced" end time: Nov 16 06:07 UTC
"BSTRuntime.FindNodeBalanced" time elapsed: 00:00:03
----------------------------------------------------------

37/65 Testing: BSTRuntime.IteratorBalanced
37/65 Test: BSTRuntime.IteratorBalanced
Command: "/work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests/bst_runtime_tests" "--gtest_filter=BSTRuntime.IteratorBalanced"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/bst_tests
"BSTRuntime.IteratorBalanced" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = BSTRuntime.IteratorBalanced
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRuntime
[ RUN      ] BSTRuntime.IteratorBalanced
>> Evaluating runtime of using BinarySearchTree::iterator to iterate over all keys
Testing with 2^0 (1) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^1 (2) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^2 (4) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^3 (8) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^4 (16) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^5 (32) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^6 (64) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^7 (128) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^8 (256) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^9 (512) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^10 (1024) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^11 (2048) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^12 (4096) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^13 (8192) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^14 (16384) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing if time complexity could be linear...
Correlation factor (4.0870) is >= threshold (1.4000)
>> Time complexity of using BinarySearchTree::iterator to iterate over all keys is likely linear
Testing if time complexity could be constant...
Correlation factor (-1.7400) is < threshold (1.4000)
Testing if time complexity could be logarithmic...
Correlation factor (0.4481) is < threshold (1.4000)
Testing if time complexity could be linearithmic...
Correlation factor (-0.0290) is < threshold (1.4000)
Testing if time complexity could be quadratic...
Correlation factor (0.9476) is < threshold (1.4000)
Testing if time complexity could be cubic...
Correlation factor (0.5692) is < threshold (1.4000)
[       OK ] BSTRuntime.IteratorBalanced (3658 ms)
[----------] 1 test from BSTRuntime (3658 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (3658 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   3.67 sec
----------------------------------------------------------
Test Passed.
"BSTRuntime.IteratorBalanced" end time: Nov 16 06:07 UTC
"BSTRuntime.IteratorBalanced" time elapsed: 00:00:03
----------------------------------------------------------

38/65 Testing: AVLBST.ConstructionDestruction
38/65 Test: AVLBST.ConstructionDestruction
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLBST.ConstructionDestruction"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLBST.ConstructionDestruction" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12024== Memcheck, a memory error detector
==12024== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12024== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12024== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLBST.ConstructionDestruction
==12024== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLBST.ConstructionDestruction
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLBST
[ RUN      ] AVLBST.ConstructionDestruction
[       OK ] AVLBST.ConstructionDestruction (17 ms)
[----------] 1 test from AVLBST (29 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (77 ms total)
[  PASSED  ] 1 test.
==12024== 
==12024== HEAP SUMMARY:
==12024==     in use at exit: 0 bytes in 0 blocks
==12024==   total heap usage: 403 allocs, 403 frees, 125,909 bytes allocated
==12024== 
==12024== All heap blocks were freed -- no leaks are possible
==12024== 
==12024== For counts of detected and suppressed errors, rerun with: -v
==12024== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.33 sec
----------------------------------------------------------
Test Passed.
"AVLBST.ConstructionDestruction" end time: Nov 16 06:07 UTC
"AVLBST.ConstructionDestruction" time elapsed: 00:00:01
----------------------------------------------------------

39/65 Testing: AVLInsert.OneNode
39/65 Test: AVLInsert.OneNode
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLInsert.OneNode"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLInsert.OneNode" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12025== Memcheck, a memory error detector
==12025== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12025== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12025== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLInsert.OneNode
==12025== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.OneNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.OneNode
[       OK ] AVLInsert.OneNode (80 ms)
[----------] 1 test from AVLInsert (91 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (139 ms total)
[  PASSED  ] 1 test.
==12025== 
==12025== HEAP SUMMARY:
==12025==     in use at exit: 0 bytes in 0 blocks
==12025==   total heap usage: 405 allocs, 405 frees, 126,039 bytes allocated
==12025== 
==12025== All heap blocks were freed -- no leaks are possible
==12025== 
==12025== For counts of detected and suppressed errors, rerun with: -v
==12025== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.31 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.OneNode" end time: Nov 16 06:07 UTC
"AVLInsert.OneNode" time elapsed: 00:00:01
----------------------------------------------------------

40/65 Testing: AVLInsert.DoubleInsertLeft
40/65 Test: AVLInsert.DoubleInsertLeft
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLInsert.DoubleInsertLeft"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLInsert.DoubleInsertLeft" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12026== Memcheck, a memory error detector
==12026== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12026== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12026== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLInsert.DoubleInsertLeft
==12026== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.DoubleInsertLeft
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.DoubleInsertLeft
[       OK ] AVLInsert.DoubleInsertLeft (107 ms)
[----------] 1 test from AVLInsert (118 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (166 ms total)
[  PASSED  ] 1 test.
==12026== 
==12026== HEAP SUMMARY:
==12026==     in use at exit: 0 bytes in 0 blocks
==12026==   total heap usage: 407 allocs, 407 frees, 126,141 bytes allocated
==12026== 
==12026== All heap blocks were freed -- no leaks are possible
==12026== 
==12026== For counts of detected and suppressed errors, rerun with: -v
==12026== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.33 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.DoubleInsertLeft" end time: Nov 16 06:07 UTC
"AVLInsert.DoubleInsertLeft" time elapsed: 00:00:01
----------------------------------------------------------

41/65 Testing: AVLInsert.DoubleInsertRight
41/65 Test: AVLInsert.DoubleInsertRight
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLInsert.DoubleInsertRight"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLInsert.DoubleInsertRight" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12027== Memcheck, a memory error detector
==12027== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12027== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12027== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLInsert.DoubleInsertRight
==12027== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.DoubleInsertRight
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.DoubleInsertRight
[       OK ] AVLInsert.DoubleInsertRight (107 ms)
[----------] 1 test from AVLInsert (119 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (167 ms total)
[  PASSED  ] 1 test.
==12027== 
==12027== HEAP SUMMARY:
==12027==     in use at exit: 0 bytes in 0 blocks
==12027==   total heap usage: 407 allocs, 407 frees, 126,147 bytes allocated
==12027== 
==12027== All heap blocks were freed -- no leaks are possible
==12027== 
==12027== For counts of detected and suppressed errors, rerun with: -v
==12027== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.33 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.DoubleInsertRight" end time: Nov 16 06:07 UTC
"AVLInsert.DoubleInsertRight" time elapsed: 00:00:01
----------------------------------------------------------

42/65 Testing: AVLInsert.InsertZigZigLeft
42/65 Test: AVLInsert.InsertZigZigLeft
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLInsert.InsertZigZigLeft"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLInsert.InsertZigZigLeft" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12028== Memcheck, a memory error detector
==12028== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12028== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12028== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLInsert.InsertZigZigLeft
==12028== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.InsertZigZigLeft
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.InsertZigZigLeft
[       OK ] AVLInsert.InsertZigZigLeft (124 ms)
[----------] 1 test from AVLInsert (136 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (185 ms total)
[  PASSED  ] 1 test.
==12028== 
==12028== HEAP SUMMARY:
==12028==     in use at exit: 0 bytes in 0 blocks
==12028==   total heap usage: 409 allocs, 409 frees, 126,269 bytes allocated
==12028== 
==12028== All heap blocks were freed -- no leaks are possible
==12028== 
==12028== For counts of detected and suppressed errors, rerun with: -v
==12028== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.35 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.InsertZigZigLeft" end time: Nov 16 06:07 UTC
"AVLInsert.InsertZigZigLeft" time elapsed: 00:00:01
----------------------------------------------------------

43/65 Testing: AVLInsert.InsertZigZigRight
43/65 Test: AVLInsert.InsertZigZigRight
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLInsert.InsertZigZigRight"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLInsert.InsertZigZigRight" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12029== Memcheck, a memory error detector
==12029== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12029== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12029== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLInsert.InsertZigZigRight
==12029== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.InsertZigZigRight
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.InsertZigZigRight
[       OK ] AVLInsert.InsertZigZigRight (123 ms)
[----------] 1 test from AVLInsert (134 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (183 ms total)
[  PASSED  ] 1 test.
==12029== 
==12029== HEAP SUMMARY:
==12029==     in use at exit: 0 bytes in 0 blocks
==12029==   total heap usage: 409 allocs, 409 frees, 126,275 bytes allocated
==12029== 
==12029== All heap blocks were freed -- no leaks are possible
==12029== 
==12029== For counts of detected and suppressed errors, rerun with: -v
==12029== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.34 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.InsertZigZigRight" end time: Nov 16 06:07 UTC
"AVLInsert.InsertZigZigRight" time elapsed: 00:00:01
----------------------------------------------------------

44/65 Testing: AVLInsert.InsertZigZagLeft
44/65 Test: AVLInsert.InsertZigZagLeft
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLInsert.InsertZigZagLeft"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLInsert.InsertZigZagLeft" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12030== Memcheck, a memory error detector
==12030== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12030== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12030== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLInsert.InsertZigZagLeft
==12030== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.InsertZigZagLeft
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.InsertZigZagLeft
[       OK ] AVLInsert.InsertZigZagLeft (144 ms)
[----------] 1 test from AVLInsert (157 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (207 ms total)
[  PASSED  ] 1 test.
==12030== 
==12030== HEAP SUMMARY:
==12030==     in use at exit: 0 bytes in 0 blocks
==12030==   total heap usage: 409 allocs, 409 frees, 126,269 bytes allocated
==12030== 
==12030== All heap blocks were freed -- no leaks are possible
==12030== 
==12030== For counts of detected and suppressed errors, rerun with: -v
==12030== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.40 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.InsertZigZagLeft" end time: Nov 16 06:07 UTC
"AVLInsert.InsertZigZagLeft" time elapsed: 00:00:01
----------------------------------------------------------

45/65 Testing: AVLInsert.InsertZigZagRight
45/65 Test: AVLInsert.InsertZigZagRight
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLInsert.InsertZigZagRight"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLInsert.InsertZigZagRight" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12031== Memcheck, a memory error detector
==12031== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12031== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12031== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLInsert.InsertZigZagRight
==12031== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.InsertZigZagRight
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.InsertZigZagRight
[       OK ] AVLInsert.InsertZigZagRight (137 ms)
[----------] 1 test from AVLInsert (148 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (197 ms total)
[  PASSED  ] 1 test.
==12031== 
==12031== HEAP SUMMARY:
==12031==     in use at exit: 0 bytes in 0 blocks
==12031==   total heap usage: 409 allocs, 409 frees, 126,275 bytes allocated
==12031== 
==12031== All heap blocks were freed -- no leaks are possible
==12031== 
==12031== For counts of detected and suppressed errors, rerun with: -v
==12031== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.37 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.InsertZigZagRight" end time: Nov 16 06:07 UTC
"AVLInsert.InsertZigZagRight" time elapsed: 00:00:01
----------------------------------------------------------

46/65 Testing: AVLInsert.7Elements
46/65 Test: AVLInsert.7Elements
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLInsert.7Elements"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLInsert.7Elements" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12032== Memcheck, a memory error detector
==12032== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12032== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12032== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLInsert.7Elements
==12032== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.7Elements
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.7Elements
[       OK ] AVLInsert.7Elements (138 ms)
[----------] 1 test from AVLInsert (150 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (198 ms total)
[  PASSED  ] 1 test.
==12032== 
==12032== HEAP SUMMARY:
==12032==     in use at exit: 0 bytes in 0 blocks
==12032==   total heap usage: 417 allocs, 417 frees, 126,739 bytes allocated
==12032== 
==12032== All heap blocks were freed -- no leaks are possible
==12032== 
==12032== For counts of detected and suppressed errors, rerun with: -v
==12032== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.39 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.7Elements" end time: Nov 16 06:07 UTC
"AVLInsert.7Elements" time elapsed: 00:00:01
----------------------------------------------------------

47/65 Testing: AVLClear.Clear
47/65 Test: AVLClear.Clear
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLClear.Clear"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLClear.Clear" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12033== Memcheck, a memory error detector
==12033== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12033== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12033== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLClear.Clear
==12033== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLClear.Clear
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLClear
[ RUN      ] AVLClear.Clear
[       OK ] AVLClear.Clear (78 ms)
[----------] 1 test from AVLClear (90 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (139 ms total)
[  PASSED  ] 1 test.
==12033== 
==12033== HEAP SUMMARY:
==12033==     in use at exit: 0 bytes in 0 blocks
==12033==   total heap usage: 380 allocs, 380 frees, 125,216 bytes allocated
==12033== 
==12033== All heap blocks were freed -- no leaks are possible
==12033== 
==12033== For counts of detected and suppressed errors, rerun with: -v
==12033== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.32 sec
----------------------------------------------------------
Test Passed.
"AVLClear.Clear" end time: Nov 16 06:07 UTC
"AVLClear.Clear" time elapsed: 00:00:01
----------------------------------------------------------

48/65 Testing: AVLInsert.Duplicates
48/65 Test: AVLInsert.Duplicates
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLInsert.Duplicates"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLInsert.Duplicates" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12034== Memcheck, a memory error detector
==12034== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12034== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12034== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLInsert.Duplicates
==12034== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.Duplicates
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.Duplicates
[       OK ] AVLInsert.Duplicates (131 ms)
[----------] 1 test from AVLInsert (142 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (190 ms total)
[  PASSED  ] 1 test.
==12034== 
==12034== HEAP SUMMARY:
==12034==     in use at exit: 0 bytes in 0 blocks
==12034==   total heap usage: 411 allocs, 411 frees, 126,361 bytes allocated
==12034== 
==12034== All heap blocks were freed -- no leaks are possible
==12034== 
==12034== For counts of detected and suppressed errors, rerun with: -v
==12034== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.36 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.Duplicates" end time: Nov 16 06:07 UTC
"AVLInsert.Duplicates" time elapsed: 00:00:01
----------------------------------------------------------

49/65 Testing: AVLInsert.Random50x30ele
49/65 Test: AVLInsert.Random50x30ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLInsert.Random50x30ele"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLInsert.Random50x30ele" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12035== Memcheck, a memory error detector
==12035== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12035== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12035== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLInsert.Random50x30ele
==12035== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.Random50x30ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.Random50x30ele
Balance error!
Tree was: 
                                                                                             [13]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [09]                                                                                            [24]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [06]                                            [11]                                            [17]                                            [27]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [04]                    [07]                    [10]                    [12]                    [15]                    [20]                    [25]                    [29]
     ┌───┘  └───┐                   └───┐                                                            ┌───┘  └───┐            ┌───┘  └───┐                   └───┐            ┌───┘                   
   [02]        [05]                    [08]                                                        [14]        [16]        [19]        [22]                    [26]        [28]            
  ┌┘  └┐                                                                                                                  ┌┘          ┌┘  └┐                                                      
[01]  [03]                                                                                                              [18]        [21]  [23]                                                

Tree Placeholders:------------------
[01] -> (-126, -126)
[02] -> (-125, -125)
[03] -> (-113, -113)
[04] -> (-89, -89)
[05] -> (-87, -87)
[06] -> (-84, -84)
[07] -> (-58, -58)
[08] -> (-54, -54)
[09] -> (-52, -52)
[10] -> (-49, -49)
[11] -> (-38, -38)
[12] -> (-35, -35)
[13] -> (-27, -27)
[14] -> (-24, -24)
[15] -> (-18, -18)
[16] -> (-12, -12)
[17] -> (9, 9)
[18] -> (11, 11)
[19] -> (48, 48)
[20] -> (61, 61)
[21] -> (72, 72)
[22] -> (76, 76)
[23] -> (87, 87)
[24] -> (95, 95)
[25] -> (109, 109)
[26] -> (110, 110)
[27] -> (127, 127)
[28] -> (130, 130)
[29] -> (141, 141)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -52 is out of balance!  Left child has height 4, and right child has height 2.)
Expected: true
Balance error!
Tree was: 
                                                                                             [25]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [11]                                                                                            [28]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘                                                                         
                     [06]                                            [18]                                            [27]                                                
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘                                                                                     
         [03]                    [08]                    [15]                    [21]                    [26]                                                                        
     ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐                                                                                                            
   [02]        [04]        [07]        [09]        [13]        [17]        [19]        [23]                                                                                                
  ┌┘              └┐                      └┐      ┌┘  └┐      ┌┘              └┐      ┌┘  └┐                                                                                                      
[01]              [05]                    [10]  [12]  [14]  [16]              [20]  [22]  [24]                                                                                                

Tree Placeholders:------------------
[01] -> (-145, -145)
[02] -> (-144, -144)
[03] -> (-133, -133)
[04] -> (-130, -130)
[05] -> (-125, -125)
[06] -> (-98, -98)
[07] -> (-83, -83)
[08] -> (-73, -73)
[09] -> (-58, -58)
[10] -> (-43, -43)
[11] -> (-42, -42)
[12] -> (-18, -18)
[13] -> (-16, -16)
[14] -> (26, 26)
[15] -> (37, 37)
[16] -> (42, 42)
[17] -> (50, 50)
[18] -> (52, 52)
[19] -> (62, 62)
[20] -> (63, 63)
[21] -> (66, 66)
[22] -> (88, 88)
[23] -> (91, 91)
[24] -> (106, 106)
[25] -> (109, 109)
[26] -> (110, 110)
[27] -> (112, 112)
[28] -> (132, 132)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -130 is out of balance!  Left child has height 0, and right child has height 2.)
Expected: true
Balance error!
Tree was: 
                                                                                             [06]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [03]                                                                                            [11]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [01]                                            [04]                                            [10]                                            [18]
                        └─────────┐                                     └─────────┐                        ┌─────────┘                                     ┌─────────┘  └─────────┐                        
                                 [02]                                            [05]                    [08]                                            [14]                    [22]
                                                                                                     ┌───┘  └───┐                                    ┌───┘  └───┐            ┌───┘  └───┐            
                                                                                                   [07]        [09]                                [13]        [16]        [20]        [24]
                                                                                                                                                  ┌┘          ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      
                                                                                                                                                [12]        [15]  [17]  [19]  [21]  [23]  [25]

Tree Placeholders:------------------
[01] -> (-150, -150)
[02] -> (-143, -143)
[03] -> (-126, -126)
[04] -> (-125, -125)
[05] -> (-103, -103)
[06] -> (-75, -75)
[07] -> (-72, -72)
[08] -> (-58, -58)
[09] -> (-49, -49)
[10] -> (-42, -42)
[11] -> (-37, -37)
[12] -> (-18, -18)
[13] -> (3, 3)
[14] -> (9, 9)
[15] -> (16, 16)
[16] -> (22, 22)
[17] -> (28, 28)
[18] -> (30, 30)
[19] -> (37, 37)
[20] -> (48, 48)
[21] -> (52, 52)
[22] -> (58, 58)
[23] -> (95, 95)
[24] -> (110, 110)
[25] -> (127, 127)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -42 is out of balance!  Left child has height 2, and right child has height 0.)
Expected: true
Balance error!
Tree was: 
                                                                                             [06]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [03]                                                                                            [20]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [01]                                            [04]                                            [12]                                            [22]
                        └─────────┐                                     └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
                                 [02]                                            [05]                    [10]                    [16]                    [21]                    [25]
                                                                                                     ┌───┘  └───┐            ┌───┘  └───┐                                    ┌───┘  └───┐            
                                                                                                   [08]        [11]        [14]        [18]                                [24]        [27]
                                                                                                  ┌┘  └┐                  ┌┘  └┐      ┌┘  └┐                              ┌┘          ┌┘          
                                                                                                [07]  [09]              [13]  [15]  [17]  [19]                          [23]        [26]      

Tree Placeholders:------------------
[01] -> (-135, -135)
[02] -> (-122, -122)
[03] -> (-120, -120)
[04] -> (-115, -115)
[05] -> (-112, -112)
[06] -> (-93, -93)
[07] -> (-91, -91)
[08] -> (-85, -85)
[09] -> (-79, -79)
[10] -> (-78, -78)
[11] -> (-44, -44)
[12] -> (-42, -42)
[13] -> (-19, -19)
[14] -> (-14, -14)
[15] -> (14, 14)
[16] -> (19, 19)
[17] -> (35, 35)
[18] -> (43, 43)
[19] -> (50, 50)
[20] -> (65, 65)
[21] -> (98, 98)
[22] -> (101, 101)
[23] -> (108, 108)
[24] -> (110, 110)
[25] -> (125, 125)
[26] -> (133, 133)
[27] -> (141, 141)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at 43 is out of balance!  Left child has height 3, and right child has height 1.)
Expected: true
Balance error!
Tree was: 
                                                                                             [10]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [06]                                                                                            [18]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [02]                                            [07]                                            [15]                                            [21]
           ┌─────────┘  └─────────┐                                     └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [01]                    [04]                                            [08]                    [13]                    [17]                    [19]                    [23]
                             ┌───┘  └───┐                                           └───┐            ┌───┘  └───┐            ┌───┘                          └───┐            ┌───┘  └───┐            
                           [03]        [05]                                            [09]        [11]        [14]        [16]                                [20]        [22]        [25]
                                                                                                      └┐                                                                              ┌┘  └┐      
                                                                                                      [12]                                                                          [24]  [26]

Tree Placeholders:------------------
[01] -> (-149, -149)
[02] -> (-148, -148)
[03] -> (-108, -108)
[04] -> (-101, -101)
[05] -> (-99, -99)
[06] -> (-91, -91)
[07] -> (-85, -85)
[08] -> (-83, -83)
[09] -> (-74, -74)
[10] -> (-42, -42)
[11] -> (-33, -33)
[12] -> (-20, -20)
[13] -> (14, 14)
[14] -> (22, 22)
[15] -> (29, 29)
[16] -> (31, 31)
[17] -> (33, 33)
[18] -> (34, 34)
[19] -> (40, 40)
[20] -> (60, 60)
[21] -> (65, 65)
[22] -> (84, 84)
[23] -> (94, 94)
[24] -> (109, 109)
[25] -> (141, 141)
[26] -> (143, 143)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -85 is out of balance!  Left child has height 0, and right child has height 2.)
Expected: true
Balance error!
Tree was: 
                                                                                             [15]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [12]                                                                                            [21]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [08]                                            [14]                                            [18]                                            [23]
           ┌─────────┘  └─────────┐                        ┌─────────┘                                     ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [04]                    [10]                    [13]                                            [17]                    [20]                    [22]                    [24]
     ┌───┘  └───┐            ┌───┘  └───┐                                                            ┌───┘                   ┌───┘                                                                   
   [02]        [06]        [09]        [11]                                                        [16]                    [19]                                                            
  ┌┘  └┐      ┌┘  └┐                                                                                                                                                                              
[01]  [03]  [05]  [07]                                                                                                                                                                        

Tree Placeholders:------------------
[01] -> (-147, -147)
[02] -> (-142, -142)
[03] -> (-127, -127)
[04] -> (-109, -109)
[05] -> (-90, -90)
[06] -> (-80, -80)
[07] -> (-70, -70)
[08] -> (-48, -48)
[09] -> (-36, -36)
[10] -> (-34, -34)
[11] -> (-13, -13)
[12] -> (-11, -11)
[13] -> (20, 20)
[14] -> (22, 22)
[15] -> (29, 29)
[16] -> (52, 52)
[17] -> (61, 61)
[18] -> (78, 78)
[19] -> (97, 97)
[20] -> (100, 100)
[21] -> (110, 110)
[22] -> (117, 117)
[23] -> (118, 118)
[24] -> (141, 141)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -48 is out of balance!  Left child has height 5, and right child has height 2.)
Expected: true
Balance error!
Tree was: 
                                                                                             [06]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [03]                                                                                            [17]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [02]                                            [05]                                            [13]                                            [22]
           ┌─────────┘                                     ┌─────────┘                                     ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [01]                                            [04]                                            [09]                    [15]                    [20]                    [25]
                                                                                                     ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            
                                                                                                   [08]        [11]        [14]        [16]        [19]        [21]        [24]        [26]
                                                                                                  ┌┘          ┌┘  └┐                              ┌┘                      ┌┘                      
                                                                                                [07]        [10]  [12]                          [18]                    [23]                  

Tree Placeholders:------------------
[01] -> (-145, -145)
[02] -> (-144, -144)
[03] -> (-141, -141)
[04] -> (-136, -136)
[05] -> (-119, -119)
[06] -> (-100, -100)
[07] -> (-96, -96)
[08] -> (-78, -78)
[09] -> (-72, -72)
[10] -> (-71, -71)
[11] -> (-46, -46)
[12] -> (-43, -43)
[13] -> (-29, -29)
[14] -> (-28, -28)
[15] -> (-19, -19)
[16] -> (-9, -9)
[17] -> (6, 6)
[18] -> (7, 7)
[19] -> (8, 8)
[20] -> (30, 30)
[21] -> (54, 54)
[22] -> (55, 55)
[23] -> (70, 70)
[24] -> (108, 108)
[25] -> (123, 123)
[26] -> (128, 128)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -29 is out of balance!  Left child has height 4, and right child has height 2.)
Expected: true
Balance error!
Tree was: 
                                                                                             [12]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [10]                                                                                            [15]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [05]                                            [11]                                            [14]                                            [19]
           ┌─────────┘  └─────────┐                                                                        ┌─────────┘                                     ┌─────────┘  └─────────┐                        
         [03]                    [09]                                                                    [13]                                            [17]                    [23]
     ┌───┘  └───┐            ┌───┘                                                                                                                   ┌───┘  └───┐            ┌───┘  └───┐            
   [02]        [04]        [07]                                                                                                                    [16]        [18]        [21]        [25]
  ┌┘                      ┌┘  └┐                                                                                                                                          ┌┘  └┐      ┌┘  └┐      
[01]                    [06]  [08]                                                                                                                                      [20]  [22]  [24]  [26]

Tree Placeholders:------------------
[01] -> (-133, -133)
[02] -> (-117, -117)
[03] -> (-105, -105)
[04] -> (-96, -96)
[05] -> (-90, -90)
[06] -> (-88, -88)
[07] -> (-82, -82)
[08] -> (-30, -30)
[09] -> (-4, -4)
[10] -> (25, 25)
[11] -> (27, 27)
[12] -> (44, 44)
[13] -> (49, 49)
[14] -> (69, 69)
[15] -> (73, 73)
[16] -> (77, 77)
[17] -> (79, 79)
[18] -> (82, 82)
[19] -> (85, 85)
[20] -> (90, 90)
[21] -> (96, 96)
[22] -> (103, 103)
[23] -> (107, 107)
[24] -> (124, 124)
[25] -> (127, 127)
[26] -> (148, 148)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -82 is out of balance!  Left child has height 1, and right child has height 3.)
Expected: true
Balance error!
Tree was: 
                                                                                             [07]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [02]                                                                                            [15]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [01]                                            [05]                                            [10]                                            [22]
                                                           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
                                                         [03]                    [06]                    [09]                    [12]                    [19]                    [26]
                                                            └───┐                                    ┌───┘                   ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            
                                                               [04]                                [08]                    [11]        [13]        [17]        [20]        [24]        [27]
                                                                                                                                          └┐      ┌┘  └┐          └┐      ┌┘  └┐          └┐      
                                                                                                                                          [14]  [16]  [18]        [21]  [23]  [25]        [28]

Tree Placeholders:------------------
[01] -> (-141, -141)
[02] -> (-123, -123)
[03] -> (-114, -114)
[04] -> (-107, -107)
[05] -> (-105, -105)
[06] -> (-104, -104)
[07] -> (-101, -101)
[08] -> (-96, -96)
[09] -> (-76, -76)
[10] -> (-65, -65)
[11] -> (-57, -57)
[12] -> (-51, -51)
[13] -> (-50, -50)
[14] -> (-35, -35)
[15] -> (-22, -22)
[16] -> (-9, -9)
[17] -> (23, 23)
[18] -> (31, 31)
[19] -> (38, 38)
[20] -> (53, 53)
[21] -> (56, 56)
[22] -> (64, 64)
[23] -> (78, 78)
[24] -> (85, 85)
[25] -> (93, 93)
[26] -> (96, 96)
[27] -> (116, 116)
[28] -> (145, 145)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -123 is out of balance!  Left child has height 1, and right child has height 3.)
Expected: true
Balance error!
Tree was: 
                                                                                             [08]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [03]                                                                                            [12]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [02]                                            [05]                                            [10]                                            [19]
           ┌─────────┘                                     ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [01]                                            [04]                    [07]                    [09]                    [11]                    [15]                    [21]
                                                                             ┌───┘                                                                   ┌───┘  └───┐            ┌───┘  └───┐            
                                                                           [06]                                                                    [14]        [17]        [20]        [23]
                                                                                                                                                  ┌┘          ┌┘  └┐                  ┌┘  └┐      
                                                                                                                                                [13]        [16]  [18]              [22]  [24]

Tree Placeholders:------------------
[01] -> (-140, -140)
[02] -> (-134, -134)
[03] -> (-128, -128)
[04] -> (-119, -119)
[05] -> (-118, -118)
[06] -> (-112, -112)
[07] -> (-104, -104)
[08] -> (-92, -92)
[09] -> (-89, -89)
[10] -> (-83, -83)
[11] -> (-62, -62)
[12] -> (-52, -52)
[13] -> (-49, -49)
[14] -> (-46, -46)
[15] -> (-34, -34)
[16] -> (-14, -14)
[17] -> (1, 1)
[18] -> (4, 4)
[19] -> (38, 38)
[20] -> (41, 41)
[21] -> (66, 66)
[22] -> (92, 92)
[23] -> (95, 95)
[24] -> (144, 144)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at 66 is out of balance!  Left child has height 1, and right child has height 3.)
Expected: true
Balance error!
Tree was: 
                                                                                             [21]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [12]                                                                                            [24]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [04]                                            [17]                                            [22]                                            [26]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                     └─────────┐                        ┌─────────┘  └─────────┐                        
         [02]                    [08]                    [15]                    [19]                                            [23]                    [25]                    [28]
     ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐                                                                                    ┌───┘                   
   [01]        [03]        [06]        [10]        [14]        [16]        [18]        [20]                                                                                [27]            
                          ┌┘  └┐      ┌┘  └┐      ┌┘                                                                                                                                              
                        [05]  [07]  [09]  [11]  [13]                                                                                                                                          

Tree Placeholders:------------------
[01] -> (-143, -143)
[02] -> (-141, -141)
[03] -> (-134, -134)
[04] -> (-117, -117)
[05] -> (-100, -100)
[06] -> (-97, -97)
[07] -> (-75, -75)
[08] -> (-68, -68)
[09] -> (-59, -59)
[10] -> (-58, -58)
[11] -> (-42, -42)
[12] -> (-23, -23)
[13] -> (1, 1)
[14] -> (9, 9)
[15] -> (15, 15)
[16] -> (27, 27)
[17] -> (66, 66)
[18] -> (92, 92)
[19] -> (94, 94)
[20] -> (96, 96)
[21] -> (97, 97)
[22] -> (100, 100)
[23] -> (105, 105)
[24] -> (110, 110)
[25] -> (112, 112)
[26] -> (126, 126)
[27] -> (128, 128)
[28] -> (146, 146)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -117 is out of balance!  Left child has height 2, and right child has height 4.)
Expected: true
Balance error!
Tree was: 
                                                                                             [09]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [04]                                                                                            [11]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [02]                                            [08]                                            [10]                                            [19]
           ┌─────────┘  └─────────┐                        ┌─────────┘                                                                                     ┌─────────┘  └─────────┐                        
         [01]                    [03]                    [06]                                                                                            [15]                    [21]
                                                     ┌───┘  └───┐                                                                                    ┌───┘  └───┐            ┌───┘  └───┐            
                                                   [05]        [07]                                                                                [13]        [17]        [20]        [23]
                                                                                                                                                  ┌┘  └┐      ┌┘  └┐                  ┌┘  └┐      
                                                                                                                                                [12]  [14]  [16]  [18]              [22]  [24]

Tree Placeholders:------------------
[01] -> (-141, -141)
[02] -> (-101, -101)
[03] -> (-98, -98)
[04] -> (-95, -95)
[05] -> (-85, -85)
[06] -> (-63, -63)
[07] -> (-62, -62)
[08] -> (-48, -48)
[09] -> (-32, -32)
[10] -> (-27, -27)
[11] -> (-26, -26)
[12] -> (-16, -16)
[13] -> (9, 9)
[14] -> (25, 25)
[15] -> (42, 42)
[16] -> (57, 57)
[17] -> (66, 66)
[18] -> (68, 68)
[19] -> (75, 75)
[20] -> (87, 87)
[21] -> (100, 100)
[22] -> (115, 115)
[23] -> (134, 134)
[24] -> (143, 143)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -48 is out of balance!  Left child has height 2, and right child has height 0.)
Expected: true
Balance error!
Tree was: 
                                                                                             [13]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [08]                                                                                            [20]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [06]                                            [10]                                            [17]                                            [23]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [04]                    [07]                    [09]                    [11]                    [15]                    [18]                    [22]                    [27]
     ┌───┘  └───┐                                                                   └───┐            ┌───┘  └───┐                   └───┐            ┌───┘                   ┌───┘  └───┐            
   [02]        [05]                                                                    [12]        [14]        [16]                    [19]        [21]                    [25]        [29]
  ┌┘  └┐                                                                                                                                                                  ┌┘  └┐      ┌┘  └┐      
[01]  [03]                                                                                                                                                              [24]  [26]  [28]  [30]

Tree Placeholders:------------------
[01] -> (-147, -147)
[02] -> (-132, -132)
[03] -> (-131, -131)
[04] -> (-130, -130)
[05] -> (-124, -124)
[06] -> (-118, -118)
[07] -> (-101, -101)
[08] -> (-93, -93)
[09] -> (-89, -89)
[10] -> (-87, -87)
[11] -> (-70, -70)
[12] -> (-56, -56)
[13] -> (-24, -24)
[14] -> (-21, -21)
[15] -> (-15, -15)
[16] -> (-3, -3)
[17] -> (60, 60)
[18] -> (61, 61)
[19] -> (65, 65)
[20] -> (69, 69)
[21] -> (76, 76)
[22] -> (81, 81)
[23] -> (88, 88)
[24] -> (91, 91)
[25] -> (110, 110)
[26] -> (111, 111)
[27] -> (131, 131)
[28] -> (138, 138)
[29] -> (146, 146)
[30] -> (149, 149)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -118 is out of balance!  Left child has height 3, and right child has height 1.)
Expected: true
Balance error!
Tree was: 
                                                                                             [10]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [07]                                                                                            [20]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [05]                                            [08]                                            [13]                                            [26]
           ┌─────────┘  └─────────┐                                     └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [01]                    [06]                                            [09]                    [12]                    [16]                    [23]                    [27]
            └───┐                                                                                    ┌───┘                   ┌───┘  └───┐            ┌───┘  └───┐                                    
               [03]                                                                                [11]                    [15]        [18]        [22]        [25]                        
              ┌┘  └┐                                                                                                      ┌┘          ┌┘  └┐      ┌┘          ┌┘                                  
            [02]  [04]                                                                                                  [14]        [17]  [19]  [21]        [24]                              

Tree Placeholders:------------------
[01] -> (-133, -133)
[02] -> (-128, -128)
[03] -> (-111, -111)
[04] -> (-105, -105)
[05] -> (-98, -98)
[06] -> (-78, -78)
[07] -> (-65, -65)
[08] -> (-51, -51)
[09] -> (-50, -50)
[10] -> (-46, -46)
[11] -> (-44, -44)
[12] -> (-27, -27)
[13] -> (-14, -14)
[14] -> (-3, -3)
[15] -> (0, 0)
[16] -> (13, 13)
[17] -> (52, 52)
[18] -> (68, 68)
[19] -> (70, 70)
[20] -> (79, 79)
[21] -> (81, 81)
[22] -> (90, 90)
[23] -> (100, 100)
[24] -> (103, 103)
[25] -> (107, 107)
[26] -> (109, 109)
[27] -> (141, 141)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -133 is out of balance!  Left child has height 0, and right child has height 2.)
Expected: true
Balance error!
Tree was: 
                                                                                             [20]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [13]                                                                                            [23]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [06]                                            [18]                                            [21]                                            [25]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                     └─────────┐                        ┌─────────┘  └─────────┐                        
         [03]                    [09]                    [15]                    [19]                                            [22]                    [24]                    [27]
     ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐                                                                                                            ┌───┘  └───┐            
   [01]        [05]        [07]        [11]        [14]        [16]                                                                                                        [26]        [28]
      └┐      ┌┘              └┐      ┌┘  └┐                      └┐                                                                                                                              
      [02]  [04]              [08]  [10]  [12]                    [17]                                                                                                                        

Tree Placeholders:------------------
[01] -> (-144, -144)
[02] -> (-142, -142)
[03] -> (-135, -135)
[04] -> (-128, -128)
[05] -> (-116, -116)
[06] -> (-114, -114)
[07] -> (-113, -113)
[08] -> (-110, -110)
[09] -> (-98, -98)
[10] -> (-59, -59)
[11] -> (-45, -45)
[12] -> (-18, -18)
[13] -> (-17, -17)
[14] -> (-10, -10)
[15] -> (14, 14)
[16] -> (20, 20)
[17] -> (21, 21)
[18] -> (24, 24)
[19] -> (36, 36)
[20] -> (48, 48)
[21] -> (58, 58)
[22] -> (84, 84)
[23] -> (93, 93)
[24] -> (94, 94)
[25] -> (106, 106)
[26] -> (123, 123)
[27] -> (137, 137)
[28] -> (138, 138)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at 24 is out of balance!  Left child has height 3, and right child has height 1.)
Expected: true
Balance error!
Tree was: 
                                                                                             [16]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [03]                                                                                            [18]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [01]                                            [08]                                            [17]                                            [19]
                        └─────────┐                        ┌─────────┘  └─────────┐                                                                                     └─────────┐                        
                                 [02]                    [07]                    [12]                                                                                            [20]
                                                     ┌───┘                   ┌───┘  └───┐                                                                                                            
                                                   [05]                    [10]        [14]                                                                                                
                                                  ┌┘  └┐                  ┌┘  └┐      ┌┘  └┐                                                                                                      
                                                [04]  [06]              [09]  [11]  [13]  [15]                                                                                                

Tree Placeholders:------------------
[01] -> (-146, -146)
[02] -> (-143, -143)
[03] -> (-141, -141)
[04] -> (-121, -121)
[05] -> (-108, -108)
[06] -> (-94, -94)
[07] -> (-92, -92)
[08] -> (-81, -81)
[09] -> (-54, -54)
[10] -> (-48, -48)
[11] -> (-42, -42)
[12] -> (-16, -16)
[13] -> (4, 4)
[14] -> (33, 33)
[15] -> (47, 47)
[16] -> (99, 99)
[17] -> (104, 104)
[18] -> (105, 105)
[19] -> (116, 116)
[20] -> (128, 128)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -92 is out of balance!  Left child has height 2, and right child has height 0.)
Expected: true
Balance error!
Tree was: 
                                                                                             [13]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [11]                                                                                            [23]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [03]                                            [12]                                            [17]                                            [26]
           ┌─────────┘  └─────────┐                                                                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [01]                    [07]                                                                    [15]                    [20]                    [25]                    [29]
            └───┐            ┌───┘  └───┐                                                            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘                   ┌───┘                   
               [02]        [05]        [09]                                                        [14]        [16]        [18]        [22]        [24]                    [27]            
                          ┌┘  └┐      ┌┘  └┐                                                                                  └┐      ┌┘                                      └┐                  
                        [04]  [06]  [08]  [10]                                                                                [19]  [21]                                      [28]            

Tree Placeholders:------------------
[01] -> (-150, -150)
[02] -> (-144, -144)
[03] -> (-135, -135)
[04] -> (-123, -123)
[05] -> (-122, -122)
[06] -> (-91, -91)
[07] -> (-76, -76)
[08] -> (-70, -70)
[09] -> (-52, -52)
[10] -> (-50, -50)
[11] -> (-44, -44)
[12] -> (-33, -33)
[13] -> (-26, -26)
[14] -> (-12, -12)
[15] -> (15, 15)
[16] -> (19, 19)
[17] -> (30, 30)
[18] -> (44, 44)
[19] -> (52, 52)
[20] -> (59, 59)
[21] -> (61, 61)
[22] -> (93, 93)
[23] -> (94, 94)
[24] -> (100, 100)
[25] -> (101, 101)
[26] -> (104, 104)
[27] -> (114, 114)
[28] -> (138, 138)
[29] -> (146, 146)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -135 is out of balance!  Left child has height 2, and right child has height 4.)
Expected: true
Balance error!
Tree was: 
                                                                                             [18]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [08]                                                                                            [28]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [04]                                            [10]                                            [25]                                            [29]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                                                        
         [01]                    [06]                    [09]                    [14]                    [22]                    [26]                                                
            └───┐            ┌───┘  └───┐                                    ┌───┘  └───┐            ┌───┘  └───┐                   └───┐                                                            
               [02]        [05]        [07]                                [12]        [16]        [20]        [23]                    [27]                                                
                  └┐                                                      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐          └┐                                                                              
                  [03]                                                  [11]  [13]  [15]  [17]  [19]  [21]        [24]                                                                        

Tree Placeholders:------------------
[01] -> (-150, -150)
[02] -> (-148, -148)
[03] -> (-140, -140)
[04] -> (-137, -137)
[05] -> (-112, -112)
[06] -> (-96, -96)
[07] -> (-79, -79)
[08] -> (-78, -78)
[09] -> (-73, -73)
[10] -> (-63, -63)
[11] -> (-57, -57)
[12] -> (-20, -20)
[13] -> (-19, -19)
[14] -> (-9, -9)
[15] -> (-3, -3)
[16] -> (1, 1)
[17] -> (6, 6)
[18] -> (15, 15)
[19] -> (23, 23)
[20] -> (37, 37)
[21] -> (38, 38)
[22] -> (39, 39)
[23] -> (80, 80)
[24] -> (81, 81)
[25] -> (84, 84)
[26] -> (92, 92)
[27] -> (106, 106)
[28] -> (127, 127)
[29] -> (149, 149)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -150 is out of balance!  Left child has height 0, and right child has height 2.)
Expected: true
Balance error!
Tree was: 
                                                                                             [16]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [05]                                                                                            [22]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [02]                                            [08]                                            [20]                                            [24]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [01]                    [03]                    [07]                    [12]                    [18]                    [21]                    [23]                    [25]
                                    └───┐            ┌───┘                   ┌───┘  └───┐            ┌───┘  └───┐                                                                   └───┐            
                                       [04]        [06]                    [10]        [14]        [17]        [19]                                                                    [26]
                                                                          ┌┘  └┐      ┌┘  └┐                                                                                                      
                                                                        [09]  [11]  [13]  [15]                                                                                                

Tree Placeholders:------------------
[01] -> (-123, -123)
[02] -> (-113, -113)
[03] -> (-108, -108)
[04] -> (-96, -96)
[05] -> (-88, -88)
[06] -> (-75, -75)
[07] -> (-72, -72)
[08] -> (-71, -71)
[09] -> (-65, -65)
[10] -> (-57, -57)
[11] -> (-47, -47)
[12] -> (-3, -3)
[13] -> (-1, -1)
[14] -> (6, 6)
[15] -> (21, 21)
[16] -> (33, 33)
[17] -> (38, 38)
[18] -> (52, 52)
[19] -> (55, 55)
[20] -> (69, 69)
[21] -> (77, 77)
[22] -> (100, 100)
[23] -> (101, 101)
[24] -> (108, 108)
[25] -> (110, 110)
[26] -> (149, 149)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -71 is out of balance!  Left child has height 2, and right child has height 4.)
Expected: true
Balance error!
Tree was: 
                                                                                             [15]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [07]                                                                                            [18]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [05]                                            [11]                                            [17]                                            [24]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘                                     ┌─────────┘  └─────────┐                        
         [02]                    [06]                    [09]                    [13]                    [16]                                            [22]                    [27]
     ┌───┘  └───┐                                    ┌───┘  └───┐            ┌───┘  └───┐                                                            ┌───┘  └───┐            ┌───┘  └───┐            
   [01]        [04]                                [08]        [10]        [12]        [14]                                                        [20]        [23]        [26]        [28]
              ┌┘                                                                                                                                  ┌┘  └┐                  ┌┘              └┐      
            [03]                                                                                                                                [19]  [21]              [25]              [29]

Tree Placeholders:------------------
[01] -> (-147, -147)
[02] -> (-142, -142)
[03] -> (-137, -137)
[04] -> (-133, -133)
[05] -> (-128, -128)
[06] -> (-120, -120)
[07] -> (-116, -116)
[08] -> (-110, -110)
[09] -> (-106, -106)
[10] -> (-99, -99)
[11] -> (-84, -84)
[12] -> (-78, -78)
[13] -> (-75, -75)
[14] -> (-74, -74)
[15] -> (-52, -52)
[16] -> (-32, -32)
[17] -> (-10, -10)
[18] -> (-1, -1)
[19] -> (17, 17)
[20] -> (29, 29)
[21] -> (33, 33)
[22] -> (34, 34)
[23] -> (50, 50)
[24] -> (70, 70)
[25] -> (91, 91)
[26] -> (94, 94)
[27] -> (108, 108)
[28] -> (110, 110)
[29] -> (137, 137)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -128 is out of balance!  Left child has height 3, and right child has height 1.)
Expected: true
Balance error!
Tree was: 
                                                                                             [05]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [02]                                                                                            [09]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [01]                                            [04]                                            [07]                                            [14]
                                                           ┌─────────┘                                     ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
                                                         [03]                                            [06]                    [08]                    [10]                    [18]
                                                                                                                                                            └───┐            ┌───┘  └───┐            
                                                                                                                                                               [12]        [16]        [20]
                                                                                                                                                              ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      
                                                                                                                                                            [11]  [13]  [15]  [17]  [19]  [21]

Tree Placeholders:------------------
[01] -> (-148, -148)
[02] -> (-141, -141)
[03] -> (-135, -135)
[04] -> (-128, -128)
[05] -> (-116, -116)
[06] -> (-112, -112)
[07] -> (-105, -105)
[08] -> (-103, -103)
[09] -> (-98, -98)
[10] -> (-94, -94)
[11] -> (-92, -92)
[12] -> (-64, -64)
[13] -> (-52, -52)
[14] -> (-38, -38)
[15] -> (-28, -28)
[16] -> (-1, -1)
[17] -> (36, 36)
[18] -> (85, 85)
[19] -> (109, 109)
[20] -> (130, 130)
[21] -> (150, 150)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -94 is out of balance!  Left child has height 0, and right child has height 2.)
Expected: true
Balance error!
Tree was: 
                                                                                             [20]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [05]                                                                                            [26]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [03]                                            [13]                                            [22]                                            [28]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘                                     
         [02]                    [04]                    [09]                    [16]                    [21]                    [24]                    [27]                        
     ┌───┘                                           ┌───┘  └───┐            ┌───┘  └───┐                                    ┌───┘  └───┐                                                            
   [01]                                            [07]        [11]        [14]        [18]                                [23]        [25]                                                
                                                  ┌┘  └┐      ┌┘  └┐          └┐      ┌┘  └┐                                                                                                      
                                                [06]  [08]  [10]  [12]        [15]  [17]  [19]                                                                                                

Tree Placeholders:------------------
[01] -> (-148, -148)
[02] -> (-137, -137)
[03] -> (-136, -136)
[04] -> (-116, -116)
[05] -> (-108, -108)
[06] -> (-102, -102)
[07] -> (-92, -92)
[08] -> (-78, -78)
[09] -> (-54, -54)
[10] -> (-51, -51)
[11] -> (-39, -39)
[12] -> (-28, -28)
[13] -> (2, 2)
[14] -> (7, 7)
[15] -> (21, 21)
[16] -> (26, 26)
[17] -> (48, 48)
[18] -> (61, 61)
[19] -> (62, 62)
[20] -> (64, 64)
[21] -> (73, 73)
[22] -> (102, 102)
[23] -> (107, 107)
[24] -> (112, 112)
[25] -> (123, 123)
[26] -> (134, 134)
[27] -> (135, 135)
[28] -> (136, 136)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -108 is out of balance!  Left child has height 3, and right child has height 5.)
Expected: true
Balance error!
Tree was: 
                                                                                             [14]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [03]                                                                                            [19]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [02]                                            [07]                                            [16]                                            [22]
           ┌─────────┘                                     ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [01]                                            [05]                    [10]                    [15]                    [17]                    [20]                    [26]
                                                     ┌───┘  └───┐            ┌───┘  └───┐                                           └───┐                   └───┐            ┌───┘                   
                                                   [04]        [06]        [09]        [12]                                            [18]                    [21]        [24]            
                                                                          ┌┘          ┌┘  └┐                                                                              ┌┘  └┐                  
                                                                        [08]        [11]  [13]                                                                          [23]  [25]            

Tree Placeholders:------------------
[01] -> (-149, -149)
[02] -> (-133, -133)
[03] -> (-130, -130)
[04] -> (-119, -119)
[05] -> (-115, -115)
[06] -> (-107, -107)
[07] -> (-100, -100)
[08] -> (-98, -98)
[09] -> (-86, -86)
[10] -> (-80, -80)
[11] -> (-63, -63)
[12] -> (-47, -47)
[13] -> (-37, -37)
[14] -> (-11, -11)
[15] -> (-4, -4)
[16] -> (-1, -1)
[17] -> (2, 2)
[18] -> (5, 5)
[19] -> (11, 11)
[20] -> (16, 16)
[21] -> (25, 25)
[22] -> (36, 36)
[23] -> (42, 42)
[24] -> (56, 56)
[25] -> (88, 88)
[26] -> (149, 149)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -100 is out of balance!  Left child has height 2, and right child has height 4.)
Expected: true
Balance error!
Tree was: 
                                                                                             [12]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [01]                                                                                            [17]
                                                └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                                                                     [04]                                            [15]                                            [24]
                                                           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
                                                         [03]                    [08]                    [13]                    [16]                    [21]                    [26]
                                                     ┌───┘                   ┌───┘  └───┐                   └───┐                                    ┌───┘  └───┐            ┌───┘                   
                                                   [02]                    [06]        [10]                    [14]                                [19]        [23]        [25]            
                                                                          ┌┘  └┐      ┌┘  └┐                                                      ┌┘  └┐      ┌┘                                  
                                                                        [05]  [07]  [09]  [11]                                                  [18]  [20]  [22]                              

Tree Placeholders:------------------
[01] -> (-147, -147)
[02] -> (-133, -133)
[03] -> (-114, -114)
[04] -> (-113, -113)
[05] -> (-112, -112)
[06] -> (-109, -109)
[07] -> (-107, -107)
[08] -> (-93, -93)
[09] -> (-90, -90)
[10] -> (-86, -86)
[11] -> (-73, -73)
[12] -> (-68, -68)
[13] -> (-55, -55)
[14] -> (-48, -48)
[15] -> (-44, -44)
[16] -> (-7, -7)
[17] -> (-2, -2)
[18] -> (13, 13)
[19] -> (36, 36)
[20] -> (41, 41)
[21] -> (54, 54)
[22] -> (56, 56)
[23] -> (58, 58)
[24] -> (118, 118)
[25] -> (126, 126)
[26] -> (146, 146)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -113 is out of balance!  Left child has height 2, and right child has height 4.)
Expected: true
Balance error!
Tree was: 
                                                                                             [12]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [07]                                                                                            [13]
                       ┌─────────────────────┘  └─────────────────────┐                                                                         └─────────────────────┐                                                
                     [04]                                            [09]                                                                                            [15]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                                                        ┌─────────┘  └─────────┐                        
         [02]                    [05]                    [08]                    [11]                                                                    [14]                    [19]
     ┌───┘  └───┐                   └───┐                                    ┌───┘                                                                                           ┌───┘  └───┐            
   [01]        [03]                    [06]                                [10]                                                                                            [17]        [21]
                                                                                                                                                                          ┌┘  └┐      ┌┘  └┐      
                                                                                                                                                                        [16]  [18]  [20]  [22]

Tree Placeholders:------------------
[01] -> (-148, -148)
[02] -> (-142, -142)
[03] -> (-130, -130)
[04] -> (-121, -121)
[05] -> (-108, -108)
[06] -> (-99, -99)
[07] -> (-70, -70)
[08] -> (-56, -56)
[09] -> (-28, -28)
[10] -> (-19, -19)
[11] -> (-14, -14)
[12] -> (-11, -11)
[13] -> (-10, -10)
[14] -> (-4, -4)
[15] -> (-2, -2)
[16] -> (32, 32)
[17] -> (75, 75)
[18] -> (89, 89)
[19] -> (103, 103)
[20] -> (117, 117)
[21] -> (118, 118)
[22] -> (147, 147)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -2 is out of balance!  Left child has height 1, and right child has height 5.)
Expected: true
Balance error!
Tree was: 
                                                                                             [12]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [08]                                                                                            [21]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [04]                                            [10]                                            [16]                                            [23]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [03]                    [06]                    [09]                    [11]                    [14]                    [17]                    [22]                    [27]
     ┌───┘                   ┌───┘  └───┐                                                            ┌───┘  └───┐                   └───┐                                    ┌───┘  └───┐            
   [01]                    [05]        [07]                                                        [13]        [15]                    [19]                                [25]        [29]
      └┐                                                                                                                              ┌┘  └┐                              ┌┘  └┐      ┌┘  └┐      
      [02]                                                                                                                          [18]  [20]                          [24]  [26]  [28]  [30]

Tree Placeholders:------------------
[01] -> (-149, -149)
[02] -> (-148, -148)
[03] -> (-89, -89)
[04] -> (-84, -84)
[05] -> (-75, -75)
[06] -> (-66, -66)
[07] -> (-51, -51)
[08] -> (-47, -47)
[09] -> (-46, -46)
[10] -> (-39, -39)
[11] -> (20, 20)
[12] -> (41, 41)
[13] -> (52, 52)
[14] -> (64, 64)
[15] -> (69, 69)
[16] -> (77, 77)
[17] -> (78, 78)
[18] -> (80, 80)
[19] -> (82, 82)
[20] -> (89, 89)
[21] -> (94, 94)
[22] -> (99, 99)
[23] -> (102, 102)
[24] -> (111, 111)
[25] -> (114, 114)
[26] -> (126, 126)
[27] -> (127, 127)
[28] -> (133, 133)
[29] -> (134, 134)
[30] -> (136, 136)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -89 is out of balance!  Left child has height 2, and right child has height 0.)
Expected: true
Balance error!
Tree was: 
                                                                                             [15]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [07]                                                                                            [19]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [05]                                            [13]                                            [17]                                            [26]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [02]                    [06]                    [10]                    [14]                    [16]                    [18]                    [23]                    [29]
     ┌───┘  └───┐                                    ┌───┘  └───┐                                                                                    ┌───┘  └───┐            ┌───┘                   
   [01]        [04]                                [09]        [11]                                                                                [21]        [24]        [28]            
              ┌┘                                  ┌┘              └┐                                                                              ┌┘  └┐          └┐      ┌┘                      
            [03]                                [08]              [12]                                                                          [20]  [22]        [25]  [27]                  

Tree Placeholders:------------------
[01] -> (-137, -137)
[02] -> (-132, -132)
[03] -> (-125, -125)
[04] -> (-100, -100)
[05] -> (-98, -98)
[06] -> (-76, -76)
[07] -> (-75, -75)
[08] -> (-51, -51)
[09] -> (-48, -48)
[10] -> (-45, -45)
[11] -> (-39, -39)
[12] -> (-34, -34)
[13] -> (-20, -20)
[14] -> (-11, -11)
[15] -> (-6, -6)
[16] -> (4, 4)
[17] -> (10, 10)
[18] -> (18, 18)
[19] -> (30, 30)
[20] -> (51, 51)
[21] -> (55, 55)
[22] -> (56, 56)
[23] -> (70, 70)
[24] -> (83, 83)
[25] -> (104, 104)
[26] -> (114, 114)
[27] -> (120, 120)
[28] -> (140, 140)
[29] -> (149, 149)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -98 is out of balance!  Left child has height 3, and right child has height 1.)
Expected: true
Balance error!
Tree was: 
                                                                                             [12]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [11]                                                                                            [17]
                       ┌─────────────────────┘                                                                         ┌─────────────────────┘  └─────────────────────┐                                                
                     [06]                                                                                            [15]                                            [22]
           ┌─────────┘  └─────────┐                                                                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [02]                    [07]                                                                    [14]                    [16]                    [19]                    [25]
     ┌───┘  └───┐                   └───┐                                                            ┌───┘                                           ┌───┘  └───┐            ┌───┘  └───┐            
   [01]        [04]                    [09]                                                        [13]                                            [18]        [21]        [23]        [27]
              ┌┘  └┐                  ┌┘  └┐                                                                                                                  ┌┘              └┐      ┌┘  └┐      
            [03]  [05]              [08]  [10]                                                                                                              [20]              [24]  [26]  [28]

Tree Placeholders:------------------
[01] -> (-144, -144)
[02] -> (-138, -138)
[03] -> (-134, -134)
[04] -> (-130, -130)
[05] -> (-125, -125)
[06] -> (-118, -118)
[07] -> (-108, -108)
[08] -> (-102, -102)
[09] -> (-80, -80)
[10] -> (-79, -79)
[11] -> (-70, -70)
[12] -> (-55, -55)
[13] -> (-44, -44)
[14] -> (-39, -39)
[15] -> (-37, -37)
[16] -> (-14, -14)
[17] -> (-13, -13)
[18] -> (3, 3)
[19] -> (9, 9)
[20] -> (30, 30)
[21] -> (38, 38)
[22] -> (39, 39)
[23] -> (83, 83)
[24] -> (91, 91)
[25] -> (111, 111)
[26] -> (113, 113)
[27] -> (126, 126)
[28] -> (128, 128)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -138 is out of balance!  Left child has height 1, and right child has height 3.)
Expected: true
Balance error!
Tree was: 
                                                                                             [10]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [04]                                                                                            [13]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [02]                                            [06]                                            [11]                                            [21]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                     └─────────┐                        ┌─────────┘  └─────────┐                        
         [01]                    [03]                    [05]                    [08]                                            [12]                    [17]                    [23]
                                                                             ┌───┘  └───┐                                                            ┌───┘  └───┐            ┌───┘                   
                                                                           [07]        [09]                                                        [15]        [19]        [22]            
                                                                                                                                                  ┌┘  └┐      ┌┘  └┐                              
                                                                                                                                                [14]  [16]  [18]  [20]                        

Tree Placeholders:------------------
[01] -> (-147, -147)
[02] -> (-142, -142)
[03] -> (-138, -138)
[04] -> (-131, -131)
[05] -> (-130, -130)
[06] -> (-126, -126)
[07] -> (-109, -109)
[08] -> (-100, -100)
[09] -> (-98, -98)
[10] -> (-94, -94)
[11] -> (-91, -91)
[12] -> (-88, -88)
[13] -> (-83, -83)
[14] -> (-62, -62)
[15] -> (-37, -37)
[16] -> (4, 4)
[17] -> (67, 67)
[18] -> (83, 83)
[19] -> (96, 96)
[20] -> (109, 109)
[21] -> (136, 136)
[22] -> (138, 138)
[23] -> (149, 149)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at 4 is out of balance!  Left child has height 0, and right child has height 2.)
Expected: true
Balance error!
Tree was: 
                                                                                             [16]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [09]                                                                                            [21]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [06]                                            [14]                                            [18]                                            [25]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [03]                    [07]                    [11]                    [15]                    [17]                    [20]                    [23]                    [29]
     ┌───┘  └───┐                   └───┐            ┌───┘  └───┐                                                            ┌───┘                   ┌───┘  └───┐            ┌───┘  └───┐            
   [01]        [04]                    [08]        [10]        [12]                                                        [19]                    [22]        [24]        [27]        [30]
      └┐          └┐                                              └┐                                                                                                      ┌┘  └┐                  
      [02]        [05]                                            [13]                                                                                                  [26]  [28]            

Tree Placeholders:------------------
[01] -> (-145, -145)
[02] -> (-138, -138)
[03] -> (-127, -127)
[04] -> (-104, -104)
[05] -> (-98, -98)
[06] -> (-82, -82)
[07] -> (-79, -79)
[08] -> (-54, -54)
[09] -> (-52, -52)
[10] -> (-43, -43)
[11] -> (-40, -40)
[12] -> (-26, -26)
[13] -> (-17, -17)
[14] -> (-10, -10)
[15] -> (-8, -8)
[16] -> (0, 0)
[17] -> (1, 1)
[18] -> (8, 8)
[19] -> (9, 9)
[20] -> (18, 18)
[21] -> (37, 37)
[22] -> (73, 73)
[23] -> (74, 74)
[24] -> (76, 76)
[25] -> (85, 85)
[26] -> (104, 104)
[27] -> (110, 110)
[28] -> (138, 138)
[29] -> (141, 141)
[30] -> (144, 144)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -10 is out of balance!  Left child has height 3, and right child has height 1.)
Expected: true
Balance error!
Tree was: 
                                                                                             [19]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [12]                                                                                            [24]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [04]                                            [16]                                            [21]                                            [26]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [02]                    [08]                    [14]                    [18]                    [20]                    [22]                    [25]                    [27]
     ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘                                                  └───┐                                                            
   [01]        [03]        [06]        [10]        [13]        [15]        [17]                                                        [23]                                                
                          ┌┘  └┐      ┌┘  └┐                                                                                                                                                      
                        [05]  [07]  [09]  [11]                                                                                                                                                

Tree Placeholders:------------------
[01] -> (-143, -143)
[02] -> (-118, -118)
[03] -> (-114, -114)
[04] -> (-113, -113)
[05] -> (-103, -103)
[06] -> (-76, -76)
[07] -> (-44, -44)
[08] -> (-17, -17)
[09] -> (-10, -10)
[10] -> (3, 3)
[11] -> (9, 9)
[12] -> (11, 11)
[13] -> (13, 13)
[14] -> (24, 24)
[15] -> (25, 25)
[16] -> (38, 38)
[17] -> (49, 49)
[18] -> (65, 65)
[19] -> (81, 81)
[20] -> (94, 94)
[21] -> (103, 103)
[22] -> (106, 106)
[23] -> (108, 108)
[24] -> (114, 114)
[25] -> (122, 122)
[26] -> (140, 140)
[27] -> (142, 142)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -113 is out of balance!  Left child has height 2, and right child has height 4.)
Expected: true
Balance error!
Tree was: 
                                                                                             [06]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [03]                                                                                            [07]
                       ┌─────────────────────┘  └─────────────────────┐                                                                         └─────────────────────┐                                                
                     [01]                                            [05]                                                                                            [13]
                        └─────────┐                        ┌─────────┘                                                                                     ┌─────────┘  └─────────┐                        
                                 [02]                    [04]                                                                                            [11]                    [17]
                                                                                                                                                     ┌───┘  └───┐            ┌───┘  └───┐            
                                                                                                                                                   [09]        [12]        [15]        [19]
                                                                                                                                                  ┌┘  └┐                  ┌┘  └┐      ┌┘  └┐      
                                                                                                                                                [08]  [10]              [14]  [16]  [18]  [20]

Tree Placeholders:------------------
[01] -> (-139, -139)
[02] -> (-122, -122)
[03] -> (-118, -118)
[04] -> (-107, -107)
[05] -> (-96, -96)
[06] -> (-88, -88)
[07] -> (-87, -87)
[08] -> (-83, -83)
[09] -> (-64, -64)
[10] -> (-26, -26)
[11] -> (-9, -9)
[12] -> (6, 6)
[13] -> (8, 8)
[14] -> (12, 12)
[15] -> (23, 23)
[16] -> (46, 46)
[17] -> (54, 54)
[18] -> (78, 78)
[19] -> (92, 92)
[20] -> (122, 122)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -9 is out of balance!  Left child has height 3, and right child has height 1.)
Expected: true
Balance error!
Tree was: 
                                                                                             [10]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [08]                                                                                            [15]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [05]                                            [09]                                            [12]                                            [19]
           ┌─────────┘  └─────────┐                                                                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [01]                    [07]                                                                    [11]                    [14]                    [17]                    [21]
            └───┐            ┌───┘                                                                                           ┌───┘                   ┌───┘  └───┐            ┌───┘  └───┐            
               [03]        [06]                                                                                            [13]                    [16]        [18]        [20]        [22]
              ┌┘  └┐                                                                                                                                                                              
            [02]  [04]                                                                                                                                                                        

Tree Placeholders:------------------
[01] -> (-147, -147)
[02] -> (-119, -119)
[03] -> (-92, -92)
[04] -> (-69, -69)
[05] -> (-36, -36)
[06] -> (-26, -26)
[07] -> (-10, -10)
[08] -> (5, 5)
[09] -> (6, 6)
[10] -> (13, 13)
[11] -> (40, 40)
[12] -> (42, 42)
[13] -> (51, 51)
[14] -> (53, 53)
[15] -> (59, 59)
[16] -> (61, 61)
[17] -> (63, 63)
[18] -> (68, 68)
[19] -> (103, 103)
[20] -> (108, 108)
[21] -> (124, 124)
[22] -> (137, 137)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -147 is out of balance!  Left child has height 0, and right child has height 4.)
Expected: true
Balance error!
Tree was: 
                                                                                             [14]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [10]                                                                                            [16]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [05]                                            [12]                                            [15]                                            [18]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                                                        ┌─────────┘  └─────────┐                        
         [01]                    [08]                    [11]                    [13]                                                                    [17]                    [19]
            └───┐            ┌───┘  └───┐                                                                                                                                                            
               [03]        [07]        [09]                                                                                                                                                
              ┌┘  └┐      ┌┘                                                                                                                                                                      
            [02]  [04]  [06]                                                                                                                                                                  

Tree Placeholders:------------------
[01] -> (-140, -140)
[02] -> (-96, -96)
[03] -> (-49, -49)
[04] -> (5, 5)
[05] -> (32, 32)
[06] -> (62, 62)
[07] -> (66, 66)
[08] -> (78, 78)
[09] -> (83, 83)
[10] -> (89, 89)
[11] -> (93, 93)
[12] -> (94, 94)
[13] -> (99, 99)
[14] -> (103, 103)
[15] -> (119, 119)
[16] -> (120, 120)
[17] -> (126, 126)
[18] -> (145, 145)
[19] -> (148, 148)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -140 is out of balance!  Left child has height 0, and right child has height 4.)
Expected: true
Balance error!
Tree was: 
                                                                                             [12]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [04]                                                                                            [15]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [02]                                            [09]                                            [13]                                            [20]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                     └─────────┐                        ┌─────────┘  └─────────┐                        
         [01]                    [03]                    [08]                    [10]                                            [14]                    [17]                    [24]
                                                     ┌───┘                          └───┐                                                            ┌───┘  └───┐            ┌───┘  └───┐            
                                                   [06]                                [11]                                                        [16]        [18]        [22]        [26]
                                                  ┌┘  └┐                                                                                                          └┐      ┌┘  └┐      ┌┘  └┐      
                                                [05]  [07]                                                                                                        [19]  [21]  [23]  [25]  [27]

Tree Placeholders:------------------
[01] -> (-150, -150)
[02] -> (-142, -142)
[03] -> (-137, -137)
[04] -> (-117, -117)
[05] -> (-102, -102)
[06] -> (-73, -73)
[07] -> (-66, -66)
[08] -> (-61, -61)
[09] -> (-56, -56)
[10] -> (-55, -55)
[11] -> (-43, -43)
[12] -> (-40, -40)
[13] -> (-30, -30)
[14] -> (-29, -29)
[15] -> (-27, -27)
[16] -> (-21, -21)
[17] -> (-18, -18)
[18] -> (-9, -9)
[19] -> (-1, -1)
[20] -> (6, 6)
[21] -> (18, 18)
[22] -> (22, 22)
[23] -> (39, 39)
[24] -> (96, 96)
[25] -> (99, 99)
[26] -> (132, 132)
[27] -> (137, 137)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -61 is out of balance!  Left child has height 3, and right child has height 0.)
Expected: true
Balance error!
Tree was: 
                                                                                             [10]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [04]                                                                                            [23]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [02]                                            [06]                                            [17]                                            [25]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [01]                    [03]                    [05]                    [08]                    [14]                    [21]                    [24]                    [27]
                                                                             ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐                                    ┌───┘  └───┐            
                                                                           [07]        [09]        [12]        [16]        [19]        [22]                                [26]        [28]
                                                                                                  ┌┘  └┐      ┌┘          ┌┘  └┐                                                                  
                                                                                                [11]  [13]  [15]        [18]  [20]                                                            

Tree Placeholders:------------------
[01] -> (-125, -125)
[02] -> (-112, -112)
[03] -> (-111, -111)
[04] -> (-95, -95)
[05] -> (-92, -92)
[06] -> (-71, -71)
[07] -> (-64, -64)
[08] -> (-61, -61)
[09] -> (-57, -57)
[10] -> (-39, -39)
[11] -> (-10, -10)
[12] -> (-9, -9)
[13] -> (-2, -2)
[14] -> (-1, -1)
[15] -> (12, 12)
[16] -> (21, 21)
[17] -> (31, 31)
[18] -> (61, 61)
[19] -> (74, 74)
[20] -> (86, 86)
[21] -> (95, 95)
[22] -> (115, 115)
[23] -> (130, 130)
[24] -> (133, 133)
[25] -> (134, 134)
[26] -> (135, 135)
[27] -> (137, 137)
[28] -> (143, 143)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at 95 is out of balance!  Left child has height 3, and right child has height 1.)
Expected: true
Balance error!
Tree was: 
                                                                                             [08]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [05]                                                                                            [18]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [02]                                            [07]                                            [13]                                            [22]
           ┌─────────┘  └─────────┐                        ┌─────────┘                                     ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [01]                    [04]                    [06]                                            [10]                    [15]                    [20]                    [24]
                             ┌───┘                                                                   ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            
                           [03]                                                                    [09]        [11]        [14]        [16]        [19]        [21]        [23]        [26]
                                                                                                                  └┐                      └┐                                          ┌┘  └┐      
                                                                                                                  [12]                    [17]                                      [25]  [27]

Tree Placeholders:------------------
[01] -> (-142, -142)
[02] -> (-133, -133)
[03] -> (-129, -129)
[04] -> (-127, -127)
[05] -> (-121, -121)
[06] -> (-92, -92)
[07] -> (-83, -83)
[08] -> (-76, -76)
[09] -> (-69, -69)
[10] -> (-65, -65)
[11] -> (-53, -53)
[12] -> (-36, -36)
[13] -> (-32, -32)
[14] -> (-17, -17)
[15] -> (-5, -5)
[16] -> (-1, -1)
[17] -> (8, 8)
[18] -> (25, 25)
[19] -> (26, 26)
[20] -> (62, 62)
[21] -> (75, 75)
[22] -> (93, 93)
[23] -> (102, 102)
[24] -> (113, 113)
[25] -> (121, 121)
[26] -> (127, 127)
[27] -> (134, 134)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -53 is out of balance!  Left child has height 0, and right child has height 2.)
Expected: true
Balance error!
Tree was: 
                                                                                             [15]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [06]                                                                                            [19]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [03]                                            [11]                                            [17]                                            [24]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [01]                    [04]                    [09]                    [13]                    [16]                    [18]                    [23]                    [26]
            └───┐                   └───┐            ┌───┘  └───┐            ┌───┘  └───┐                                                            ┌───┘                   ┌───┘  └───┐            
               [02]                    [05]        [08]        [10]        [12]        [14]                                                        [21]                    [25]        [27]
                                                  ┌┘                                                                                              ┌┘  └┐                                  └┐      
                                                [07]                                                                                            [20]  [22]                                [28]

Tree Placeholders:------------------
[01] -> (-147, -147)
[02] -> (-139, -139)
[03] -> (-138, -138)
[04] -> (-118, -118)
[05] -> (-88, -88)
[06] -> (-80, -80)
[07] -> (-61, -61)
[08] -> (-59, -59)
[09] -> (-49, -49)
[10] -> (-48, -48)
[11] -> (-39, -39)
[12] -> (-36, -36)
[13] -> (-25, -25)
[14] -> (-19, -19)
[15] -> (-12, -12)
[16] -> (-10, -10)
[17] -> (-1, -1)
[18] -> (25, 25)
[19] -> (26, 26)
[20] -> (46, 46)
[21] -> (49, 49)
[22] -> (83, 83)
[23] -> (113, 113)
[24] -> (123, 123)
[25] -> (131, 131)
[26] -> (132, 132)
[27] -> (149, 149)
[28] -> (150, 150)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at 113 is out of balance!  Left child has height 3, and right child has height 0.)
Expected: true
Balance error!
Tree was: 
                                                                                             [26]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [11]                                                                                            [28]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [05]                                            [18]                                            [27]                                            [29]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                                                                                                        
         [02]                    [09]                    [15]                    [22]                                                                                                
     ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐                                                                                                            
   [01]        [03]        [07]        [10]        [13]        [16]        [20]        [24]                                                                                                
                  └┐      ┌┘  └┐                  ┌┘  └┐          └┐      ┌┘  └┐      ┌┘  └┐                                                                                                      
                  [04]  [06]  [08]              [12]  [14]        [17]  [19]  [21]  [23]  [25]                                                                                                

Tree Placeholders:------------------
[01] -> (-140, -140)
[02] -> (-100, -100)
[03] -> (-99, -99)
[04] -> (-96, -96)
[05] -> (-88, -88)
[06] -> (-85, -85)
[07] -> (-83, -83)
[08] -> (-82, -82)
[09] -> (-56, -56)
[10] -> (-55, -55)
[11] -> (-50, -50)
[12] -> (-48, -48)
[13] -> (-34, -34)
[14] -> (-29, -29)
[15] -> (-26, -26)
[16] -> (-16, -16)
[17] -> (-15, -15)
[18] -> (-4, -4)
[19] -> (0, 0)
[20] -> (18, 18)
[21] -> (36, 36)
[22] -> (41, 41)
[23] -> (74, 74)
[24] -> (87, 87)
[25] -> (100, 100)
[26] -> (134, 134)
[27] -> (137, 137)
[28] -> (141, 141)
[29] -> (144, 144)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at 134 is out of balance!  Left child has height 6, and right child has height 2.)
Expected: true
Balance error!
Tree was: 
                                                                                             [17]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [09]                                                                                            [26]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [05]                                            [14]                                            [20]                                            [27]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                     └─────────┐                        
         [03]                    [07]                    [11]                    [15]                    [19]                    [22]                                            [28]
     ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐                   └───┐            ┌───┘                   ┌───┘  └───┐                                                            
   [02]        [04]        [06]        [08]        [10]        [12]                    [16]        [18]                    [21]        [24]                                                
  ┌┘                                                              └┐                                                                  ┌┘  └┐                                                      
[01]                                                              [13]                                                              [23]  [25]                                                

Tree Placeholders:------------------
[01] -> (-149, -149)
[02] -> (-130, -130)
[03] -> (-119, -119)
[04] -> (-112, -112)
[05] -> (-109, -109)
[06] -> (-92, -92)
[07] -> (-91, -91)
[08] -> (-66, -66)
[09] -> (-58, -58)
[10] -> (-57, -57)
[11] -> (-17, -17)
[12] -> (-11, -11)
[13] -> (7, 7)
[14] -> (22, 22)
[15] -> (24, 24)
[16] -> (25, 25)
[17] -> (32, 32)
[18] -> (36, 36)
[19] -> (38, 38)
[20] -> (39, 39)
[21] -> (55, 55)
[22] -> (62, 62)
[23] -> (74, 74)
[24] -> (76, 76)
[25] -> (88, 88)
[26] -> (120, 120)
[27] -> (134, 134)
[28] -> (140, 140)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at 62 is out of balance!  Left child has height 1, and right child has height 3.)
Expected: true
Balance error!
Tree was: 
                                                                                             [11]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [02]                                                                                            [17]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [01]                                            [08]                                            [15]                                            [20]
                                                           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
                                                         [06]                    [10]                    [12]                    [16]                    [19]                    [24]
                                                     ┌───┘  └───┐            ┌───┘                          └───┐                                    ┌───┘                   ┌───┘  └───┐            
                                                   [04]        [07]        [09]                                [13]                                [18]                    [22]        [26]
                                                  ┌┘  └┐                                                          └┐                                                      ┌┘  └┐      ┌┘  └┐      
                                                [03]  [05]                                                        [14]                                                  [21]  [23]  [25]  [27]

Tree Placeholders:------------------
[01] -> (-149, -149)
[02] -> (-131, -131)
[03] -> (-127, -127)
[04] -> (-126, -126)
[05] -> (-115, -115)
[06] -> (-101, -101)
[07] -> (-100, -100)
[08] -> (-95, -95)
[09] -> (-90, -90)
[10] -> (-80, -80)
[11] -> (-71, -71)
[12] -> (-52, -52)
[13] -> (-28, -28)
[14] -> (-13, -13)
[15] -> (-6, -6)
[16] -> (-2, -2)
[17] -> (-1, -1)
[18] -> (24, 24)
[19] -> (27, 27)
[20] -> (41, 41)
[21] -> (44, 44)
[22] -> (53, 53)
[23] -> (54, 54)
[24] -> (59, 59)
[25] -> (62, 62)
[26] -> (82, 82)
[27] -> (127, 127)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -126 is out of balance!  Left child has height 1, and right child has height 3.)
Expected: true
Balance error!
Tree was: 
                                                                                             [17]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [16]                                                                                            [18]
                       ┌─────────────────────┘                                                                                                                                                                         
                     [08]                                                                                                                                                
           ┌─────────┘  └─────────┐                                                                                                                                                                        
         [04]                    [12]                                                                                                                                                
     ┌───┘  └───┐            ┌───┘  └───┐                                                                                                                                                            
   [02]        [06]        [10]        [14]                                                                                                                                                
  ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐                                                                                                                                                      
[01]  [03]  [05]  [07]  [09]  [11]  [13]  [15]                                                                                                                                                

Tree Placeholders:------------------
[01] -> (-123, -123)
[02] -> (-116, -116)
[03] -> (-113, -113)
[04] -> (-111, -111)
[05] -> (-45, -45)
[06] -> (57, 57)
[07] -> (66, 66)
[08] -> (76, 76)
[09] -> (79, 79)
[10] -> (94, 94)
[11] -> (97, 97)
[12] -> (99, 99)
[13] -> (101, 101)
[14] -> (106, 106)
[15] -> (125, 125)
[16] -> (142, 142)
[17] -> (143, 143)
[18] -> (148, 148)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at 142 is out of balance!  Left child has height 6, and right child has height 0.)
Expected: true
Balance error!
Tree was: 
                                                                                             [06]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [04]                                                                                            [20]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [02]                                            [05]                                            [13]                                            [24]
           ┌─────────┘  └─────────┐                                                                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [01]                    [03]                                                                    [09]                    [17]                    [22]                    [28]
                                                                                                     ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            
                                                                                                   [07]        [11]        [15]        [19]        [21]        [23]        [26]        [30]
                                                                                                      └┐      ┌┘  └┐      ┌┘  └┐      ┌┘                                  ┌┘  └┐      ┌┘          
                                                                                                      [08]  [10]  [12]  [14]  [16]  [18]                                [25]  [27]  [29]      

Tree Placeholders:------------------
[01] -> (-140, -140)
[02] -> (-126, -126)
[03] -> (-118, -118)
[04] -> (-109, -109)
[05] -> (-102, -102)
[06] -> (-98, -98)
[07] -> (-79, -79)
[08] -> (-71, -71)
[09] -> (-62, -62)
[10] -> (-57, -57)
[11] -> (-29, -29)
[12] -> (-19, -19)
[13] -> (-14, -14)
[14] -> (-10, -10)
[15] -> (17, 17)
[16] -> (19, 19)
[17] -> (35, 35)
[18] -> (54, 54)
[19] -> (60, 60)
[20] -> (67, 67)
[21] -> (69, 69)
[22] -> (73, 73)
[23] -> (82, 82)
[24] -> (93, 93)
[25] -> (95, 95)
[26] -> (96, 96)
[27] -> (107, 107)
[28] -> (128, 128)
[29] -> (132, 132)
[30] -> (144, 144)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -98 is out of balance!  Left child has height 3, and right child has height 5.)
Expected: true
Balance error!
Tree was: 
                                                                                             [08]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [02]                                                                                            [19]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [01]                                            [04]                                            [16]                                            [22]
                                                           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
                                                         [03]                    [06]                    [12]                    [17]                    [21]                    [26]
                                                                             ┌───┘  └───┐            ┌───┘  └───┐                   └───┐            ┌───┘                   ┌───┘  └───┐            
                                                                           [05]        [07]        [10]        [14]                    [18]        [20]                    [24]        [28]
                                                                                                  ┌┘  └┐      ┌┘  └┐                                                      ┌┘  └┐      ┌┘  └┐      
                                                                                                [09]  [11]  [13]  [15]                                                  [23]  [25]  [27]  [29]

Tree Placeholders:------------------
[01] -> (-135, -135)
[02] -> (-131, -131)
[03] -> (-124, -124)
[04] -> (-121, -121)
[05] -> (-96, -96)
[06] -> (-85, -85)
[07] -> (-81, -81)
[08] -> (-77, -77)
[09] -> (-56, -56)
[10] -> (-48, -48)
[11] -> (-46, -46)
[12] -> (-33, -33)
[13] -> (-18, -18)
[14] -> (-9, -9)
[15] -> (-7, -7)
[16] -> (2, 2)
[17] -> (3, 3)
[18] -> (7, 7)
[19] -> (28, 28)
[20] -> (30, 30)
[21] -> (51, 51)
[22] -> (60, 60)
[23] -> (105, 105)
[24] -> (117, 117)
[25] -> (119, 119)
[26] -> (123, 123)
[27] -> (131, 131)
[28] -> (141, 141)
[29] -> (143, 143)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -131 is out of balance!  Left child has height 1, and right child has height 3.)
Expected: true
Balance error!
Tree was: 
                                                                                             [13]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [03]                                                                                            [14]
                       ┌─────────────────────┘  └─────────────────────┐                                                                         └─────────────────────┐                                                
                     [02]                                            [08]                                                                                            [22]
           ┌─────────┘                                     ┌─────────┘  └─────────┐                                                                        ┌─────────┘  └─────────┐                        
         [01]                                            [05]                    [12]                                                                    [18]                    [25]
                                                     ┌───┘  └───┐            ┌───┘                                                                   ┌───┘  └───┐            ┌───┘  └───┐            
                                                   [04]        [07]        [10]                                                                    [16]        [20]        [24]        [27]
                                                              ┌┘          ┌┘  └┐                                                                  ┌┘  └┐      ┌┘  └┐      ┌┘          ┌┘          
                                                            [06]        [09]  [11]                                                              [15]  [17]  [19]  [21]  [23]        [26]      

Tree Placeholders:------------------
[01] -> (-143, -143)
[02] -> (-140, -140)
[03] -> (-133, -133)
[04] -> (-125, -125)
[05] -> (-113, -113)
[06] -> (-88, -88)
[07] -> (-64, -64)
[08] -> (-58, -58)
[09] -> (-44, -44)
[10] -> (1, 1)
[11] -> (7, 7)
[12] -> (8, 8)
[13] -> (11, 11)
[14] -> (15, 15)
[15] -> (16, 16)
[16] -> (19, 19)
[17] -> (28, 28)
[18] -> (32, 32)
[19] -> (48, 48)
[20] -> (74, 74)
[21] -> (75, 75)
[22] -> (77, 77)
[23] -> (85, 85)
[24] -> (114, 114)
[25] -> (121, 121)
[26] -> (147, 147)
[27] -> (150, 150)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at 1 is out of balance!  Left child has height 3, and right child has height 1.)
Expected: true
Balance error!
Tree was: 
                                                                                             [15]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [11]                                                                                            [17]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [03]                                            [13]                                            [16]                                            [19]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                                                        ┌─────────┘  └─────────┐                        
         [02]                    [07]                    [12]                    [14]                                                                    [18]                    [20]
     ┌───┘                   ┌───┘  └───┐                                                                                                                                                            
   [01]                    [05]        [09]                                                                                                                                                
                          ┌┘  └┐      ┌┘  └┐                                                                                                                                                      
                        [04]  [06]  [08]  [10]                                                                                                                                                

Tree Placeholders:------------------
[01] -> (-149, -149)
[02] -> (-142, -142)
[03] -> (-141, -141)
[04] -> (-129, -129)
[05] -> (-56, -56)
[06] -> (-13, -13)
[07] -> (1, 1)
[08] -> (4, 4)
[09] -> (39, 39)
[10] -> (51, 51)
[11] -> (58, 58)
[12] -> (60, 60)
[13] -> (69, 69)
[14] -> (73, 73)
[15] -> (82, 82)
[16] -> (95, 95)
[17] -> (102, 102)
[18] -> (112, 112)
[19] -> (126, 126)
[20] -> (137, 137)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -129 is out of balance!  Left child has height 1, and right child has height 3.)
Expected: true
Balance error!
Tree was: 
                                                                                             [11]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [04]                                                                                            [16]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [02]                                            [07]                                            [13]                                            [23]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [01]                    [03]                    [05]                    [09]                    [12]                    [14]                    [19]                    [24]
                                                            └───┐            ┌───┘  └───┐                                           └───┐            ┌───┘  └───┐                   └───┐            
                                                               [06]        [08]        [10]                                            [15]        [18]        [21]                    [26]
                                                                                                                                                  ┌┘          ┌┘  └┐                  ┌┘          
                                                                                                                                                [17]        [20]  [22]              [25]      

Tree Placeholders:------------------
[01] -> (-148, -148)
[02] -> (-140, -140)
[03] -> (-136, -136)
[04] -> (-135, -135)
[05] -> (-107, -107)
[06] -> (-103, -103)
[07] -> (-95, -95)
[08] -> (-93, -93)
[09] -> (-92, -92)
[10] -> (-76, -76)
[11] -> (-73, -73)
[12] -> (-59, -59)
[13] -> (-50, -50)
[14] -> (-44, -44)
[15] -> (-37, -37)
[16] -> (-35, -35)
[17] -> (-27, -27)
[18] -> (-21, -21)
[19] -> (-8, -8)
[20] -> (33, 33)
[21] -> (45, 45)
[22] -> (61, 61)
[23] -> (77, 77)
[24] -> (100, 100)
[25] -> (116, 116)
[26] -> (120, 120)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at 45 is out of balance!  Left child has height 1, and right child has height 3.)
Expected: true
[  FAILED  ] AVLInsert.Random50x30ele (1763 ms)
[----------] 1 test from AVLInsert (1776 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1824 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] AVLInsert.Random50x30ele

 1 FAILED TEST
==12035== 
==12035== HEAP SUMMARY:
==12035==     in use at exit: 0 bytes in 0 blocks
==12035==   total heap usage: 12,627 allocs, 12,627 frees, 1,467,400 bytes allocated
==12035== 
==12035== All heap blocks were freed -- no leaks are possible
==12035== 
==12035== For counts of detected and suppressed errors, rerun with: -v
==12035== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   2.99 sec
----------------------------------------------------------
Test Failed.
"AVLInsert.Random50x30ele" end time: Nov 16 06:07 UTC
"AVLInsert.Random50x30ele" time elapsed: 00:00:02
----------------------------------------------------------

50/65 Testing: AVLInsert.Random3x1000ele
50/65 Test: AVLInsert.Random3x1000ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLInsert.Random3x1000ele"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLInsert.Random3x1000ele" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12036== Memcheck, a memory error detector
==12036== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12036== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12036== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLInsert.Random3x1000ele
==12036== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.Random3x1000ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.Random3x1000ele
Balance error!
Tree was: 
                                                                                             [32]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [16]                                                                                            [48]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [08]                                            [24]                                            [40]                                            [56]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [04]                    [12]                    [20]                    [28]                    [36]                    [44]                    [52]                    [60]
     ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            
   [02]        [06]        [10]        [14]        [18]        [22]        [26]        [30]        [34]        [38]        [42]        [46]        [50]        [54]        [58]        [62]
  ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      
[01]  [03]  [05]  [07]  [09]  [11]  [13]  [15]  [17]  [19]  [21]  [23]  [25]  [27]  [29]  [31]  [33]  [35]  [37]  [39]  [41]  [43]  [45]  [47]  [49]  [51]  [53]  [55]  [57]  [59]  [61]  [63]

Tree Placeholders:------------------
[01] -> (-4953, -4953)
[02] -> (-4858, -4858)
[03] -> (-4800, -4800)
[04] -> (-4791, -4791)
[05] -> (-4759, -4759)
[06] -> (-4750, -4750)
[07] -> (-4491, -4491)
[08] -> (-4426, -4426)
[09] -> (-4410, -4410)
[10] -> (-4374, -4374)
[11] -> (-4322, -4322)
[12] -> (-4198, -4198)
[13] -> (-3801, -3801)
[14] -> (-3786, -3786)
[15] -> (-3538, -3538)
[16] -> (-3266, -3266)
[17] -> (-3042, -3042)
[18] -> (-2927, -2927)
[19] -> (-2555, -2555)
[20] -> (-2161, -2161)
[21] -> (-2101, -2101)
[22] -> (-1905, -1905)
[23] -> (-1727, -1727)
[24] -> (-1652, -1652)
[25] -> (-1576, -1576)
[26] -> (-1126, -1126)
[27] -> (-1047, -1047)
[28] -> (-739, -739)
[29] -> (-665, -665)
[30] -> (-620, -620)
[31] -> (-591, -591)
[32] -> (-546, -546)
[33] -> (-514, -514)
[34] -> (-468, -468)
[35] -> (-432, -432)
[36] -> (-398, -398)
[37] -> (-375, -375)
[38] -> (-360, -360)
[39] -> (-193, -193)
[40] -> (-53, -53)
[41] -> (-41, -41)
[42] -> (106, 106)
[43] -> (292, 292)
[44] -> (570, 570)
[45] -> (582, 582)
[46] -> (611, 611)
[47] -> (640, 640)
[48] -> (770, 770)
[49] -> (870, 870)
[50] -> (973, 973)
[51] -> (1008, 1008)
[52] -> (1072, 1072)
[53] -> (1309, 1309)
[54] -> (1335, 1335)
[55] -> (1623, 1623)
[56] -> (2155, 2155)
[57] -> (2962, 2962)
[58] -> (3967, 3967)
[59] -> (4337, 4337)
[60] -> (4403, 4403)
[61] -> (4566, 4566)
[62] -> (4607, 4607)
[63] -> (4891, 4891)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:175: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -4800 is out of balance!  Left child has height 4, and right child has height 0.)
Expected: true
Balance error!
Tree was: 
                                                                                             [31]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [16]                                                                                            [45]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [08]                                            [24]                                            [37]                                            [53]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [04]                    [12]                    [20]                    [28]                    [34]                    [41]                    [49]                    [57]
     ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            
   [02]        [06]        [10]        [14]        [18]        [22]        [26]        [29]        [32]        [36]        [39]        [43]        [47]        [51]        [55]        [59]
  ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐          └┐          └┐      ┌┘          ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      
[01]  [03]  [05]  [07]  [09]  [11]  [13]  [15]  [17]  [19]  [21]  [23]  [25]  [27]        [30]        [33]  [35]        [38]  [40]  [42]  [44]  [46]  [48]  [50]  [52]  [54]  [56]  [58]  [60]

Tree Placeholders:------------------
[01] -> (-4960, -4960)
[02] -> (-4959, -4959)
[03] -> (-4953, -4953)
[04] -> (-4948, -4948)
[05] -> (-4822, -4822)
[06] -> (-4614, -4614)
[07] -> (-4284, -4284)
[08] -> (-4125, -4125)
[09] -> (-4108, -4108)
[10] -> (-4088, -4088)
[11] -> (-4077, -4077)
[12] -> (-4076, -4076)
[13] -> (-4025, -4025)
[14] -> (-3899, -3899)
[15] -> (-3846, -3846)
[16] -> (-3751, -3751)
[17] -> (-3300, -3300)
[18] -> (-3074, -3074)
[19] -> (-3019, -3019)
[20] -> (-2963, -2963)
[21] -> (-2958, -2958)
[22] -> (-2942, -2942)
[23] -> (-2845, -2845)
[24] -> (-2421, -2421)
[25] -> (-1880, -1880)
[26] -> (-1684, -1684)
[27] -> (-1675, -1675)
[28] -> (-1669, -1669)
[29] -> (-1666, -1666)
[30] -> (-1648, -1648)
[31] -> (2782, 2782)
[32] -> (2791, 2791)
[33] -> (2802, 2802)
[34] -> (2805, 2805)
[35] -> (2815, 2815)
[36] -> (2823, 2823)
[37] -> (2825, 2825)
[38] -> (2843, 2843)
[39] -> (2878, 2878)
[40] -> (2903, 2903)
[41] -> (2912, 2912)
[42] -> (2915, 2915)
[43] -> (2920, 2920)
[44] -> (2932, 2932)
[45] -> (2958, 2958)
[46] -> (3191, 3191)
[47] -> (3230, 3230)
[48] -> (3306, 3306)
[49] -> (3370, 3370)
[50] -> (3559, 3559)
[51] -> (3626, 3626)
[52] -> (3869, 3869)
[53] -> (4119, 4119)
[54] -> (4204, 4204)
[55] -> (4210, 4210)
[56] -> (4247, 4247)
[57] -> (4325, 4325)
[58] -> (4363, 4363)
[59] -> (4428, 4428)
[60] -> (4592, 4592)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:175: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -4843 is out of balance!  Left child has height 3, and right child has height 1.)
Expected: true
Balance error!
Tree was: 
                                                                                             [32]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [16]                                                                                            [48]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [08]                                            [24]                                            [40]                                            [56]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                        
         [04]                    [12]                    [20]                    [28]                    [36]                    [44]                    [52]                    [60]
     ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            
   [02]        [06]        [10]        [14]        [18]        [22]        [26]        [30]        [34]        [38]        [42]        [46]        [50]        [54]        [58]        [62]
  ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      ┌┘  └┐      
[01]  [03]  [05]  [07]  [09]  [11]  [13]  [15]  [17]  [19]  [21]  [23]  [25]  [27]  [29]  [31]  [33]  [35]  [37]  [39]  [41]  [43]  [45]  [47]  [49]  [51]  [53]  [55]  [57]  [59]  [61]  [63]

Tree Placeholders:------------------
[01] -> (-4949, -4949)
[02] -> (-4860, -4860)
[03] -> (-4724, -4724)
[04] -> (-4670, -4670)
[05] -> (-4548, -4548)
[06] -> (-4520, -4520)
[07] -> (-4247, -4247)
[08] -> (-4184, -4184)
[09] -> (-4062, -4062)
[10] -> (-3969, -3969)
[11] -> (-3780, -3780)
[12] -> (-3669, -3669)
[13] -> (-3600, -3600)
[14] -> (-3352, -3352)
[15] -> (-3295, -3295)
[16] -> (-3152, -3152)
[17] -> (-3040, -3040)
[18] -> (-3004, -3004)
[19] -> (-2842, -2842)
[20] -> (-2775, -2775)
[21] -> (-2618, -2618)
[22] -> (-2482, -2482)
[23] -> (-2459, -2459)
[24] -> (-2285, -2285)
[25] -> (-2240, -2240)
[26] -> (-2079, -2079)
[27] -> (-1857, -1857)
[28] -> (-1663, -1663)
[29] -> (-1235, -1235)
[30] -> (-1139, -1139)
[31] -> (-1055, -1055)
[32] -> (-962, -962)
[33] -> (-408, -408)
[34] -> (-246, -246)
[35] -> (-74, -74)
[36] -> (27, 27)
[37] -> (314, 314)
[38] -> (394, 394)
[39] -> (397, 397)
[40] -> (406, 406)
[41] -> (425, 425)
[42] -> (427, 427)
[43] -> (456, 456)
[44] -> (459, 459)
[45] -> (480, 480)
[46] -> (492, 492)
[47] -> (516, 516)
[48] -> (529, 529)
[49] -> (1768, 1768)
[50] -> (1843, 1843)
[51] -> (2260, 2260)
[52] -> (3069, 3069)
[53] -> (3075, 3075)
[54] -> (3084, 3084)
[55] -> (3446, 3446)
[56] -> (3867, 3867)
[57] -> (3986, 3986)
[58] -> (4054, 4054)
[59] -> (4368, 4368)
[60] -> (4508, 4508)
[61] -> (4588, 4588)
[62] -> (4869, 4869)
[63] -> (4963, 4963)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_insert.cpp:175: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -4949 is out of balance!  Left child has height 2, and right child has height 4.)
Expected: true
[  FAILED  ] AVLInsert.Random3x1000ele (2187 ms)
[----------] 1 test from AVLInsert (2200 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (2249 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] AVLInsert.Random3x1000ele

 1 FAILED TEST
==12036== 
==12036== HEAP SUMMARY:
==12036==     in use at exit: 0 bytes in 0 blocks
==12036==   total heap usage: 7,395 allocs, 7,395 frees, 619,447 bytes allocated
==12036== 
==12036== All heap blocks were freed -- no leaks are possible
==12036== 
==12036== For counts of detected and suppressed errors, rerun with: -v
==12036== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   3.43 sec
----------------------------------------------------------
Test Failed.
"AVLInsert.Random3x1000ele" end time: Nov 16 06:07 UTC
"AVLInsert.Random3x1000ele" time elapsed: 00:00:03
----------------------------------------------------------

51/65 Testing: AVLRemove.EmptyTree
51/65 Test: AVLRemove.EmptyTree
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLRemove.EmptyTree"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLRemove.EmptyTree" start time: Nov 16 06:07 UTC
Output:
----------------------------------------------------------
==12037== Memcheck, a memory error detector
==12037== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12037== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12037== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLRemove.EmptyTree
==12037== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.EmptyTree
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.EmptyTree
[       OK ] AVLRemove.EmptyTree (31 ms)
[----------] 1 test from AVLRemove (42 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (91 ms total)
[  PASSED  ] 1 test.
==12037== 
==12037== HEAP SUMMARY:
==12037==     in use at exit: 0 bytes in 0 blocks
==12037==   total heap usage: 404 allocs, 404 frees, 125,878 bytes allocated
==12037== 
==12037== All heap blocks were freed -- no leaks are possible
==12037== 
==12037== For counts of detected and suppressed errors, rerun with: -v
==12037== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.24 sec
----------------------------------------------------------
Test Passed.
"AVLRemove.EmptyTree" end time: Nov 16 06:08 UTC
"AVLRemove.EmptyTree" time elapsed: 00:00:01
----------------------------------------------------------

52/65 Testing: AVLRemove.NodeMismatch
52/65 Test: AVLRemove.NodeMismatch
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLRemove.NodeMismatch"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLRemove.NodeMismatch" start time: Nov 16 06:08 UTC
Output:
----------------------------------------------------------
==12038== Memcheck, a memory error detector
==12038== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12038== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12038== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLRemove.NodeMismatch
==12038== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.NodeMismatch
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.NodeMismatch
[       OK ] AVLRemove.NodeMismatch (112 ms)
[----------] 1 test from AVLRemove (123 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (172 ms total)
[  PASSED  ] 1 test.
==12038== 
==12038== HEAP SUMMARY:
==12038==     in use at exit: 0 bytes in 0 blocks
==12038==   total heap usage: 408 allocs, 408 frees, 126,312 bytes allocated
==12038== 
==12038== All heap blocks were freed -- no leaks are possible
==12038== 
==12038== For counts of detected and suppressed errors, rerun with: -v
==12038== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.34 sec
----------------------------------------------------------
Test Passed.
"AVLRemove.NodeMismatch" end time: Nov 16 06:08 UTC
"AVLRemove.NodeMismatch" time elapsed: 00:00:01
----------------------------------------------------------

53/65 Testing: AVLRemove.SingleRemove
53/65 Test: AVLRemove.SingleRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLRemove.SingleRemove"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLRemove.SingleRemove" start time: Nov 16 06:08 UTC
Output:
----------------------------------------------------------
==12039== Memcheck, a memory error detector
==12039== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12039== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12039== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLRemove.SingleRemove
==12039== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.SingleRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.SingleRemove
==12039== Conditional jump or move depends on uninitialised value(s)
==12039==    at 0x15EB23: AVLTree<int, double>::remove(int const&) (avlbst.h:492)
==12039==    by 0x150A0A: AVLRemove_SingleRemove_Test::TestBody() (test_remove.cpp:35)
==12039==    by 0x1ACD3A: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039==    by 0x1A72CE: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039==    by 0x18B681: testing::Test::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039==    by 0x18BFB7: testing::TestInfo::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039==    by 0x18C641: testing::TestCase::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039==    by 0x19350D: testing::internal::UnitTestImpl::RunAllTests() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039==    by 0x1ADE32: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039==    by 0x1A8020: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039==    by 0x1920D1: testing::UnitTest::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039==    by 0x1839B7: RUN_ALL_TESTS() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039== 
==12039== Conditional jump or move depends on uninitialised value(s)
==12039==    at 0x15EB2C: AVLTree<int, double>::remove(int const&) (avlbst.h:492)
==12039==    by 0x150A0A: AVLRemove_SingleRemove_Test::TestBody() (test_remove.cpp:35)
==12039==    by 0x1ACD3A: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039==    by 0x1A72CE: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039==    by 0x18B681: testing::Test::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039==    by 0x18BFB7: testing::TestInfo::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039==    by 0x18C641: testing::TestCase::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039==    by 0x19350D: testing::internal::UnitTestImpl::RunAllTests() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039==    by 0x1ADE32: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039==    by 0x1A8020: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039==    by 0x1920D1: testing::UnitTest::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039==    by 0x1839B7: RUN_ALL_TESTS() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12039== 
[       OK ] AVLRemove.SingleRemove (59 ms)
[----------] 1 test from AVLRemove (71 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (120 ms total)
[  PASSED  ] 1 test.
==12039== 
==12039== HEAP SUMMARY:
==12039==     in use at exit: 0 bytes in 0 blocks
==12039==   total heap usage: 404 allocs, 404 frees, 125,957 bytes allocated
==12039== 
==12039== All heap blocks were freed -- no leaks are possible
==12039== 
==12039== For counts of detected and suppressed errors, rerun with: -v
==12039== Use --track-origins=yes to see where uninitialised values come from
==12039== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.29 sec
----------------------------------------------------------
Test Failed.
"AVLRemove.SingleRemove" end time: Nov 16 06:08 UTC
"AVLRemove.SingleRemove" time elapsed: 00:00:01
----------------------------------------------------------

54/65 Testing: AVLRemove.RightChildRemove
54/65 Test: AVLRemove.RightChildRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLRemove.RightChildRemove"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLRemove.RightChildRemove" start time: Nov 16 06:08 UTC
Output:
----------------------------------------------------------
==12040== Memcheck, a memory error detector
==12040== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12040== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12040== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLRemove.RightChildRemove
==12040== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.RightChildRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.RightChildRemove
[       OK ] AVLRemove.RightChildRemove (135 ms)
[----------] 1 test from AVLRemove (146 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (197 ms total)
[  PASSED  ] 1 test.
==12040== 
==12040== HEAP SUMMARY:
==12040==     in use at exit: 0 bytes in 0 blocks
==12040==   total heap usage: 408 allocs, 408 frees, 126,253 bytes allocated
==12040== 
==12040== All heap blocks were freed -- no leaks are possible
==12040== 
==12040== For counts of detected and suppressed errors, rerun with: -v
==12040== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.37 sec
----------------------------------------------------------
Test Passed.
"AVLRemove.RightChildRemove" end time: Nov 16 06:08 UTC
"AVLRemove.RightChildRemove" time elapsed: 00:00:01
----------------------------------------------------------

55/65 Testing: AVLRemove.LeftChildRemove
55/65 Test: AVLRemove.LeftChildRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLRemove.LeftChildRemove"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLRemove.LeftChildRemove" start time: Nov 16 06:08 UTC
Output:
----------------------------------------------------------
==12041== Memcheck, a memory error detector
==12041== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12041== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12041== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLRemove.LeftChildRemove
==12041== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.LeftChildRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.LeftChildRemove
[       OK ] AVLRemove.LeftChildRemove (128 ms)
[----------] 1 test from AVLRemove (139 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (187 ms total)
[  PASSED  ] 1 test.
==12041== 
==12041== HEAP SUMMARY:
==12041==     in use at exit: 0 bytes in 0 blocks
==12041==   total heap usage: 408 allocs, 408 frees, 126,247 bytes allocated
==12041== 
==12041== All heap blocks were freed -- no leaks are possible
==12041== 
==12041== For counts of detected and suppressed errors, rerun with: -v
==12041== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.34 sec
----------------------------------------------------------
Test Passed.
"AVLRemove.LeftChildRemove" end time: Nov 16 06:08 UTC
"AVLRemove.LeftChildRemove" time elapsed: 00:00:01
----------------------------------------------------------

56/65 Testing: AVLRemove.TwoChildrenRemove_3Node
56/65 Test: AVLRemove.TwoChildrenRemove_3Node
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLRemove.TwoChildrenRemove_3Node"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLRemove.TwoChildrenRemove_3Node" start time: Nov 16 06:08 UTC
Output:
----------------------------------------------------------
==12042== Memcheck, a memory error detector
==12042== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12042== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12042== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLRemove.TwoChildrenRemove_3Node
==12042== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.TwoChildrenRemove_3Node
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.TwoChildrenRemove_3Node
[       OK ] AVLRemove.TwoChildrenRemove_3Node (149 ms)
[----------] 1 test from AVLRemove (161 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (211 ms total)
[  PASSED  ] 1 test.
==12042== 
==12042== HEAP SUMMARY:
==12042==     in use at exit: 0 bytes in 0 blocks
==12042==   total heap usage: 408 allocs, 408 frees, 126,370 bytes allocated
==12042== 
==12042== All heap blocks were freed -- no leaks are possible
==12042== 
==12042== For counts of detected and suppressed errors, rerun with: -v
==12042== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.37 sec
----------------------------------------------------------
Test Passed.
"AVLRemove.TwoChildrenRemove_3Node" end time: Nov 16 06:08 UTC
"AVLRemove.TwoChildrenRemove_3Node" time elapsed: 00:00:01
----------------------------------------------------------

57/65 Testing: AVLRemove.TwoChildrenRemove_4Node
57/65 Test: AVLRemove.TwoChildrenRemove_4Node
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLRemove.TwoChildrenRemove_4Node"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLRemove.TwoChildrenRemove_4Node" start time: Nov 16 06:08 UTC
Output:
----------------------------------------------------------
==12043== Memcheck, a memory error detector
==12043== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12043== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12043== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLRemove.TwoChildrenRemove_4Node
==12043== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.TwoChildrenRemove_4Node
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.TwoChildrenRemove_4Node
[       OK ] AVLRemove.TwoChildrenRemove_4Node (165 ms)
[----------] 1 test from AVLRemove (178 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (225 ms total)
[  PASSED  ] 1 test.
==12043== 
==12043== HEAP SUMMARY:
==12043==     in use at exit: 0 bytes in 0 blocks
==12043==   total heap usage: 410 allocs, 410 frees, 126,506 bytes allocated
==12043== 
==12043== All heap blocks were freed -- no leaks are possible
==12043== 
==12043== For counts of detected and suppressed errors, rerun with: -v
==12043== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.40 sec
----------------------------------------------------------
Test Passed.
"AVLRemove.TwoChildrenRemove_4Node" end time: Nov 16 06:08 UTC
"AVLRemove.TwoChildrenRemove_4Node" time elapsed: 00:00:01
----------------------------------------------------------

58/65 Testing: AVLRemove.Random50x30ele
58/65 Test: AVLRemove.Random50x30ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLRemove.Random50x30ele"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLRemove.Random50x30ele" start time: Nov 16 06:08 UTC
Output:
----------------------------------------------------------
==12044== Memcheck, a memory error detector
==12044== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12044== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12044== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLRemove.Random50x30ele
==12044== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.Random50x30ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.Random50x30ele
Balance error!
Tree was: 
                                                                                             [12]
                                               ┌─────────────────────────────────────────────┘  └─────────────────────────────────────────────┐                                                                                                
                                             [05]                                                                                            [21]
                       ┌─────────────────────┘  └─────────────────────┐                                                ┌─────────────────────┘  └─────────────────────┐                                                
                     [02]                                            [08]                                            [13]                                            [26]
           ┌─────────┘  └─────────┐                        ┌─────────┘  └─────────┐                                     └─────────┐                        ┌─────────┘  └─────────┐                        
         [01]                    [04]                    [07]                    [10]                                            [17]                    [23]                    [28]
                             ┌───┘                   ┌───┘                   ┌───┘  └───┐                                    ┌───┘  └───┐            ┌───┘  └───┐            ┌───┘  └───┐            
                           [03]                    [06]                    [09]        [11]                                [15]        [19]        [22]        [24]        [27]        [29]
                                                                                                                          ┌┘  └┐      ┌┘  └┐                      └┐                              
                                                                                                                        [14]  [16]  [18]  [20]                    [25]                        

Tree Placeholders:------------------
[01] -> (-147, -147)
[02] -> (-144, -144)
[03] -> (-142, -142)
[04] -> (-128, -128)
[05] -> (-117, -117)
[06] -> (-96, -96)
[07] -> (-89, -89)
[08] -> (-77, -77)
[09] -> (-73, -73)
[10] -> (-64, -64)
[11] -> (-61, -61)
[12] -> (-53, -53)
[13] -> (-22, -22)
[14] -> (-20, -20)
[15] -> (2, 2)
[16] -> (16, 16)
[17] -> (21, 21)
[18] -> (28, 28)
[19] -> (45, 45)
[20] -> (50, 50)
[21] -> (56, 56)
[22] -> (71, 71)
[23] -> (75, 75)
[24] -> (105, 105)
[25] -> (106, 106)
[26] -> (114, 114)
[27] -> (123, 123)
[28] -> (144, 144)
[29] -> (147, 147)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_remove.cpp:124: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (AVL balance error: subtree rooted at -22 is out of balance!  Left child has height 0, and right child has height 4.)
Expected: true
[  FAILED  ] AVLRemove.Random50x30ele (400 ms)
[----------] 1 test from AVLRemove (413 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (463 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] AVLRemove.Random50x30ele

 1 FAILED TEST
==12044== 
==12044== HEAP SUMMARY:
==12044==     in use at exit: 0 bytes in 0 blocks
==12044==   total heap usage: 816 allocs, 816 frees, 160,331 bytes allocated
==12044== 
==12044== All heap blocks were freed -- no leaks are possible
==12044== 
==12044== For counts of detected and suppressed errors, rerun with: -v
==12044== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.67 sec
----------------------------------------------------------
Test Failed.
"AVLRemove.Random50x30ele" end time: Nov 16 06:08 UTC
"AVLRemove.Random50x30ele" time elapsed: 00:00:01
----------------------------------------------------------

59/65 Testing: AVLStress.InsertRemove
59/65 Test: AVLStress.InsertRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLStress.InsertRemove"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLStress.InsertRemove" start time: Nov 16 06:08 UTC
Output:
----------------------------------------------------------
==12045== Memcheck, a memory error detector
==12045== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12045== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12045== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLStress.InsertRemove
==12045== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLStress.InsertRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLStress
[ RUN      ] AVLStress.InsertRemove
==12045== Conditional jump or move depends on uninitialised value(s)
==12045==    at 0x160D0B: AVLTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (avlbst.h:492)
==12045==    by 0x1536BE: AVLStress_InsertRemove_Test::TestBody() (test_remove.cpp:174)
==12045==    by 0x1ACD3A: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x1A72CE: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x18B681: testing::Test::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x18BFB7: testing::TestInfo::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x18C641: testing::TestCase::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x19350D: testing::internal::UnitTestImpl::RunAllTests() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x1ADE32: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x1A8020: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x1920D1: testing::UnitTest::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x1839B7: RUN_ALL_TESTS() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045== 
==12045== Conditional jump or move depends on uninitialised value(s)
==12045==    at 0x160D14: AVLTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (avlbst.h:492)
==12045==    by 0x1536BE: AVLStress_InsertRemove_Test::TestBody() (test_remove.cpp:174)
==12045==    by 0x1ACD3A: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x1A72CE: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x18B681: testing::Test::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x18BFB7: testing::TestInfo::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x18C641: testing::TestCase::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x19350D: testing::internal::UnitTestImpl::RunAllTests() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x1ADE32: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x1A8020: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x1920D1: testing::UnitTest::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x1839B7: RUN_ALL_TESTS() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045== 
==12045== Invalid read of size 1
==12045==    at 0x164354: AVLNode<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::getBalance() const (avlbst.h:69)
==12045==    by 0x165D80: AVLTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::removeFix(std::shared_ptr<AVLNode<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, char) (avlbst.h:516)
==12045==    by 0x160D4A: AVLTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (avlbst.h:492)
==12045==    by 0x153A48: AVLStress_InsertRemove_Test::TestBody() (test_remove.cpp:181)
==12045==    by 0x1ACD3A: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x1A72CE: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x18B681: testing::Test::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x18BFB7: testing::TestInfo::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x18C641: testing::TestCase::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x19350D: testing::internal::UnitTestImpl::RunAllTests() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x1ADE32: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x1A8020: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==  Address 0x60 is not stack'd, malloc'd or (recently) free'd
==12045== 
==12045== 
==12045== Process terminating with default action of signal 11 (SIGSEGV)
==12045==  Access not within mapped region at address 0x60
==12045==    at 0x164354: AVLNode<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::getBalance() const (avlbst.h:69)
==12045==    by 0x165D80: AVLTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::removeFix(std::shared_ptr<AVLNode<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, char) (avlbst.h:516)
==12045==    by 0x160D4A: AVLTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (avlbst.h:492)
==12045==    by 0x153A48: AVLStress_InsertRemove_Test::TestBody() (test_remove.cpp:181)
==12045==    by 0x1ACD3A: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x1A72CE: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x18B681: testing::Test::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x18BFB7: testing::TestInfo::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x18C641: testing::TestCase::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x19350D: testing::internal::UnitTestImpl::RunAllTests() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x1ADE32: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==    by 0x1A8020: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12045==  If you believe this happened as a result of a stack
==12045==  overflow in your program's main thread (unlikely but
==12045==  possible), you can try to increase the size of the
==12045==  main thread stack using the --main-stacksize= flag.
==12045==  The main thread stack size used in this run was 8388608.
==12045== 
==12045== HEAP SUMMARY:
==12045==     in use at exit: 10,890 bytes in 113 blocks
==12045==   total heap usage: 403 allocs, 290 frees, 123,637 bytes allocated
==12045== 
==12045== LEAK SUMMARY:
==12045==    definitely lost: 0 bytes in 0 blocks
==12045==    indirectly lost: 0 bytes in 0 blocks
==12045==      possibly lost: 0 bytes in 0 blocks
==12045==    still reachable: 10,890 bytes in 113 blocks
==12045==         suppressed: 0 bytes in 0 blocks
==12045== Reachable blocks (those to which a pointer was found) are not shown.
==12045== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==12045== 
==12045== For counts of detected and suppressed errors, rerun with: -v
==12045== Use --track-origins=yes to see where uninitialised values come from
==12045== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.31 sec
----------------------------------------------------------
Test Failed.
"AVLStress.InsertRemove" end time: Nov 16 06:08 UTC
"AVLStress.InsertRemove" time elapsed: 00:00:01
----------------------------------------------------------

60/65 Testing: AVLStress.Remove
60/65 Test: AVLStress.Remove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests" "--gtest_filter=AVLStress.Remove"
Directory: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests
"AVLStress.Remove" start time: Nov 16 06:08 UTC
Output:
----------------------------------------------------------
==12046== Memcheck, a memory error detector
==12046== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12046== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12046== Command: /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests --gtest_filter=AVLStress.Remove
==12046== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLStress.Remove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLStress
[ RUN      ] AVLStress.Remove
Before any removals, tree is: 
         [02]
     ┌───┘  └───┐            
   [01]        [04]
              ┌┘  └┐      
            [03]  [05]

Tree Placeholders:------------------
[01] -> (1, -50)
[02] -> (2, 8)
[03] -> (3, 0)
[04] -> (10, 0)
[05] -> (15, 0)

After removing -1 (which doesn't exist), tree is: 
         [02]
     ┌───┘  └───┐            
   [01]        [04]
              ┌┘  └┐      
            [03]  [05]

Tree Placeholders:------------------
[01] -> (1, -50)
[02] -> (2, 8)
[03] -> (3, 0)
[04] -> (10, 0)
[05] -> (15, 0)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_remove.cpp:409: Failure
      Expected: 10
To be equal to: testTree.root_->item_.first
      Which is: 1
Balance error!
Tree was: 
         [01]
            └───┐            
               [03]
              ┌┘  └┐      
            [02]  [04]

Tree Placeholders:------------------
[01] -> (1, -50)
[02] -> (3, 0)
[03] -> (10, 0)
[04] -> (15, 0)

/work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/test_remove.cpp:410: Failure
Value of: verifyAVL(testTree, std::set<int>({1, 3, 10, 15}))
  Actual: false (AVL balance error: subtree rooted at 1 is out of balance!  Left child has height 0, and right child has height 2.)
Expected: true
After removing 2 (the root), tree is: 
         [01]
            └───┐            
               [03]
              ┌┘  └┐      
            [02]  [04]

Tree Placeholders:------------------
[01] -> (1, -50)
[02] -> (3, 0)
[03] -> (10, 0)
[04] -> (15, 0)
==12046== Invalid read of size 1
==12046==    at 0x147E6E: AVLNode<int, int>::getBalance() const (avlbst.h:69)
==12046==    by 0x148FFE: AVLTree<int, int>::removeFix(std::shared_ptr<AVLNode<int, int> >, char) (avlbst.h:516)
==12046==    by 0x149431: AVLTree<int, int>::removeFix(std::shared_ptr<AVLNode<int, int> >, char) (avlbst.h:556)
==12046==    by 0x13F2AC: AVLTree<int, int>::remove(int const&) (avlbst.h:492)
==12046==    by 0x15B16A: AVLStress_Remove_Test::TestBody() (test_remove.cpp:417)
==12046==    by 0x1ACD3A: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12046==    by 0x1A72CE: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12046==    by 0x18B681: testing::Test::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12046==    by 0x18BFB7: testing::TestInfo::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12046==    by 0x18C641: testing::TestCase::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12046==    by 0x19350D: testing::internal::UnitTestImpl::RunAllTests() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12046==    by 0x1ADE32: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12046==  Address 0x40 is not stack'd, malloc'd or (recently) free'd
==12046== 
==12046== 
==12046== Process terminating with default action of signal 11 (SIGSEGV)
==12046==  Access not within mapped region at address 0x40
==12046==    at 0x147E6E: AVLNode<int, int>::getBalance() const (avlbst.h:69)
==12046==    by 0x148FFE: AVLTree<int, int>::removeFix(std::shared_ptr<AVLNode<int, int> >, char) (avlbst.h:516)
==12046==    by 0x149431: AVLTree<int, int>::removeFix(std::shared_ptr<AVLNode<int, int> >, char) (avlbst.h:556)
==12046==    by 0x13F2AC: AVLTree<int, int>::remove(int const&) (avlbst.h:492)
==12046==    by 0x15B16A: AVLStress_Remove_Test::TestBody() (test_remove.cpp:417)
==12046==    by 0x1ACD3A: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12046==    by 0x1A72CE: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12046==    by 0x18B681: testing::Test::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12046==    by 0x18BFB7: testing::TestInfo::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12046==    by 0x18C641: testing::TestCase::Run() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12046==    by 0x19350D: testing::internal::UnitTestImpl::RunAllTests() (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12046==    by 0x1ADE32: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/CSCI-104/hw6/avlbst/hw6_tests/avl_tests/avl_tests)
==12046==  If you believe this happened as a result of a stack
==12046==  overflow in your program's main thread (unlikely but
==12046==  possible), you can try to increase the size of the
==12046==  main thread stack using the --main-stacksize= flag.
==12046==  The main thread stack size used in this run was 8388608.

==12046== 
==12046== HEAP SUMMARY:
==12046==     in use at exit: 11,996 bytes in 124 blocks
==12046==   total heap usage: 590 allocs, 466 frees, 148,066 bytes allocated
==12046== 
==12046== LEAK SUMMARY:
==12046==    definitely lost: 0 bytes in 0 blocks
==12046==    indirectly lost: 0 bytes in 0 blocks
==12046==      possibly lost: 0 bytes in 0 blocks
==12046==    still reachable: 11,996 bytes in 124 blocks
==12046==         suppressed: 0 bytes in 0 blocks
==12046== Reachable blocks (those to which a pointer was found) are not shown.
==12046== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==12046== 
==12046== For counts of detected and suppressed errors, rerun with: -v
==12046== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.47 sec
----------------------------------------------------------
Test Failed.
"AVLStress.Remove" end time: Nov 16 06:08 UTC
"AVLStress.Remove" time elapsed: 00:00:01
----------------------------------------------------------

